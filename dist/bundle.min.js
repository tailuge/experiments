/*! For license information please see bundle.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(self,(()=>(()=>{var __webpack_modules__={603:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return T}else{if(e<=-f)return k;if(e+1>=f)return v}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));a=a.mul(p).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var T=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=T;var k=l(0,-2147483648,!1);n.MIN_VALUE=k;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return!(1&~this.low)},I.isEven=function(){return!(1&this.low)},I.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(b)},I.neg=I.negate,I.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=s+u)>>>16,c+=(p+=n+o)>>>16,c+=t+i,l((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(k))return e.isOdd()?k:g;if(e.eq(k))return this.isOdd()?k:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+s*p+a*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(k))return e.eq(b)||e.eq(w)?k:e.eq(k)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(k))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(s);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),s=s.sub(d)}return a},I.div=I.divide,I.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return l(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},951:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>et,Acos:()=>tt,Acosh:()=>nt,AdadeltaOptimizer:()=>Zo,AdagradOptimizer:()=>Qo,AdamOptimizer:()=>nl,AdamaxOptimizer:()=>ll,Add:()=>rt,AddN:()=>st,All:()=>at,Any:()=>it,ArgMax:()=>ot,ArgMin:()=>lt,Asin:()=>ut,Asinh:()=>ct,Atan:()=>ht,Atan2:()=>dt,Atanh:()=>pt,AvgPool:()=>ft,AvgPool3D:()=>gt,AvgPool3DGrad:()=>yt,AvgPoolGrad:()=>mt,BatchMatMul:()=>bt,BatchToSpaceND:()=>xt,Bincount:()=>wt,BitwiseAnd:()=>vt,BroadcastArgs:()=>kt,BroadcastTo:()=>Tt,Callback:()=>aS,CallbackList:()=>Yx,Cast:()=>It,Ceil:()=>St,ClipByValue:()=>_t,Complex:()=>Nt,ComplexAbs:()=>Et,Concat:()=>$t,Conv2D:()=>Ct,Conv2DBackpropFilter:()=>At,Conv2DBackpropInput:()=>Ot,Conv3D:()=>Dt,Conv3DBackpropFilterV2:()=>Rt,Conv3DBackpropInputV2:()=>Ft,Cos:()=>Pt,Cosh:()=>Mt,CropAndResize:()=>Bt,Cumprod:()=>Lt,Cumsum:()=>zt,CustomCallback:()=>Qx,DataStorage:()=>X,DenseBincount:()=>Ut,DepthToSpace:()=>Vt,DepthwiseConv2dNative:()=>Wt,DepthwiseConv2dNativeBackpropFilter:()=>Gt,DepthwiseConv2dNativeBackpropInput:()=>jt,Diag:()=>Ht,Dilation2D:()=>qt,Dilation2DBackpropFilter:()=>Xt,Dilation2DBackpropInput:()=>Kt,Draw:()=>Yt,ENV:()=>Ze,EarlyStopping:()=>lS,Einsum:()=>Jt,Elu:()=>Qt,EluGrad:()=>en,Environment:()=>qe,Equal:()=>nn,Erf:()=>tn,Exp:()=>rn,ExpandDims:()=>sn,Expm1:()=>an,FFT:()=>on,Fill:()=>ln,FlipLeftRight:()=>un,Floor:()=>cn,FloorDiv:()=>hn,FromPixels:()=>fs,FusedBatchNorm:()=>pn,FusedConv2D:()=>ys,FusedDepthwiseConv2D:()=>bs,GPGPUContext:()=>SP,GatherNd:()=>fn,GatherV2:()=>dn,GraphModel:()=>E_,Greater:()=>mn,GreaterEqual:()=>gn,History:()=>Jx,IFFT:()=>bn,Identity:()=>yn,Imag:()=>xn,InputSpec:()=>tx,IsFinite:()=>wn,IsInf:()=>vn,IsNan:()=>Tn,KernelBackend:()=>Y,LRN:()=>Fn,LRNGrad:()=>Pn,LayerVariable:()=>Jb,LayersModel:()=>Zw,LeakyRelu:()=>kn,Less:()=>In,LessEqual:()=>Sn,LinSpace:()=>_n,Log:()=>Nn,Log1p:()=>En,LogSoftmax:()=>Dn,LogicalAnd:()=>$n,LogicalNot:()=>Cn,LogicalOr:()=>An,LogicalXor:()=>On,LowerBound:()=>Rn,MathBackendCPU:()=>UN,MathBackendWebGL:()=>KM,MatrixBandPart:()=>Mn,Max:()=>Ln,MaxPool:()=>Bn,MaxPool3D:()=>Vn,MaxPool3DGrad:()=>Wn,MaxPoolGrad:()=>Un,MaxPoolWithArgmax:()=>Gn,Maximum:()=>zn,Mean:()=>jn,Min:()=>Hn,Minimum:()=>qn,MirrorPad:()=>Kn,Mod:()=>Xn,MomentumOptimizer:()=>cl,Multinomial:()=>Yn,Multiply:()=>Zn,Neg:()=>Jn,NonMaxSuppressionV3:()=>er,NonMaxSuppressionV4:()=>tr,NonMaxSuppressionV5:()=>nr,NotEqual:()=>Qn,OP_SCOPE_SUFFIX:()=>Ya,OneHot:()=>sr,OnesLike:()=>rr,Optimizer:()=>Yo,OptimizerConstructors:()=>Du,Pack:()=>ar,PadV2:()=>ir,Pool:()=>or,Pow:()=>lr,Prelu:()=>ur,Prod:()=>cr,RMSPropOptimizer:()=>hl,RNN:()=>rT,RaggedGather:()=>hr,RaggedRange:()=>pr,RaggedTensorToTensor:()=>dr,Range:()=>fr,Rank:()=>xa,Real:()=>mr,RealDiv:()=>Zt,Reciprocal:()=>gr,Reduction:()=>bf,Relu:()=>yr,Relu6:()=>kr,Reshape:()=>br,ResizeBilinear:()=>vr,ResizeBilinearGrad:()=>Tr,ResizeNearestNeighbor:()=>xr,ResizeNearestNeighborGrad:()=>wr,Reverse:()=>Ir,RotateWithOffset:()=>ms,Round:()=>Sr,Rsqrt:()=>_r,SGDOptimizer:()=>ul,ScatterNd:()=>Nr,SearchSorted:()=>$r,Select:()=>Cr,Selu:()=>Ar,Sequential:()=>tv,Sigmoid:()=>Pr,Sign:()=>Fr,Sin:()=>Dr,Sinh:()=>Rr,Slice:()=>Or,Softmax:()=>Vr,Softplus:()=>Mr,SpaceToBatchND:()=>Br,SparseFillEmptyRows:()=>Wr,SparseReshape:()=>Gr,SparseSegmentMean:()=>jr,SparseSegmentSum:()=>Hr,SparseToDense:()=>qr,SplitV:()=>Ur,Sqrt:()=>Lr,Square:()=>Xr,SquaredDifference:()=>Kr,StaticRegexReplace:()=>Yr,Step:()=>ds,StridedSlice:()=>Zr,StringNGrams:()=>Jr,StringSplit:()=>Qr,StringToHashBucketFast:()=>es,Sub:()=>ts,Sum:()=>zr,SymbolicTensor:()=>nx,Tan:()=>ns,Tanh:()=>rs,Tensor:()=>ga,TensorBuffer:()=>pa,TensorScatterUpdate:()=>Er,Tile:()=>ss,TopK:()=>as,Transform:()=>is,Transpose:()=>os,Unique:()=>ls,Unpack:()=>us,UnsortedSegmentSum:()=>cs,UpperBound:()=>hs,Variable:()=>ba,ZerosLike:()=>ps,_FusedMatMul:()=>gs,abs:()=>rl,acos:()=>Ru,acosh:()=>Fu,add:()=>$o,addN:()=>Pu,all:()=>Mu,any:()=>Lu,argMax:()=>zu,argMin:()=>Bu,asin:()=>Uu,asinh:()=>Vu,atan:()=>Wu,atan2:()=>Gu,atanh:()=>ju,avgPool:()=>lc,avgPool3d:()=>uc,backend:()=>Ti,backend_util:()=>y,basicLSTMCell:()=>fc,batchNorm:()=>gc,batchNorm2d:()=>yc,batchNorm3d:()=>bc,batchNorm4d:()=>xc,batchToSpaceND:()=>mc,bincount:()=>wc,bitwiseAnd:()=>vc,booleanMaskAsync:()=>Td,broadcastArgs:()=>Tc,broadcastTo:()=>kc,broadcast_util:()=>o,browser:()=>c,buffer:()=>So,callbacks:()=>uS,cast:()=>_o,ceil:()=>Ic,clipByValue:()=>Sc,clone:()=>No,complex:()=>Ja,concat:()=>cc,concat1d:()=>_c,concat2d:()=>Nc,concat3d:()=>Ec,concat4d:()=>$c,constraints:()=>x,conv1d:()=>Ac,conv2d:()=>Cc,conv2dTranspose:()=>Dc,conv3d:()=>Rc,conv3dTranspose:()=>Pc,copyRegisteredKernels:()=>Cs,cos:()=>Mc,cosh:()=>Lc,cosineWindow:()=>$d,cumprod:()=>zc,cumsum:()=>Bc,customGrad:()=>Uo,data:()=>j,denseBincount:()=>Uc,deprecationWarn:()=>ii,depthToSpace:()=>Vc,depthwiseConv2d:()=>Wc,deregisterOp:()=>mS,device_util:()=>a,diag:()=>Gc,dilation2d:()=>jc,disableDeprecationWarnings:()=>ai,dispose:()=>pi,disposeVariables:()=>oi,div:()=>Ao,divNoNan:()=>Kc,dot:()=>Xc,dropout:()=>Nd,einsum:()=>Yc,elu:()=>Zc,enableDebugMode:()=>si,enableProdMode:()=>ri,enclosingPowerOfTwo:()=>Ed,engine:()=>li,ensureShape:()=>Jc,env:()=>Xe,equal:()=>Hc,erf:()=>Qc,euclideanNorm:()=>dh,exp:()=>fh,expandDims:()=>mh,expm1:()=>gh,eye:()=>bh,fft:()=>Yp,fill:()=>Jo,findBackend:()=>xi,findBackendFactory:()=>wi,floor:()=>xh,floorDiv:()=>Co,forceHalfFloat:()=>YM,fused:()=>m,gather:()=>wh,gatherND:()=>_d,gather_util:()=>h,getBackend:()=>yi,getGradient:()=>Is,getKernel:()=>ks,getKernelsForBackend:()=>Ss,gpgpu_util:()=>K,grad:()=>Po,grads:()=>Mo,greater:()=>vh,greaterEqual:()=>Th,ifft:()=>Zp,imag:()=>Fl,image:()=>Lf,inTopKAsync:()=>Cd,initializers:()=>w,input:()=>sv,io:()=>l,irfft:()=>Jp,isFinite:()=>kh,isInf:()=>Ih,isNaN:()=>Sh,keep:()=>di,kernel_impls:()=>b,layers:()=>v,leakyRelu:()=>_h,less:()=>Nh,lessEqual:()=>Eh,linalg:()=>zf,linspace:()=>$h,loadGraphModel:()=>$_,loadGraphModelSync:()=>C_,loadLayersModel:()=>ev,localResponseNormalization:()=>Ch,log:()=>Ah,log1p:()=>Oh,logSigmoid:()=>Rh,logSoftmax:()=>Fh,logSumExp:()=>Ph,logicalAnd:()=>Mh,logicalNot:()=>Lh,logicalOr:()=>zh,logicalXor:()=>Bh,losses:()=>Bf,lowerBound:()=>Wh,matMul:()=>Dl,math:()=>u,max:()=>lh,maxPool:()=>Gh,maxPool3d:()=>jh,maxPoolWithArgmax:()=>Hh,maximum:()=>ol,mean:()=>qh,memory:()=>ui,meshgrid:()=>Yh,metrics:()=>T,min:()=>uh,minimum:()=>Zh,mirrorPad:()=>Jh,mod:()=>Qh,model:()=>nv,models:()=>k,moments:()=>ep,movingAverage:()=>kd,mul:()=>Oo,multiRNNCell:()=>tp,multinomial:()=>np,neg:()=>Pl,nextFrame:()=>jf,norm:()=>ph,notEqual:()=>rp,oneHot:()=>Rl,ones:()=>Xh,onesLike:()=>sp,op:()=>Za,outerProduct:()=>ap,pad:()=>ip,pad1d:()=>op,pad2d:()=>lp,pad3d:()=>up,pad4d:()=>cp,pool:()=>pp,pow:()=>el,prelu:()=>dp,print:()=>Eo,prod:()=>fp,profile:()=>ci,raggedGather:()=>mp,raggedRange:()=>gp,raggedTensorToTensor:()=>yp,rand:()=>bp,randomGamma:()=>kp,randomNormal:()=>Ip,randomStandardNormal:()=>Sp,randomUniform:()=>_p,randomUniformInt:()=>Np,range:()=>Ep,ready:()=>gi,real:()=>Ml,reciprocal:()=>$p,registerBackend:()=>vi,registerCallbackConstructor:()=>av,registerGradient:()=>Ns,registerKernel:()=>_s,registerOp:()=>dS,regularizers:()=>I,relu:()=>Cp,relu6:()=>Ap,removeBackend:()=>bi,reshape:()=>oc,reverse:()=>Op,reverse1d:()=>Dp,reverse2d:()=>Rp,reverse3d:()=>Fp,reverse4d:()=>Pp,rfft:()=>ed,round:()=>Mp,rsqrt:()=>Lp,scalar:()=>Wo,scatterND:()=>Id,scatter_util:()=>p,searchSorted:()=>Vh,selu:()=>zp,separableConv2d:()=>Bp,sequential:()=>rv,serialization:()=>i,setBackend:()=>mi,setPlatform:()=>ki,setWebGLContext:()=>wR,setdiff1dAsync:()=>Up,shared:()=>H,sigmoid:()=>hc,sign:()=>Vp,signal:()=>Mf,sin:()=>Wp,sinh:()=>Gp,slice:()=>pc,slice1d:()=>jp,slice2d:()=>Hp,slice3d:()=>qp,slice4d:()=>Kp,slice_util:()=>d,softmax:()=>Xp,softplus:()=>Dh,spaceToBatchND:()=>hp,sparse:()=>Uf,sparseToDense:()=>Sd,spectral:()=>Pf,split:()=>Qp,sqrt:()=>Do,square:()=>Ro,squaredDifference:()=>td,squeeze:()=>nd,stack:()=>rd,step:()=>sd,stridedSlice:()=>ad,string:()=>Vf,sub:()=>tl,sum:()=>ch,sumOutType:()=>_a,tan:()=>id,tanh:()=>dc,tensor:()=>ei,tensor1d:()=>od,tensor2d:()=>ld,tensor3d:()=>Bl,tensor4d:()=>ud,tensor5d:()=>cd,tensor6d:()=>hd,tensorScatterUpdate:()=>pd,tensor_util:()=>s,test_util:()=>f,tidy:()=>hi,tile:()=>yh,time:()=>fi,topk:()=>dd,train:()=>Wf,transpose:()=>Ll,truncatedNormal:()=>fd,unique:()=>md,unregisterGradient:()=>$s,unregisterKernel:()=>Es,unsortedSegmentSum:()=>gd,unstack:()=>yd,upcastType:()=>Sa,upperBound:()=>bd,util:()=>r,valueAndGrad:()=>Lo,valueAndGrads:()=>zo,variable:()=>xd,variableGrads:()=>Bo,version:()=>GG,version_converter:()=>A_,version_core:()=>Ou,version_cpu:()=>pC,version_layers:()=>Dw,version_webgl:()=>XM,webgl:()=>ZM,webgl_util:()=>q,where:()=>qc,whereAsync:()=>vd,zeros:()=>Kh,zerosLike:()=>Fo});var r={};n.r(r),n.d(r,{arraysEqual:()=>pe,arraysEqualWithNull:()=>he,assert:()=>ie,assertNonNegativeIntegerDimensions:()=>Ve,assertNonNull:()=>le,assertShapesMatch:()=>oe,bytesFromStringArray:()=>Ee,bytesPerElement:()=>Ne,checkConversionForErrors:()=>Ie,clamp:()=>ee,computeStrides:()=>Fe,convertBackendValuesAndArrayBuffer:()=>Le,createScalarValue:()=>qs,createShuffledIndices:()=>ge,decodeString:()=>Js,distSquared:()=>ae,encodeString:()=>Zs,fetch:()=>Ys,fingerPrint64:()=>Hs,flatten:()=>ea,getArrayFromDType:()=>ke,getTypedArrayFromDType:()=>Te,hasEncodingLoss:()=>_e,hexToLong:()=>Fs,indexToLoc:()=>Ge,inferDtype:()=>Oe,inferFromImplicitShape:()=>xe,isBoolean:()=>Ce,isFunction:()=>De,isInt:()=>de,isNumber:()=>Ae,isPromise:()=>je,isScalarShape:()=>ce,isString:()=>$e,isTypedArray:()=>Qs,isValidDtype:()=>Se,locToIndex:()=>We,makeOnesTypedArray:()=>ze,makeZerosNestedTypedArray:()=>Ue,makeZerosTypedArray:()=>Be,nearestDivisor:()=>Re,nearestLargerEven:()=>te,now:()=>Xs,parseAxisParam:()=>we,randUniform:()=>se,repeatedTry:()=>be,rightPad:()=>ye,shuffle:()=>J,shuffleCombo:()=>Q,sizeFromShape:()=>ue,sizeToSquarishShape:()=>me,squeezeShape:()=>ve,sum:()=>re,swap:()=>ne,tanh:()=>fe,toNestedArray:()=>Me,toTypedArray:()=>Ks});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>Ca,getTensorsInContainer:()=>Oa,isTensorInList:()=>Aa,makeTypesMatch:()=>$a});var a={};n.r(a),n.d(a,{isBrowser:()=>Wa,isMobile:()=>Va,mockIsMobile:()=>Ua});var i={};n.r(i),n.d(i,{Serializable:()=>Ho,SerializationMap:()=>qo,getRegisteredName:()=>Xo,registerClass:()=>Ko});var o={};n.r(o),n.d(o,{assertAndGetBroadcastShape:()=>il,getBroadcastDims:()=>sl,getReductionAxes:()=>al});var l={};n.r(l),n.d(l,{CompositeArrayBuffer:()=>ni,browserFiles:()=>gl,browserHTTPRequest:()=>Sl,concatenateArrayBuffers:()=>Fi,copyModel:()=>vo,decodeWeights:()=>_i,decodeWeightsStream:()=>Ai,encodeWeights:()=>Si,fromMemory:()=>$l,fromMemorySync:()=>Cl,getLoadHandlers:()=>Hi,getModelArtifactsForJSON:()=>zi,getModelArtifactsForJSONSync:()=>Li,getModelArtifactsInfoForJSON:()=>Bi,getSaveHandlers:()=>ji,getWeightSpecs:()=>Ui,http:()=>Il,isHTTPScheme:()=>Tl,listModels:()=>xo,loadWeights:()=>xl,moveModel:()=>To,registerLoadRouter:()=>Gi,registerSaveRouter:()=>Wi,removeModel:()=>wo,weightsLoaderFactory:()=>wl,withSaveHandler:()=>Al,withSaveHandlerSync:()=>Ol});var u={};n.r(u),n.d(u,{confusionMatrix:()=>zl});var c={};n.r(c),n.d(c,{draw:()=>ql,fromPixels:()=>Kl,fromPixelsAsync:()=>Gl,toPixels:()=>Hl});var h={};n.r(h),n.d(h,{prepareAndValidate:()=>Xl});var p={};n.r(p),n.d(p,{calculateShapes:()=>Jl,validateInput:()=>Zl,validateUpdateShape:()=>Yl});var d={};n.r(d),n.d(d,{assertParamsValid:()=>tu,computeFlatOffset:()=>fu,computeOutShape:()=>ru,getNormalizedAxes:()=>ou,isSliceContinous:()=>du,maskToAxes:()=>nu,parseSliceParams:()=>mu,sliceInfo:()=>gu,startForAxis:()=>hu,startIndicesWithElidedDims:()=>lu,stopForAxis:()=>pu,stopIndicesWithElidedDims:()=>uu,stridesForAxis:()=>cu,stridesWithElidedDims:()=>su});var f={};n.r(f),n.d(f,{TEST_EPSILON_FLOAT16:()=>xu,createVideoElement:()=>Cu,encodeStrings:()=>$u,expectArrayBuffersEqual:()=>Eu,expectArraysClose:()=>wu,expectArraysEqual:()=>Iu,expectNumbersClose:()=>Su,expectPromiseToFail:()=>ku,expectValuesInRange:()=>Nu,play:()=>Au,testEpsilon:()=>vu});var m={};n.r(m),n.d(m,{conv2d:()=>Pd,depthwiseConv2d:()=>zd,matMul:()=>Bd});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:()=>Km,computeOutShape:()=>qm,segOpComputeOptimalWindowSize:()=>Hm});var y={};n.r(y),n.d(y,{ERF_A1:()=>cm,ERF_A2:()=>hm,ERF_A3:()=>pm,ERF_A4:()=>dm,ERF_A5:()=>fm,ERF_P:()=>um,PARALLELIZE_THRESHOLD:()=>Qf,RowPartitionType:()=>Kf,SELU_SCALE:()=>lm,SELU_SCALEALPHA:()=>om,applyActivation:()=>Rd,assertAndGetBroadcastShape:()=>il,assertAxesAreInnerMostDims:()=>sh,assertParamsConsistent:()=>Hf,assignToTypedArray:()=>wm,axesAreInnerMostDims:()=>eh,calculateShapes:()=>Jl,checkEinsumDimSizes:()=>$m,checkPadOnDimRoundingMode:()=>ic,combineLocations:()=>th,combineRaggedTensorToTensorShapes:()=>Xf,complexWithEvenIndex:()=>ym,complexWithOddIndex:()=>bm,computeConv2DInfo:()=>Xu,computeConv3DInfo:()=>Yu,computeDefaultPad:()=>Zu,computeDilation2DInfo:()=>Hu,computeOptimalWindowSize:()=>em,computeOutAndReduceShapes:()=>nh,computeOutShape:()=>qf,computePool2DInfo:()=>qu,computePool3DInfo:()=>Ku,convertConv2DDataFormat:()=>ac,decodeEinsumEquation:()=>Nm,eitherStridesOrDilationsAreOne:()=>rc,expandShapeToKeepDim:()=>rh,exponent:()=>Tm,exponents:()=>vm,fromStringArrayToUint8:()=>Ym,fromUint8ToStringArray:()=>Xm,getAxesPermutation:()=>ah,getBroadcastDims:()=>sl,getComplexWithIndex:()=>xm,getEinsumComputePath:()=>Cm,getEinsumPermutation:()=>Em,getFusedBiasGradient:()=>Dd,getFusedDyActivation:()=>Od,getImageCenter:()=>tm,getInnerMostAxes:()=>oh,getPermuted:()=>rm,getRaggedRank:()=>Zf,getReductionAxes:()=>al,getReshaped:()=>nm,getReshapedPermuted:()=>sm,getRowPartitionTypesHelper:()=>Yf,getSliceBeginCoords:()=>am,getSliceSize:()=>im,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Rm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Fm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Pm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>zm,getSparseReshapeInputOutputMismatchErrorMessage:()=>Um,getSparseReshapeInputOutputMultipleErrorMessage:()=>Bm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Mm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Lm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>jm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Vm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Wm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Gm,getUndoAxesPermutation:()=>ih,isIdentityPermutation:()=>Am,log:()=>ws,mergeRealAndImagArrays:()=>mm,prepareAndValidate:()=>Xl,prepareSplitSize:()=>Dm,segment_util:()=>g,shouldFuse:()=>Fd,slice_util:()=>d,splitRealAndImagArrays:()=>gm,stridesOrDilationsArePositive:()=>sc,tupleValuesAreOne:()=>nc,upcastType:()=>Sa,validateDefaultValueShape:()=>Jf,validateInput:()=>Zl,validateUpdateShape:()=>Yl,warn:()=>xs});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:()=>ef,nonMaxSuppressionV4Impl:()=>tf,nonMaxSuppressionV5Impl:()=>nf,whereImpl:()=>wd});var x={};n.r(x),n.d(x,{maxNorm:()=>Nx,minMaxNorm:()=>Cx,nonNeg:()=>$x,unitNorm:()=>Ex});var w={};n.r(w),n.d(w,{constant:()=>Dx,glorotNormal:()=>Bx,glorotUniform:()=>zx,heNormal:()=>Ux,heUniform:()=>Vx,identity:()=>Mx,leCunNormal:()=>Wx,leCunUniform:()=>Gx,ones:()=>Ox,orthogonal:()=>jx,randomNormal:()=>Fx,randomUniform:()=>Rx,truncatedNormal:()=>Px,varianceScaling:()=>Lx,zeros:()=>Ax});var v={};n.r(v),n.d(v,{Layer:()=>ix,RNN:()=>rT,RNNCell:()=>sT,activation:()=>Fk,add:()=>Gk,alphaDropout:()=>RI,average:()=>jk,averagePooling1d:()=>eI,averagePooling2d:()=>rI,averagePooling3d:()=>iI,avgPool1d:()=>tI,avgPool2d:()=>sI,avgPool3d:()=>oI,avgPooling1d:()=>nI,avgPooling2d:()=>aI,avgPooling3d:()=>lI,batchNormalization:()=>Zk,bidirectional:()=>_I,categoryEncoding:()=>zI,centerCrop:()=>MI,concatenate:()=>Hk,conv1d:()=>_k,conv2d:()=>Nk,conv2dTranspose:()=>Ek,conv3d:()=>$k,conv3dTranspose:()=>Ck,convLstm2d:()=>TI,convLstm2dCell:()=>kI,cropping2D:()=>Ok,dense:()=>Pk,depthwiseConv2d:()=>Rk,dot:()=>Yk,dropout:()=>Mk,elu:()=>wk,embedding:()=>Wk,flatten:()=>zk,gaussianDropout:()=>DI,gaussianNoise:()=>OI,globalAveragePooling1d:()=>uI,globalAveragePooling2d:()=>cI,globalMaxPool1d:()=>EI,globalMaxPool2d:()=>$I,globalMaxPooling1d:()=>hI,globalMaxPooling2d:()=>pI,gru:()=>gI,gruCell:()=>yI,input:()=>sv,inputLayer:()=>xk,layerNormalization:()=>Jk,leakyReLU:()=>Tk,lstm:()=>bI,lstmCell:()=>xI,masking:()=>FI,maxPool1d:()=>CI,maxPool2d:()=>AI,maxPooling1d:()=>dI,maxPooling2d:()=>fI,maxPooling3d:()=>mI,maximum:()=>qk,minimum:()=>Kk,multiply:()=>Xk,permute:()=>Vk,prelu:()=>kk,randomWidth:()=>BI,reLU:()=>vk,repeatVector:()=>Bk,rescaling:()=>PI,reshape:()=>Uk,resizing:()=>LI,rnn:()=>II,separableConv2d:()=>Ak,simpleRNN:()=>wI,simpleRNNCell:()=>vI,softmax:()=>Ik,spatialDropout1d:()=>Lk,stackedRNNCells:()=>SI,thresholdedReLU:()=>Sk,timeDistributed:()=>NI,upSampling2d:()=>Dk,zeroPadding2d:()=>Qk});var T={};n.r(T),n.d(T,{MAPE:()=>ZI,MSE:()=>eS,binaryAccuracy:()=>UI,binaryCrossentropy:()=>VI,categoricalAccuracy:()=>GI,categoricalCrossentropy:()=>jI,cosineProximity:()=>KI,mape:()=>JI,meanAbsoluteError:()=>XI,meanAbsolutePercentageError:()=>YI,meanSquaredError:()=>QI,mse:()=>tS,precision:()=>HI,recall:()=>qI,sparseCategoricalAccuracy:()=>WI});var k={};n.r(k),n.d(k,{modelFromJSON:()=>Qw});var I={};n.r(I),n.d(I,{l1:()=>rS,l1l2:()=>nS,l2:()=>sS});var S={};n.r(S),n.d(S,{json:()=>IS});var _={};n.r(_),n.d(_,{json:()=>SS});var N={};n.r(N),n.d(N,{json:()=>_S});var E={};n.r(E),n.d(E,{json:()=>NS});var $={};n.r($),n.d($,{json:()=>ES});var C={};n.r(C),n.d(C,{json:()=>$S});var A={};n.r(A),n.d(A,{json:()=>CS});var O={};n.r(O),n.d(O,{json:()=>AS});var D={};n.r(D),n.d(D,{json:()=>OS});var R={};n.r(R),n.d(R,{json:()=>DS});var F={};n.r(F),n.d(F,{json:()=>RS});var P={};n.r(P),n.d(P,{json:()=>FS});var M={};n.r(M),n.d(M,{json:()=>PS});var L={};n.r(L),n.d(L,{json:()=>MS});var z={};n.r(z),n.d(z,{json:()=>LS});var B={};n.r(B),n.d(B,{json:()=>zS});var U={};n.r(U),n.d(U,{json:()=>BS});var V={};n.r(V),n.d(V,{json:()=>US});var W={};n.r(W),n.d(W,{json:()=>VS});var G={};n.r(G),n.d(G,{OP_SCOPE_SUFFIX:()=>Ya,abs:()=>rl,acos:()=>Ru,acosh:()=>Fu,add:()=>$o,addN:()=>Pu,all:()=>Mu,any:()=>Lu,argMax:()=>zu,argMin:()=>Bu,asin:()=>Uu,asinh:()=>Vu,atan:()=>Wu,atan2:()=>Gu,atanh:()=>ju,avgPool:()=>lc,avgPool3d:()=>uc,basicLSTMCell:()=>fc,batchNorm:()=>gc,batchNorm2d:()=>yc,batchNorm3d:()=>bc,batchNorm4d:()=>xc,batchToSpaceND:()=>mc,bincount:()=>wc,bitwiseAnd:()=>vc,booleanMaskAsync:()=>Td,broadcastArgs:()=>Tc,broadcastTo:()=>kc,buffer:()=>So,cast:()=>_o,ceil:()=>Ic,clipByValue:()=>Sc,clone:()=>No,complex:()=>Ja,concat:()=>cc,concat1d:()=>_c,concat2d:()=>Nc,concat3d:()=>Ec,concat4d:()=>$c,conv1d:()=>Ac,conv2d:()=>Cc,conv2dTranspose:()=>Dc,conv3d:()=>Rc,conv3dTranspose:()=>Pc,cos:()=>Mc,cosh:()=>Lc,cosineWindow:()=>$d,cumprod:()=>zc,cumsum:()=>Bc,denseBincount:()=>Uc,depthToSpace:()=>Vc,depthwiseConv2d:()=>Wc,diag:()=>Gc,dilation2d:()=>jc,div:()=>Ao,divNoNan:()=>Kc,dot:()=>Xc,dropout:()=>Nd,einsum:()=>Yc,elu:()=>Zc,enclosingPowerOfTwo:()=>Ed,ensureShape:()=>Jc,equal:()=>Hc,erf:()=>Qc,euclideanNorm:()=>dh,exp:()=>fh,expandDims:()=>mh,expm1:()=>gh,eye:()=>bh,fft:()=>Yp,fill:()=>Jo,floor:()=>xh,floorDiv:()=>Co,fused:()=>m,gather:()=>wh,gatherND:()=>_d,greater:()=>vh,greaterEqual:()=>Th,ifft:()=>Zp,imag:()=>Fl,image:()=>Lf,inTopKAsync:()=>Cd,irfft:()=>Jp,isFinite:()=>kh,isInf:()=>Ih,isNaN:()=>Sh,leakyRelu:()=>_h,less:()=>Nh,lessEqual:()=>Eh,linalg:()=>zf,linspace:()=>$h,localResponseNormalization:()=>Ch,log:()=>Ah,log1p:()=>Oh,logSigmoid:()=>Rh,logSoftmax:()=>Fh,logSumExp:()=>Ph,logicalAnd:()=>Mh,logicalNot:()=>Lh,logicalOr:()=>zh,logicalXor:()=>Bh,losses:()=>Bf,lowerBound:()=>Wh,matMul:()=>Dl,max:()=>lh,maxPool:()=>Gh,maxPool3d:()=>jh,maxPoolWithArgmax:()=>Hh,maximum:()=>ol,mean:()=>qh,meshgrid:()=>Yh,min:()=>uh,minimum:()=>Zh,mirrorPad:()=>Jh,mod:()=>Qh,moments:()=>ep,movingAverage:()=>kd,mul:()=>Oo,multiRNNCell:()=>tp,multinomial:()=>np,neg:()=>Pl,norm:()=>ph,notEqual:()=>rp,oneHot:()=>Rl,ones:()=>Xh,onesLike:()=>sp,op:()=>Za,outerProduct:()=>ap,pad:()=>ip,pad1d:()=>op,pad2d:()=>lp,pad3d:()=>up,pad4d:()=>cp,pool:()=>pp,pow:()=>el,prelu:()=>dp,print:()=>Eo,prod:()=>fp,raggedGather:()=>mp,raggedRange:()=>gp,raggedTensorToTensor:()=>yp,rand:()=>bp,randomGamma:()=>kp,randomNormal:()=>Ip,randomStandardNormal:()=>Sp,randomUniform:()=>_p,randomUniformInt:()=>Np,range:()=>Ep,real:()=>Ml,reciprocal:()=>$p,relu:()=>Cp,relu6:()=>Ap,reshape:()=>oc,reverse:()=>Op,reverse1d:()=>Dp,reverse2d:()=>Rp,reverse3d:()=>Fp,reverse4d:()=>Pp,rfft:()=>ed,round:()=>Mp,rsqrt:()=>Lp,scalar:()=>Wo,scatterND:()=>Id,searchSorted:()=>Vh,selu:()=>zp,separableConv2d:()=>Bp,setdiff1dAsync:()=>Up,sigmoid:()=>hc,sign:()=>Vp,signal:()=>Mf,sin:()=>Wp,sinh:()=>Gp,slice:()=>pc,slice1d:()=>jp,slice2d:()=>Hp,slice3d:()=>qp,slice4d:()=>Kp,softmax:()=>Xp,softplus:()=>Dh,spaceToBatchND:()=>hp,sparse:()=>Uf,sparseToDense:()=>Sd,spectral:()=>Pf,split:()=>Qp,sqrt:()=>Do,square:()=>Ro,squaredDifference:()=>td,squeeze:()=>nd,stack:()=>rd,step:()=>sd,stridedSlice:()=>ad,string:()=>Vf,sub:()=>tl,sum:()=>ch,tan:()=>id,tanh:()=>dc,tensor:()=>ei,tensor1d:()=>od,tensor2d:()=>ld,tensor3d:()=>Bl,tensor4d:()=>ud,tensor5d:()=>cd,tensor6d:()=>hd,tensorScatterUpdate:()=>pd,tile:()=>yh,topk:()=>dd,transpose:()=>Ll,truncatedNormal:()=>fd,unique:()=>md,unsortedSegmentSum:()=>gd,unstack:()=>yd,upperBound:()=>bd,variable:()=>xd,where:()=>qc,whereAsync:()=>vd,zeros:()=>Kh,zerosLike:()=>Fo});var j={};n.r(j),n.d(j,{CSVDataset:()=>xN,Dataset:()=>oN,FileDataSource:()=>AN,TextLineDataset:()=>pN,URLDataSource:()=>ON,array:()=>uN,csv:()=>DN,func:()=>RN,generator:()=>FN,microphone:()=>MN,version_data:()=>LN,webcam:()=>PN,zip:()=>cN});var H={};n.r(H),n.d(H,{addImpl:()=>rE,bincountImpl:()=>oE,bincountReduceImpl:()=>lE,bitwiseAndImpl:()=>uE,castImpl:()=>JN,ceilImpl:()=>mE,concatImpl:()=>bE,equalImpl:()=>xE,expImpl:()=>TE,expm1Impl:()=>SE,floorDivImpl:()=>AE,floorImpl:()=>EE,gatherNdImpl:()=>RE,gatherV2Impl:()=>FE,greaterEqualImpl:()=>zE,greaterImpl:()=>PE,lessEqualImpl:()=>jE,lessImpl:()=>VE,linSpaceImpl:()=>KE,logImpl:()=>XE,maxImpl:()=>JE,maximumImpl:()=>QE,minimumImpl:()=>n$,multiplyImpl:()=>a$,negImpl:()=>u$,notEqualImpl:()=>h$,prodImpl:()=>y$,raggedGatherImpl:()=>w$,raggedRangeImpl:()=>T$,raggedTensorToTensorImpl:()=>N$,rangeImpl:()=>E$,rsqrtImpl:()=>$$,scatterImpl:()=>O$,sigmoidImpl:()=>D$,simpleAbsImpl:()=>VN,sliceImpl:()=>P$,sparseFillEmptyRowsImpl:()=>z$,sparseReshapeImpl:()=>B$,sparseSegmentReductionImpl:()=>U$,sqrtImpl:()=>V$,squaredDifferenceImpl:()=>j$,staticRegexReplaceImpl:()=>K$,stridedSliceImpl:()=>Z$,stringNGramsImpl:()=>Q$,stringSplitImpl:()=>tC,stringToHashBucketFastImpl:()=>nC,subImpl:()=>rC,tileImpl:()=>oC,topKImpl:()=>cC,transposeImpl:()=>f$,uniqueImpl:()=>hC});var q={};n.r(q),n.d(q,{assertNotComplex:()=>_F,bindCanvasToFramebuffer:()=>eF,bindColorTextureToFramebuffer:()=>tF,bindTextureToProgramUniformSampler:()=>QR,bindTextureUnit:()=>XR,bindVertexBufferToProgramAttribute:()=>KR,callAndCheck:()=>$R,canBeRepresented:()=>OR,createFragmentShader:()=>PR,createFramebuffer:()=>qR,createProgram:()=>zR,createStaticIndexBuffer:()=>WR,createStaticVertexBuffer:()=>VR,createTexture:()=>jR,createVertexShader:()=>FR,getBatchDim:()=>oF,getExtensionOrThrow:()=>RR,getFramebufferErrorMessage:()=>sF,getMaxTexturesInShader:()=>bF,getNumChannels:()=>GR,getProgramUniformLocation:()=>JR,getProgramUniformLocationOrThrow:()=>ZR,getRowsCols:()=>lF,getShapeAs3D:()=>uF,getTextureShapeFromLogicalShape:()=>cF,getWebGLDisjointQueryTimerVersion:()=>xF,getWebGLErrorMessage:()=>DR,getWebGLMaxTextureSize:()=>mF,hasExtension:()=>wF,isCapableOfRenderingToFloatTexture:()=>TF,isDownloadFloatTextureEnabled:()=>kF,isReshapeFree:()=>pF,isWebGLFenceEnabled:()=>SF,isWebGLVersionEnabled:()=>vF,linkProgram:()=>BR,logShaderSourceAndInfoLog:()=>LR,resetMaxTextureSize:()=>gF,resetMaxTexturesInShader:()=>yF,unbindColorTextureFromFramebuffer:()=>nF,unbindTextureUnit:()=>YR,validateFramebuffer:()=>rF,validateProgram:()=>UR,validateTextureSize:()=>HR});var K={};n.r(K),n.d(K,{bindVertexProgramAttributeStreams:()=>yP,createBufferFromOutputTexture:()=>wP,createFloat16MatrixTexture:()=>cP,createFloat16PackedMatrixTexture:()=>gP,createFloat32MatrixTexture:()=>lP,createIndexBuffer:()=>aP,createPackedMatrixTexture:()=>fP,createUnsignedBytesMatrixTexture:()=>pP,createVertexBuffer:()=>sP,createVertexShader:()=>rP,downloadByteEncodedFloatMatrixFromOutputTexture:()=>TP,downloadFloat32MatrixFromBuffer:()=>vP,downloadMatrixFromPackedOutputTexture:()=>IP,downloadPackedMatrixFromBuffer:()=>kP,getInternalFormatForFloat16MatrixTexture:()=>uP,getInternalFormatForFloat16PackedMatrixTexture:()=>mP,getInternalFormatForFloat32MatrixTexture:()=>oP,getInternalFormatForPackedMatrixTexture:()=>dP,getInternalFormatForUnsignedBytesMatrixTexture:()=>hP,uploadDenseMatrixToTexture:()=>bP,uploadPixelDataToTexture:()=>xP});class X{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Y{refCount(e){return Z("refCount")}incRef(e){return Z("incRef")}timerAvailable(){return!0}time(e){return Z("time")}read(e){return Z("read")}readSync(e){return Z("readSync")}readToGPU(e,t){return Z("readToGPU")}numDataIds(){return Z("numDataIds")}disposeData(e,t){return Z("disposeData")}write(e,t,n){return Z("write")}move(e,t,n,r,s){return Z("move")}createTensorFromGPUData(e,t,n){return Z("createTensorFromGPUData")}memory(){return Z("memory")}floatPrecision(){return Z("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Z("dispose")}}function Z(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function J(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ne(e,t,n)}function Q(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ne(e,n,r),ne(t,n,r)}function ee(e,t,n){return Math.max(e,Math.min(t,n))}function te(e){return e%2==0?e:e+1}function ne(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function re(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function se(e,t){const n=Math.random();return t*n+(1-n)*e}function ae(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function ie(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function oe(e,t,n=""){ie(pe(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function le(e){ie(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ue(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ce(e){return 0===e.length}function he(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function pe(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function de(e){return e%1==0}function fe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function me(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ge(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return J(t),t}function ye(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function be(e,t=(e=>0),n,r){return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?a():null!=r?r(o,l):setTimeout(o,l)};o()}))}function xe(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function we(e,t){const n=t.length;return ie((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ie(e.every((e=>de(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ve(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:we(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function Te(e,t){return ke(e,t)}function ke(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Ie(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Se(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function _e(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ee(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function $e(e){return"string"==typeof e||e instanceof String}function Ce(e){return"boolean"==typeof e}function Ae(e){return"number"==typeof e}function Oe(e){return Array.isArray(e)?Oe(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ae(e)?"float32":$e(e)?"string":Ce(e)?"bool":"float32"}function De(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Re(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Fe(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Pe(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=Pe(e+t*o,i,n,r)}return s}function Me(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Pe(0,e,t,n)}function Le(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function ze(e,t){const n=Be(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Be(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ue(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Me(e,new Float32Array(n));if("int32"===t)return Me(e,new Int32Array(n));if("bool"===t)return Me(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ve(e){e.forEach((t=>{ie(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function We(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ge(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function je(e){return e&&e.then&&"function"==typeof e.then}const He="tfjsflags";class qe{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ke,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(je(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);He in e&&e[He].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function Ke(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Xe(){return Ze}let Ye,Ze=null;function Je(){if(null==Ye){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ye=e}return Ye}function Qe(e,t){const n=function(){const e=Je();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const et="Abs",tt="Acos",nt="Acosh",rt="Add",st="AddN",at="All",it="Any",ot="ArgMax",lt="ArgMin",ut="Asin",ct="Asinh",ht="Atan",pt="Atanh",dt="Atan2",ft="AvgPool",mt="AvgPoolGrad",gt="AvgPool3D",yt="AvgPool3DGrad",bt="BatchMatMul",xt="BatchToSpaceND",wt="Bincount",vt="BitwiseAnd",Tt="BroadcastTo",kt="BroadcastArgs",It="Cast",St="Ceil",_t="ClipByValue",Nt="Complex",Et="ComplexAbs",$t="Concat",Ct="Conv2D",At="Conv2DBackpropFilter",Ot="Conv2DBackpropInput",Dt="Conv3D",Rt="Conv3DBackpropFilterV2",Ft="Conv3DBackpropInputV2",Pt="Cos",Mt="Cosh",Lt="Cumprod",zt="Cumsum",Bt="CropAndResize",Ut="DenseBincount",Vt="DepthToSpace",Wt="DepthwiseConv2dNative",Gt="DepthwiseConv2dNativeBackpropFilter",jt="DepthwiseConv2dNativeBackpropInput",Ht="Diag",qt="Dilation2D",Kt="Dilation2DBackpropInput",Xt="Dilation2DBackpropFilter",Yt="Draw",Zt="RealDiv",Jt="Einsum",Qt="Elu",en="EluGrad",tn="Erf",nn="Equal",rn="Exp",sn="ExpandDims",an="Expm1",on="FFT",ln="Fill",un="FlipLeftRight",cn="Floor",hn="FloorDiv",pn="FusedBatchNorm",dn="GatherV2",fn="GatherNd",mn="Greater",gn="GreaterEqual",yn="Identity",bn="IFFT",xn="Imag",wn="IsFinite",vn="IsInf",Tn="IsNan",kn="LeakyRelu",In="Less",Sn="LessEqual",_n="LinSpace",Nn="Log",En="Log1p",$n="LogicalAnd",Cn="LogicalNot",An="LogicalOr",On="LogicalXor",Dn="LogSoftmax",Rn="LowerBound",Fn="LRN",Pn="LRNGrad",Mn="MatrixBandPart",Ln="Max",zn="Maximum",Bn="MaxPool",Un="MaxPoolGrad",Vn="MaxPool3D",Wn="MaxPool3DGrad",Gn="MaxPoolWithArgmax",jn="Mean",Hn="Min",qn="Minimum",Kn="MirrorPad",Xn="Mod",Yn="Multinomial",Zn="Multiply",Jn="Neg",Qn="NotEqual",er="NonMaxSuppressionV3",tr="NonMaxSuppressionV4",nr="NonMaxSuppressionV5",rr="OnesLike",sr="OneHot",ar="Pack",ir="PadV2",or="Pool",lr="Pow",ur="Prelu",cr="Prod",hr="RaggedGather",pr="RaggedRange",dr="RaggedTensorToTensor",fr="Range",mr="Real",gr="Reciprocal",yr="Relu",br="Reshape",xr="ResizeNearestNeighbor",wr="ResizeNearestNeighborGrad",vr="ResizeBilinear",Tr="ResizeBilinearGrad",kr="Relu6",Ir="Reverse",Sr="Round",_r="Rsqrt",Nr="ScatterNd",Er="TensorScatterUpdate",$r="SearchSorted",Cr="Select",Ar="Selu",Or="Slice",Dr="Sin",Rr="Sinh",Fr="Sign",Pr="Sigmoid",Mr="Softplus",Lr="Sqrt",zr="Sum",Br="SpaceToBatchND",Ur="SplitV",Vr="Softmax",Wr="SparseFillEmptyRows",Gr="SparseReshape",jr="SparseSegmentMean",Hr="SparseSegmentSum",qr="SparseToDense",Kr="SquaredDifference",Xr="Square",Yr="StaticRegexReplace",Zr="StridedSlice",Jr="StringNGrams",Qr="StringSplit",es="StringToHashBucketFast",ts="Sub",ns="Tan",rs="Tanh",ss="Tile",as="TopK",is="Transform",os="Transpose",ls="Unique",us="Unpack",cs="UnsortedSegmentSum",hs="UpperBound",ps="ZerosLike",ds="Step",fs="FromPixels",ms="RotateWithOffset",gs="_FusedMatMul",ys="FusedConv2D",bs="FusedDepthwiseConv2D";function xs(...e){Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(...e)}function ws(...e){Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.log(...e)}const vs=Qe("kernelRegistry",(()=>new Map)),Ts=Qe("gradRegistry",(()=>new Map));function ks(e,t){const n=As(e,t);return vs.get(n)}function Is(e){return Ts.get(e)}function Ss(e){const t=vs.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function _s(e){const{kernelName:t,backendName:n}=e,r=As(t,n);vs.has(r)&&xs(`The kernel '${t}' for backend '${n}' is already registered`),vs.set(r,e)}function Ns(e){const{kernelName:t}=e;Ts.has(t)&&Xe().getBool("DEBUG")&&xs(`Overriding the gradient for '${t}'`),Ts.set(t,e)}function Es(e,t){const n=As(e,t);if(!vs.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);vs.delete(n)}function $s(e){if(!Ts.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Ts.delete(e)}function Cs(e,t){Ss(e).forEach((e=>{_s(Object.assign({},e,{backendName:t}))}))}function As(e,t){return`${t}_${e}`}function Os(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Ds=n(603);const Rs=n.n(Ds)()||Ds;function Fs(e){return Rs.fromString(e,!0,16)}const Ps=Fs("c3a5c85c97cb3127"),Ms=Fs("b492b66fbe98f273"),Ls=Fs("9ae16a3b2f90404f");function zs(e){return e.xor(e.shru(47))}function Bs(e,t,n){const r=e.slice(t,t+n);return Rs.fromBytes(Array.from(r),!0,!0)}function Us(e,t){return Bs(e,t,8)}function Vs(e,t){return Bs(e,t,4)}function Ws(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Gs(e,t,n=Fs("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function js(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Ws(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Ws(s,44)),[s.add(r),a.add(i)]}(Us(e,t),Us(e,t+8),Us(e,t+16),Us(e,t+24),n,r)}function Hs(e,t=e.length){const n=Rs.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Ls.add(2*t),r=Us(e,0).add(Ls),s=Us(e,t-8);return Gs(Ws(s,37).mul(n).add(r),Ws(r,25).add(s).mul(n),n)}if(t>=4){const n=Ls.add(2*t);return Gs(Vs(e,0).shl(3).add(t),Vs(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return zs(Ls.mul(n).xor(Ps.mul(r))).mul(Ls)}return Ls}(e,t):function(e,t=e.length){const n=Ls.add(2*t),r=Us(e,0).mul(Ms),s=Us(e,8),a=Us(e,t-8).mul(n),i=Us(e,t-16).mul(Ls);return Gs(Ws(r.add(s),43).add(Ws(a,30)).add(i),r.add(Ws(s.add(Ls),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Ls.add(2*t),r=Us(e,0).mul(Ls),s=Us(e,8),a=Us(e,t-8).mul(n),i=Us(e,t-16).mul(Ls),o=Ws(r.add(s),43).add(Ws(a,30)).add(i),l=Gs(o,r.add(Ws(s.add(Ls),18)).add(a),n),u=Us(e,16).mul(n),c=Us(e,24),h=o.add(Us(e,t-32)).mul(n),p=l.add(Us(e,t-24)).mul(n);return Gs(Ws(u.add(c),43).add(Ws(h,30)).add(p),u.add(Ws(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Ms).add(113),a=zs(s.mul(Ls).add(113)).mul(Ls),i=[Rs.UZERO,Rs.UZERO],o=[Rs.UZERO,Rs.UZERO];r=r.mul(Ls).add(Us(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Ws(r.add(s).add(i[0]).add(Us(e,l+8)),37).mul(Ms),s=Ws(s.add(i[1]).add(Us(e,l+48)),42).mul(Ms),r=r.xor(o[1]),s=s.add(i[0]).add(Us(e,l+40)),a=Ws(a.add(o[0]),33).mul(Ms),i=js(e,l,i[1].mul(Ms),r.add(o[0])),o=js(e,l+32,a.add(o[1]),s.add(Us(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=Ms.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ws(r.add(s).add(i[0]).add(Us(e,l+8)),37).mul(h),s=Ws(s.add(i[1]).add(Us(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Us(e,l+40))),a=Ws(a.add(o[0]),33).mul(h),i=js(e,l,i[1].mul(h),r.add(o[0])),o=js(e,l+32,a.add(o[1]),s.add(Us(e,l+16))),[a,r]=[r,a],Gs(Gs(i[0],o[0],h).add(zs(s).mul(Ps)).add(a),Gs(i[1],o[1],h).add(r),h)}function qs(e,t){return"string"===t?Zs(e):Ks([e],t)}function Ks(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ea(e)),Xe().getBool("DEBUG")&&Ie(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Xs(){return Xe().platform.now()}function Ys(e,t){return Xe().platform.fetch(e,t)}function Zs(e,t="utf-8"){return t=t||"utf-8",Xe().platform.encode(e,t)}function Js(e,t="utf-8"){return t=t||"utf-8",Xe().platform.decode(e,t)}function Qs(e){return null!=Xe().platform.isTypedArray?Xe().platform.isTypedArray(e):Os(e)}function ea(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||je(e)||null==e||Qs(e)&&n)t.push(e);else if(Array.isArray(e)||Qs(e))for(let r=0;r<e.length;++r)ea(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)ea(e[s],t,n)}return t}class ta{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ra)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Xs();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Xs()-i})}if(Xe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{na(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function na(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ra{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?ye(`${r}ms`,9):r.error,o=ye(e,25),l=t.rank,u=t.size,c=ye(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const sa=20,aa=3,ia=7;function oa(e,t,n,r){const s=Fe(t),a=function(e,t,n,r){const s=ue(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?ha(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],la(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=ca(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function la(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(ia))} + ${parseFloat(e[1].toFixed(ia))}j`:$e(e)?`'${e}'`:"bool"===n?ua(e):parseFloat(e.toFixed(ia)).toString(),ye(r,t)}function ua(e){return 0===e?"false":"true"}function ca(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[la(ha(e)[0],0,n)]:"bool"===n?[ua(e[0])]:[e[0].toString()];if(1===l){if(o>sa){const t=aa*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-aa)*i,o*i));return"complex64"===n&&(r=ha(r),a=ha(a)),["["+r.map(((e,t)=>la(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>la(e,s[o-aa+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ha(e):Array.from(e)).map(((e,t)=>la(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>sa){for(let t=0;t<aa;t++){const r=t*h,a=r+h;p.push(...ca(e.slice(r,a),u,n,c,s,!1))}p.push("...");for(let t=o-aa;t<o;t++){const r=t*h,a=r+h;p.push(...ca(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;p.push(...ca(e.slice(r,a),u,n,c,s,t===o-1))}const d=2===l?",":"";p[0]="["+(o>0?p[0]+d:"");for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function ha(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class pa{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ue(e),null!=n){const e=n.length;ie(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ke(t,this.size),this.strides=Fe(e)}set(e,...t){0===t.length&&(t=[0]),ie(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return da().makeTensor(this.values,this.shape,this.dtype)}}let da=null,fa=null,ma=null;class ga{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ue(e),this.strides=Fe(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return fa.buffer(this.shape,this.dtype,e)}bufferSync(){return fa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Me(this.shape,e,"complex64"===this.dtype)}arraySync(){return Me(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=da().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),da().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=da().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await da().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),da().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return fa.print(this,e)}clone(){return this.throwIfDisposed(),fa.clone(this)}toString(e=!1){return oa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),fa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),da().makeVariable(this,e,t,n)}}function ya(){return Qe("Tensor",(()=>ga))}Object.defineProperty(ga,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ya();class ba extends ga{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!pe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);da().disposeTensor(this),this.dataId=e.dataId,da().incRef(this,null)}dispose(){da().disposeVariable(this),this.isDisposedInternal=!0}}var xa,wa,va,Ta,ka;Object.defineProperty(ba,Symbol.hasInstance,{value:e=>e instanceof ga&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(xa||(xa={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(wa||(wa={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(va||(va={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Ta||(Ta={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ka||(ka={}));const Ia={float32:Ta,int32:wa,bool:va,complex64:ka};function Sa(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ia[e][t]}function _a(e){return Sa(e,"int32")}function Na(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Ea(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function $a(e,t){if(e.dtype===t.dtype)return[e,t];const n=Sa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ca(e,t){ie(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Aa(e,t){return t.some((t=>t.id===e.id))}function Oa(e){const t=[];return Da(e,t,new Set),t}function Da(e,t,n){if(null==e)return;if(e instanceof ga)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Da(r,t,n))}}function Ra(e){return null!=e.kernelName}class Fa{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Pa{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Fa}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(xs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ta(this.backendInstance),!0}setupRegisteredKernels(){Ss(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Ss(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Y||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,xs(`Initialization of backend ${e} failed`),xs(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return xs(`Initialization of backend ${e} failed`),xs(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Pa.nextTensorId++}nextVariableId(){return Pa.nextVariableId++}clone(e){const t=La.runKernel(yn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return La.runKernel(It,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==ks(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Ra(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ra(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=ks(t,this.backendName);ie(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Ra(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Is(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(ie(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&$e(e[0])&&(s=e.map((e=>Zs(e))));const a=r.write(s,t,n),i=new ga(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=Ee(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new ga(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new ba(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ba||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Is(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Be(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Oa(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(ie(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ie(s instanceof ga,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=ze(ue(e),"float32");return La.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!pe(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),za);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return ie(De(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;ie(t.every((e=>e instanceof ga)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),ie(n.value instanceof ga,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ie(De(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];ie(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ie(a.every((e=>e instanceof ga)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Xs(),n=await this.backend.time(e);return n.wallMs=Xs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Fa;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ma(){const e=Je();if(null==e._tfengine){const t=new qe(e);e._tfengine=new Pa(t)}var t;return t=e._tfengine.ENV,Ze=t,da=()=>e._tfengine,e._tfengine}Pa.nextTensorId=0,Pa.nextVariableId=0;const La=Ma();function za(e,t){const n={a:e,b:t};return La.runKernel(rt,n)}let Ba;function Ua(e){Ba=e}function Va(e){if(void 0!==Ba)return Ba;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Wa(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ga=Xe();function ja(e,t){let n=e;if(Qs(e))return"string"===t?[]:[e.length];if(Na(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Ea(e))return[e.buffer.size/(null==t?4:Ne(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Qs(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Xe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ha(e,r,[]),r}function Ha(e,t,n){if(n=n||[],!Array.isArray(e)&&!Qs(e))return void ie(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ie(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ie(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Ha(e[t],r,n.concat(t))}function qa(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ka(e,t,n,r="numeric"){if(e instanceof ya())return qa(r,e.dtype,t,n),e;let s=Oe(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),qa(r,s,t,n),null==e||!Qs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=ja(e,s);Qs(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Ks(e,s):ea(e,[],!0);return La.makeTensor(i,a,s)}function Xa(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Ka(e,`${t}[${s}]`,n,r)))}Ga.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ga.registerFlag("IS_BROWSER",(()=>Wa())),Ga.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ga.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ga.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Ga.registerFlag("PROD",(()=>!1)),Ga.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ga.getBool("DEBUG"))),Ga.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ga.registerFlag("IS_TEST",(()=>!1)),Ga.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Ga.getBool("DEBUG"))),Ga.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ga.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Ga.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Ya="__op";function Za(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ya;const s=(...e)=>{La.startScope(n);try{const t=r(...e);return je(t)&&console.error("Cannot return a Promise inside of tidy."),La.endScope(t),t}catch(e){throw La.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Ja=Za({complex_:function(e,t){const n=Ka(e,"real","complex"),r=Ka(t,"imag","complex");oe(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return La.runKernel(Nt,s)}});function Qa(e,t,n,r){if(null==r)r=Oe(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Ea(e)||Na(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return La.backend.createTensorFromGPUData(e,t||n,r)}if(!Qs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ve(t);const e=ue(t),r=ue(n);ie(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==ue(t.slice(e));ie(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Qs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Ks(e,r):ea(e,[],!0),La.makeTensor(e,t,r)}function ei(e,t,n){return Qa(e,t,ja(e,n),n)}const ti={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class ni{static join(e){return new ni(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Qs(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],i=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(s.set(u,o),a+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function ri(){Xe().set("PROD",!0)}function si(){Xe().set("DEBUG",!0)}function ai(){Xe().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ii(e){Xe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function oi(){La.disposeVariables()}function li(){return La}function ui(){return La.memory()}function ci(e){return La.profile(e)}function hi(e,t){return La.tidy(e,t)}function pi(e){Oa(e).forEach((e=>e.dispose()))}function di(e){return La.keep(e)}function fi(e){return La.time(e)}function mi(e){return La.setBackend(e)}function gi(){return La.ready()}function yi(){return La.backendName}function bi(e){La.removeBackend(e)}function xi(e){return La.findBackend(e)}function wi(e){return La.findBackendFactory(e)}function vi(e,t,n=1){return La.registerBackend(e,t,n)}function Ti(){return La.backend}function ki(e,t){Xe().setPlatform(e,t)}ma=ii;const Ii=4;async function Si(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Ii*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=Ii,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Oi(await Promise.all(r)),specs:n}}function _i(e,t){const n=new ni(e),r={};let s=0;for(const e of t){const t=Ni(e,((e,t)=>n.slice(s+e,s+t)));r[e.name]=$i(e,n.slice(s,s+t)),s+=t}return r}function Ni(e,t){const n=ue(e.shape);let r;if("quantization"in e){const t=e.quantization;r=ti[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=Ii+new Uint32Array(t(e,e+Ii))[0];return e}r=ti[e.dtype]}return n*r}async function Ei(e,t){const n=ue(e.shape);let r;if("quantization"in e){const t=e.quantization;r=ti[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=Ii+new Uint32Array(await t(e,e+Ii))[0];return e}r=ti[e.dtype]}return n*r}function $i(e,t){const n=e.name,r=e.dtype,s=e.shape,a=ue(s);let i,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const l=ti[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}();i=e(u)}}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${n}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*s.scale+s.min)}}o+=a*l}else if("string"===r){const n=ue(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+Ii))[0];o+=Ii;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=ti[r];if("float32"===r)i=new Float32Array(t);else if("int32"===r)i=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const r=ei(e,s,"float32"),a=ei(n,s,"float32"),o=Ja(r,a);return r.dispose(),a.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${r}`)}i=new Uint8Array(t)}o+=a*e}return ei(i,s,r)}async function Ci(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function Ai(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const e of t){const t=await Ei(e,(async(e,t)=>(s=await Ci(r,s,t),s.slice(e,t))));s=await Ci(r,s,t);const a=s.slice(0,t);s=s.slice(t);const i=$i(e,a);if(n[e.name]=i,"webgpu"===yi()){const e=Ti();"uploadToGPU"in e&&ue(i.shape)>=Xe().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function Oi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Di="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ri(e){return Di?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Fi(e){return ni.join(e)}function Pi(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Mi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Li(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function zi(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Li(e,n,r)}function Bi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ri(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ri(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new ni(e.weightData).byteLength}}function Ui(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Vi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Vi.instance&&(Vi.instance=new Vi),Vi.instance}static registerSaveRouter(e){Vi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Vi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Vi.getHandlers(e,"save")}static getLoadHandlers(e,t){return Vi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Vi.getInstance().loadRouters:Vi.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Wi=e=>Vi.registerSaveRouter(e),Gi=e=>Vi.registerLoadRouter(e),ji=e=>Vi.getSaveHandlers(e),Hi=(e,t)=>Vi.getLoadHandlers(e,t),qi="tensorflowjs",Ki="models_store",Xi="model_info_store";function Yi(){if(!Xe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Zi(e){const t=e.result;t.createObjectStore(Ki,{keyPath:"modelPath"}),t.createObjectStore(Xi,{keyPath:"modelPath"})}class Ji{constructor(e){if(this.indexedDB=Yi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(qi,1);r.onupgradeneeded=()=>Zi(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Ki,"readonly"),r=t.objectStore(Ki).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=ni.join(t.weightData);const r=Bi(t),a=s.transaction(Xi,"readwrite");let i,o,l=a.objectStore(Xi);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}i.onsuccess=()=>{o=s.transaction(Ki,"readwrite");const i=o.objectStore(Ki);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:r}),u.onerror=e=>{l=a.objectStore(Xi);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(u.error)),t.onerror=e=>(s.close(),n(u.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Ji.URL_SCHEME="indexeddb://";const Qi=e=>{return Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ji.URL_SCHEME)?(t=e.slice(Ji.URL_SCHEME.length),new Ji(t)):null;var t};Vi.registerSaveRouter(Qi),Vi.registerLoadRouter(Qi);class eo{constructor(){this.indexedDB=Yi()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(qi,1);n.onupgradeneeded=()=>Zi(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Xi,"readonly"),a=s.objectStore(Xi).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ji.URL_SCHEME)?t.slice(Ji.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(qi,1);r.onupgradeneeded=()=>Zi(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Xi,"readwrite"),i=a.objectStore(Xi),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Ki,"readwrite");const r=l.objectStore(Ki).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const to="/",no="tensorflowjs_models",ro="info",so="model_topology",ao="weight_specs",io="weight_data",oo="model_metadata";function lo(e){return{info:[no,e,ro].join(to),topology:[no,e,so].join(to),weightSpecs:[no,e,ao].join(to),weightData:[no,e,io].join(to),modelMetadata:[no,e,oo].join(to)}}function uo(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function co(e){const t=e.split(to);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(to)}class ho{constructor(e){if(!Xe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=lo(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Bi(e),s=ni.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Di)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw uo(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Di){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ho.URL_SCHEME="localstorage://";const po=e=>{return Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ho.URL_SCHEME)?(t=e.slice(ho.URL_SCHEME.length),new ho(t)):null;var t};Vi.registerSaveRouter(po),Vi.registerLoadRouter(po);class fo{constructor(){ie(Xe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ie("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=no+to,n=to+ro;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[co(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=lo(e=(t=e).startsWith(ho.URL_SCHEME)?t.slice(ho.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return uo(n),r}}const mo="://";class go{constructor(){this.managers={}}static getInstance(){return null==go.instance&&(go.instance=new go),go.instance}static registerManager(e,t){ie(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(mo)&&(e=e.slice(0,e.indexOf(mo))),ie(e.length>0,(()=>"scheme must not be an empty string."));const n=go.getInstance();ie(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=go.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(go.getInstance().managers)}}function yo(e){if(-1===e.indexOf(mo))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${go.getSchemes().join(",")}`);return{scheme:e.split(mo)[0],path:e.split(mo)[1]}}async function bo(e,t,n=!1){ie(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Vi.getLoadHandlers(e);ie(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),ie(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=Vi.getSaveHandlers(t);ie(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),ie(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=yo(e).scheme,l=yo(e).path,u=o===yo(e).scheme,c=await s.load();n&&u&&await go.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await go.getManager(o).removeModel(l),h.modelArtifactsInfo}async function xo(){const e=go.getSchemes(),t={};for(const n of e){const e=await go.getManager(n).listModels();for(const r in e)t[n+mo+r]=e[r]}return t}async function wo(e){const t=yo(e);return go.getManager(t.scheme).removeModel(t.path)}async function vo(e,t){return bo(e,t,!1)}async function To(e,t){return bo(e,t,!0)}class ko{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Xe().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return Os(e)}}if(Xe().get("IS_BROWSER")){Xe().setPlatform("browser",new ko);try{go.registerManager(ho.URL_SCHEME,new fo)}catch(e){}try{go.registerManager(Ji.URL_SCHEME,new eo)}catch(e){}}let Io;function So(e,t="float32",n){return t=t||"float32",Ve(e),new pa(e,t,n)}Xe().get("IS_NODE")&&!Xe().get("IS_BROWSER")&&Xe().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Xe().global.fetch?Xe().global.fetch(e,t):(null==Io&&(Io=n(817)),Io(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const _o=Za({cast_:function(e,t){const n=Ka(e,"x","cast");if(!Se(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return La.runKernel(It,r,s)}}),No=Za({clone_:function(e){const t={x:Ka(e,"x","clone","string_or_numeric")};return La.runKernel(yn,t)}});function Eo(e,t=!1){console.log(e.toString(t))}Ma(),fa={buffer:So,cast:_o,clone:No,print:Eo};const $o=Za({add_:function(e,t){let n=Ka(e,"a","add"),r=Ka(t,"b","add");[n,r]=$a(n,r);const s={a:n,b:r};return La.runKernel(rt,s)}}),Co=Za({floorDiv_:function(e,t){let n=Ka(e,"a","floorDiv"),r=Ka(t,"b","floorDiv");[n,r]=$a(n,r);const s={a:n,b:r};return La.runKernel(hn,s)}}),Ao=Za({div_:function(e,t){let n=Ka(e,"a","div"),r=Ka(t,"b","div");if([n,r]=$a(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Co(n,r);const s={a:n,b:r};return La.runKernel(Zt,s,{})}}),Oo=Za({mul_:function(e,t){let n=Ka(e,"a","mul"),r=Ka(t,"b","mul");[n,r]=$a(n,r);const s={a:n,b:r};return La.runKernel(Zn,s)}}),Do=Za({sqrt_:function(e){const t={x:Ka(e,"x","sqrt","float32")};return La.runKernel(Lr,t)}}),Ro=Za({square_:function(e){const t=Ka(e,"x","square");return La.runKernel("Square",{x:t},{})}}),Fo=Za({zerosLike_:function(e){const t={x:Ka(e,"x","zerosLike")};return La.runKernel(ps,t)}});function Po(e){return ie(De(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Ka(t,"x","tf.grad","string_or_numeric"),s=null!=n?Ka(n,"dy","tf.grad"):null;return La.tidy((()=>{const{value:t,grads:n}=La.gradients((()=>e(r)),[r],s);return null!=s&&oe(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Vo(n),n[0]}))}}function Mo(e){return ie(De(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{ie(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Xa(t,"args","tf.grads","string_or_numeric"),s=null!=n?Ka(n,"dy","tf.grads"):null;return La.tidy((()=>{const{value:t,grads:n}=La.gradients((()=>e(...r)),r,s);return null!=s&&oe(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Vo(n),n}))}}function Lo(e){return ie(De(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{ie(t instanceof ga,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),ie(null==n||n instanceof ga,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=La.gradients((()=>e(t)),[t],n);return Vo(r),{grad:r[0],value:s}}}function zo(e){return ie(De(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{ie(Array.isArray(t)&&t.every((e=>e instanceof ga)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),ie(null==n||n instanceof ga,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=La.gradients((()=>e(...t)),t,n);return null!=n&&oe(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Vo(r.grads),r}}function Bo(e,t){ie(De(e),(()=>"The f passed in variableGrads(f) must be a function")),ie(null==t||Array.isArray(t)&&t.every((e=>e instanceof ba)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in La.registeredVariables)t.push(La.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),ie(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=La.gradients(e,t,null,!0);ie(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ie(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}function Uo(e){return La.customGrad(e)}function Vo(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Wo(e,t){if((Qs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Qs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Qa(e,[],[],t)}const Go=new Map,jo=new Map;class Ho{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class qo{constructor(){this.classNameMap={}}static getMap(){return null==qo.instance&&(qo.instance=new qo),qo.instance}static register(e){qo.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ko(e,t,n){ie(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ie("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ie(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return qo.register(e),Go.set(r,e),jo.set(e,r),e}function Xo(e){return jo.has(e)?jo.get(e):e.className}class Yo extends Ho{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return pi(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Bo(e,t)}dispose(){null!=this.iterations_&&pi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Wo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Yo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Zo extends Yo{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=La.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=La.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:hi((()=>Fo(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:hi((()=>Fo(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;hi((()=>{const e=$o(Oo(a,this.rho),Oo(Ro(s),1-this.rho)),t=Oo(Ao(Do($o(i,this.epsilon)),Do($o(a,this.epsilon))),s),n=$o(Oo(i,this.rho),Oo(Ro(t),1-this.rho));a.assign(e),i.assign(n);const o=$o(Oo(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(pi(this.accumulatedGrads.map((e=>e.variable))),pi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Jo(e,t,n){Ve(e);const r={shape:e,value:t,dtype:n=n||Oe(t)};return La.runKernel(ln,{},r)}class Qo extends Yo{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=La.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:hi((()=>Jo(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;hi((()=>{const e=$o(a,Ro(s));a.assign(e);const t=$o(Oo(Ao(s,Do($o(e,La.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&pi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const el=Za({pow_:function(e,t){let n=Ka(e,"base","pow"),r=Ka(t,"exp","pow");[n,r]=$a(n,r);const s={a:n,b:r};return La.runKernel(lr,s)}}),tl=Za({sub_:function(e,t){let n=Ka(e,"a","sub"),r=Ka(t,"b","sub");[n,r]=$a(n,r);const s={a:n,b:r};return La.runKernel(ts,s)}});class nl extends Yo{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],hi((()=>{this.accBeta1=Wo(t).variable(),this.accBeta2=Wo(n).variable()})),null==r&&(this.epsilon=La.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);hi((()=>{const n=tl(1,this.accBeta1),r=tl(1,this.accBeta2);t.forEach(((t,s)=>{const a=La.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:hi((()=>Fo(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:hi((()=>Fo(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=$o(Oo(o,this.beta1),Oo(i,1-this.beta1)),c=$o(Oo(l,this.beta2),Oo(Ro(i),1-this.beta2)),h=Ao(u,n),p=Ao(c,r);o.assign(u),l.assign(c);const d=$o(Oo(Ao(h,$o(Do(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(Oo(this.accBeta1,this.beta1)),this.accBeta2.assign(Oo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&pi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&pi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),hi((()=>{this.accBeta1.assign(el(this.beta1,this.iterations_+1)),this.accBeta2.assign(el(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const rl=Za({abs_:function(e){const t=Ka(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return La.runKernel(Et,e)}{const e={x:t};return La.runKernel(et,e)}}});function sl(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function al(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function il(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-s-1]=a}}return r}const ol=Za({maximum_:function(e,t){let n=Ka(e,"a","maximum"),r=Ka(t,"b","maximum");[n,r]=$a(n,r),"bool"===n.dtype&&(n=_o(n,"int32"),r=_o(r,"int32")),il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(zn,s)}});class ll extends Yo{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],hi((()=>{this.iteration=Wo(0).variable(),this.accBeta1=Wo(t).variable()})),null==r&&(this.epsilon=La.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);hi((()=>{const n=tl(1,this.accBeta1),r=Ao(-this.learningRate,$o(Oo(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=La.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Fo(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Fo(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=$o(Oo(o,this.beta1),Oo(i,1-this.beta1)),c=Oo(l,this.beta2),h=rl(i),p=ol(c,h);o.assign(u),l.assign(p);const d=$o(Oo(Ao(r,n),Ao(u,$o(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign($o(this.iteration,1)),this.accBeta1.assign(Oo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&pi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&pi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class ul extends Yo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=La.registeredVariables[t];hi((()=>{const e=$o(Oo(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=di(Wo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class cl extends ul{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Wo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=La.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:hi((()=>Fo(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&hi((()=>{let e;const t=$o(Oo(this.m,s),a);e=this.useNesterov?$o(Oo(this.c,$o(a,Oo(t,this.m))),r):$o(Oo(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&pi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class hl extends Yo{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=La.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=La.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:hi((()=>Fo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:hi((()=>Fo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:hi((()=>Fo(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;hi((()=>{const e=$o(Oo(i,this.decay),Oo(Ro(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=$o(Oo(t,this.decay),Oo(a,1-this.decay)),l=Ao(Oo(a,this.learningRate),Do(tl(e,$o(Ro(s),this.epsilon)))),u=$o(Oo(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=tl(r,u);r.assign(c)}else{const e=$o(Oo(i,this.decay),Oo(Ro(a),1-this.decay)),t=$o(Oo(o,this.momentum),Ao(Oo(a,this.learningRate),Do($o(e,this.epsilon))));i.assign(e),o.assign(t);const n=tl(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&pi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&pi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&pi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const pl=[Zo,Qo,nl,ll,cl,hl,ul];function dl(e){return new Promise((e=>setTimeout(e))).then(e)}class fl{constructor(e){if(!Xe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(fl.URL_SCHEME)&&(e=e.slice(fl.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=ni.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Mi(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await dl((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await dl((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Bi(e)}}}}fl.URL_SCHEME="downloads://";class ml{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=zi(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Pi(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=Pi(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function gl(e){return new ml(e)}function yl(e,t,n,r){!function(e){ie(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){ie(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),ie(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),ie(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function bl(e,t){null==t&&(t={});const n=null==t.fetchFunc?Xe().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await yl(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await yl(s,t.onProgress,.5,1)}async function xl(e,t="",n,r){return wl((e=>bl(e,{requestInit:r})))(e,t,n)}function wl(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=ti[l]*ue(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let p=0;return l.forEach((e=>{const n=t[e].paths.length,r=new ni(c.slice(p,p+n));a[e].forEach((e=>{const t=_i(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}Vi.registerSaveRouter((e=>Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(fl.URL_SCHEME)?function(e="model"){return new fl(e)}(e.slice(fl.URL_SCHEME.length)):null));class vl{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ie("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Xe().platform.fetch,ie(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ie(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Mi(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=ni.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Bi(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():zi(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Ui(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?Xe().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[Ui(e),await bl(t,this.loadOptions)]}}function Tl(e){return null!=e.match(vl.URL_SCHEME_REGEX)}vl.URL_SCHEME_REGEX=/^https?:\/\//;const kl=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Tl(e))):Tl(e),n)return Il(e,t)}return null};function Il(e,t){return new vl(e,t)}function Sl(e,t){return Il(e,t)}Vi.registerSaveRouter(kl),Vi.registerLoadRouter(kl);class _l{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Nl{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class El{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function $l(e,t,n,r){return new El(Cl(...arguments))}function Cl(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new _l(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _l({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _l({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Al(e){return new Nl(e)}function Ol(e){return new Nl(e)}const Dl=Za({matMul_:function(e,t,n=!1,r=!1){let s=Ka(e,"a","matMul"),a=Ka(t,"b","matMul");[s,a]=$a(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return La.runKernel(bt,i,o)}}),Rl=Za({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ka(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return La.runKernel(sr,a,i)}}),Fl=Za({imag_:function(e){const t={input:Ka(e,"input","imag")};return La.runKernel(xn,t)}}),Pl=Za({neg_:function(e){const t={x:Ka(e,"x","neg")};return La.runKernel(Jn,t)}}),Ml=Za({real_:function(e){const t={input:Ka(e,"input","real")};return La.runKernel(mr,t)}}),Ll=Za({transpose_:function(e,t,n){const r=Ka(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),ie(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{ie(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?hi((()=>{let e=Ml(r),t=Fl(r);return e=La.runKernel(os,{x:e},a),t=La.runKernel(os,{x:t},a),n&&(t=Pl(t)),Ja(e,t)})):La.runKernel(os,s,a)}}),zl=Za({confusionMatrix_:function(e,t,n){const r=Ka(e,"labels","confusionMatrix"),s=Ka(t,"predictions","confusionMatrix");ie(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),ie(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),ie(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),ie(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),ie(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=Rl(_o(r,"int32"),n),i=Rl(_o(s,"int32"),n),o=Ll(a),l=Dl(o,i);return _o(l,"int32")}});function Bl(e,t,n){if(le(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=ja(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Qa(e,t,r,n)}let Ul,Vl=!1;function Wl(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=ks(fs,La.backendName)){const n={pixels:e},r={numChannels:t};return La.runKernel(fs,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||o){if(null==Ul)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ul=new OffscreenCanvas(1,1).getContext("2d")}else Ul=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ul.canvas.width=l,Ul.canvas.height=u,Ul.drawImage(e,0,0,l,u),c=Ul.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Bl(h,[u,l,t],"int32")}async function Gl(e,t=3){let n=null;if(Xe().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Wl(n,t)}function jl(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Hl(e,t){let n=Ka(e,"img","toPixels");if(!(e instanceof ga)){const e=n;n=_o(e,"int32"),e.dispose()}jl(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=i[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*o,t[1]=s*o,t[2]=s*o):t[r]=s*o}const r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){Vl||null!=ks(Yt,La.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Vl=!0),t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function ql(e,t,n){let r=Ka(e,"img","draw");if(!(e instanceof ga)){const e=r;r=_o(e,"int32"),e.dispose()}jl(r),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const s={image:r},a={canvas:t,options:n};La.runKernel(Yt,s,a)}const Kl=Za({fromPixels_:Wl});function Xl(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ue(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Fe(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function Yl(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Zl(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Yl(n,t,e)}function Jl(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:ue(t.shape)/o,sliceSize:i,strides:[...Fe(n.slice(0,s)),1],outputSize:ue(n)}}const Ql=-2,eu=-1;function tu(e,t,n){const r=e.shape.length;ie(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),ie(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)ie(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function nu(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ru(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function su(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function au(e,t,n){return n<=e?n:n-(t-1)}function iu(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ou(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=lu(i,l,u,r,e),h=uu(o,l,u,s,e),p=su(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=hu(i,r,a,e,t,l),h[t]=pu(o,s,a,e,t,l),p[t]=cu(a,t,l);return{begin:c,end:h,strides:p}}function lu(e,t,n,r,s){const a=[...s],i=iu(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=au(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function uu(e,t,n,r,s){const a=[...s],i=iu(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=au(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=ee(0,a[e],s[e])}return a}function cu(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function hu(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=ee(0,i,l-1),i}function pu(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?ee(0,i,l):ee(-1,i,l-1),i}function du(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function fu(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function mu(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{ie(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(ie(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function gu(e,t,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Ql),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(eu),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[p.beginMask&1<<t,p.endMask&1<<t],a=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=yu(p.begin[t],0,p.strides[t],r,s,a),p.end[t]=yu(p.end[t],1,p.strides[t],r,s,a);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Ql&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>p.finalShapeGatherIndices[t]!==Ql)),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function yu(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const bu=.001,xu=.1;function wu(e,t,n){return null==n&&(n=vu()),Tu(e,t,((e,t)=>_u(e,t,n)))}function vu(){return 32===La.backend.floatPrecision()?bu:xu}function Tu(e,t,n){let r=!0;if((Qs(e)||Qs(t))&&(r=!1),Qs(e)&&Qs(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=ja(e),r=ja(t);if(!pe(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Qs(e)?e:ea(e),a=Qs(t)?t:ea(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}"undefined"!=typeof expect&&expect().nothing()}function ku(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function Iu(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return $e(e)||$e(e[0])||$e(t)||$e(t[0])?Tu(e,n,((e,t)=>e==t)):Tu(e,t,((e,t)=>_u(e,t,0)))}function Su(e,t,n){if(null==n&&(n=vu()),!_u(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function _u(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Nu(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Eu(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function $u(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?$u(n):e[t]=Zs(n)}return e}function Cu(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Au(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const Ou="4.17.0";class Du{static sgd(e){return new ul(e)}static momentum(e,t,n=!1){return new cl(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new hl(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new nl(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Zo(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new ll(e,t,n,r,s)}static adagrad(e,t=.1){return new Qo(e,t)}}const Ru=Za({acos_:function(e){const t={x:Ka(e,"x","acos")};return La.runKernel(tt,t)}}),Fu=Za({acosh_:function(e){const t={x:Ka(e,"x","acosh")};return La.runKernel(nt,t)}}),Pu=Za({addN_:function(e){ie(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),ie(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ka(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!pe(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return La.runKernel(st,r)}}),Mu=Za({all_:function(e,t=null,n=!1){const r={x:Ka(e,"x","all","bool")},s={axis:t,keepDims:n};return La.runKernel(at,r,s)}}),Lu=Za({any_:function(e,t=null,n=!1){const r={x:Ka(e,"x","any","bool")},s={axis:t,keepDims:n};return La.runKernel(it,r,s)}}),zu=Za({argMax_:function(e,t=0){const n={x:Ka(e,"x","argMax")},r={axis:t};return La.runKernel(ot,n,r)}}),Bu=Za({argMin_:function(e,t=0){const n={x:Ka(e,"x","argMin")},r={axis:t};return La.runKernel(lt,n,r)}}),Uu=Za({asin_:function(e){const t={x:Ka(e,"x","asin")};return La.runKernel(ut,t)}}),Vu=Za({asinh_:function(e){const t={x:Ka(e,"x","asinh")};return La.runKernel(ct,t)}}),Wu=Za({atan_:function(e){const t={x:Ka(e,"x","atan")};return La.runKernel(ht,t)}}),Gu=Za({atan2_:function(e,t){let n=Ka(e,"a","atan2"),r=Ka(t,"b","atan2");[n,r]=$a(n,r);const s={a:n,b:r};return La.runKernel(dt,s)}}),ju=Za({atanh_:function(e){const t={x:Ka(e,"x","atanh")};return La.runKernel(pt,t)}});function Hu(e,t,n,r,s="NHWC",a){return Xu(e,[...t,e[3]],n,a,r,null,null,ac(s))}function qu(e,t,n,r,s,a,i="channelsLast"){const[o,l]=Ju(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Xu(e,u,n,r,s,a,!1,i)}function Ku(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=Qu(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Yu(e,c,n,r,s,!1,h,a)}function Xu(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[p,d,,f]=t,[m,g]=Ju(n),[y,b]=Ju(r),x=ec(p,y),w=ec(d,b),{padInfo:v,outHeight:T,outWidth:k}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Zu(e,t,n));const a=e[1];return[tc((e[0]-t+2*r)/n+1,s),tc((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),p=e-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],d="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=tc((t-a+p+d)/r+1,o),h=tc((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,w,a,o),I=i?f*h:f;let S;return"channelsFirst"===o?S=[l,I,T,k]:"channelsLast"===o&&(S=[l,T,k,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:T,outWidth:k,outChannels:I,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Yu(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=Qu(n),[w,v,T]=Qu(r),k=ec(d,w),I=ec(f,v),S=ec(m,T),{padInfo:_,outDepth:N,outHeight:E,outWidth:$}=function(e,t,n,r,s,a,i,o,l,u,c){let h,p,d,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=Zu(e,t[0],r[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=tc((e[n]-t[n]+2*s)/r[n]+1,a));return i}([t,n,r,1],[o,l,u],0,[s,a,i],e,c);p=m[0],d=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{p=Math.ceil(t/s),d=Math.ceil(n/a),f=Math.ceil(r/i);const e=(p-1)*s+o-t,c=(d-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,u,c,h,y,b,x,k,I,S,o),C=a?g*p:g;let A;return"channelsFirst"===i?A=[l,C,N,E,$]:"channelsLast"===i&&(A=[l,N,E,$,C]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:N,outHeight:E,outWidth:$,outChannels:C,padInfo:_,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:T,inShape:e,outShape:A,filterShape:t}}function Zu(e,t,n,r=1){const s=ec(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Ju(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Qu(e){return"number"==typeof e?[e,e,e]:e}function ec(e,t){return t<=1?e:e+(e-1)*(t-1)}function tc(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function nc(e){const[t,n,r]=Ju(e);return 1===t&&1===n&&1===r}function rc(e,t){return nc(e)||nc(t)}function sc(e){return Ju(e).every((e=>e>0))}function ac(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function ic(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)ie(de(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{ie(de(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const oc=Za({reshape_:function(e,t){const n={x:Ka(e,"x","reshape","string_or_numeric")},r={shape:t};return La.runKernel(br,n,r)}}),lc=Za({avgPool_:function(e,t,n,r,s){const a=Ka(e,"x","avgPool","float32");ie(rc(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=oc(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),ic("avgPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=La.runKernel(ft,l,u);return c=_o(c,a.dtype),o?oc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),uc=Za({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Ka(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=oc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),ie("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),ie("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),ic("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=La.runKernel(gt,u,c);return h=_o(h,o.dtype),l?oc(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),cc=Za({concat_:function(e,t=0){ie(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Xa(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return No(n[0]);const r=n,s={axis:t};return La.runKernel($t,r,s)}}),hc=Za({sigmoid_:function(e){const t={x:Ka(e,"x","sigmoid","float32")};return La.runKernel(Pr,t)}}),pc=Za({slice_:function(e,t,n){const r=Ka(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return La.runKernel(Or,s,a)}}),dc=Za({tanh_:function(e){const t={x:Ka(e,"x","tanh","float32")};return La.runKernel(rs,t)}}),fc=Za({basicLSTMCell_:function(e,t,n,r,s,a){const i=Ka(e,"forgetBias","basicLSTMCell"),o=Ka(t,"lstmKernel","basicLSTMCell"),l=Ka(n,"lstmBias","basicLSTMCell"),u=Ka(r,"data","basicLSTMCell"),c=Ka(s,"c","basicLSTMCell"),h=Ka(a,"h","basicLSTMCell"),p=cc([u,h],1),d=Dl(p,o),f=$o(d,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=pc(f,[0,0],y),x=pc(f,[0,g],y),w=pc(f,[0,2*g],y),v=pc(f,[0,3*g],y),T=$o(Oo(hc(b),dc(x)),Oo(c,hc($o(i,w))));return[T,Oo(dc(T),hc(v))]}}),mc=Za({batchToSpaceND_:function(e,t,n){const r=Ka(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));ie(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ie(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ie(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return La.runKernel(xt,a,i)}}),gc=Za({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Ka(e,"x","batchNorm"),o=Ka(t,"mean","batchNorm"),l=Ka(n,"variance","batchNorm");let u,c;null!=s&&(u=Ka(s,"scale","batchNorm")),null!=r&&(c=Ka(r,"offset","batchNorm")),ie(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?oc(e,[1,1,1,e.size]):2===e.rank?oc(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?oc(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},d=La.runKernel(pn,h,p);return oc(d,i.shape)}}),yc=Za({batchNorm2d_:function(e,t,n,r,s,a){const i=Ka(e,"x","batchNorm"),o=Ka(t,"mean","batchNorm"),l=Ka(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ka(s,"scale","batchNorm")),null!=r&&(c=Ka(r,"offset","batchNorm")),ie(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),ie(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ie(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&ie(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),gc(i,o,l,c,u,a)}}),bc=Za({batchNorm3d_:function(e,t,n,r,s,a){const i=Ka(e,"x","batchNorm"),o=Ka(t,"mean","batchNorm"),l=Ka(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ka(s,"scale","batchNorm")),null!=r&&(c=Ka(r,"offset","batchNorm")),ie(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),ie(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ie(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&ie(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),gc(i,o,l,c,u,a)}}),xc=Za({batchNorm4d_:function(e,t,n,r,s,a){const i=Ka(e,"x","batchNorm"),o=Ka(t,"mean","batchNorm"),l=Ka(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ka(s,"scale","batchNorm")),null!=r&&(c=Ka(r,"offset","batchNorm")),ie(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),ie(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ie(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&ie(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),gc(i,o,l,c,u,a)}}),wc=Za({bincount_:function(e,t,n){const r=Ka(e,"x","bincount"),s=Ka(t,"weights","bincount");ie("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),ie(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ie(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return La.runKernel(wt,a,i)}}),vc=Za({bitwiseAnd_:function(e,t){const n=Ka(e,"x","bitwiseAnd"),r=Ka(t,"y","bitwiseAnd");if(!pe(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return La.runKernel(vt,s)}}),Tc=Za({broadcastArgs_:function(e,t){const n=Ka(e,"s0","broadcastArgs","int32"),r=Ka(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return La.runKernel(kt,s)}}),kc=Za({broadcastTo_:function(e,t){let n=Ka(e,"broadcastTo","x");const r=n.shape;if(Ve(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=oc(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return No(n);const i={x:n},o={reps:a};return La.runKernel(ss,i,o)}}),Ic=Za({ceil_:function(e){const t={x:Ka(e,"x","ceil","float32")};return La.runKernel(St,t)}}),Sc=Za({clipByValue_:function(e,t,n){const r=Ka(e,"x","clipByValue");if(ie(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Jo(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return La.runKernel(_t,s,a)}}),_c=Za({concat1d_:function(e){return cc(e,0)}}),Nc=Za({concat2d_:function(e,t){return cc(e,t)}}),Ec=Za({concat3d_:function(e,t){return cc(e,t)}}),$c=Za({concat4d_:function(e,t){return cc(e,t)}}),Cc=Za({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ka(e,"x","conv2d","float32"),l=Ka(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=oc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),ie(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),ic("conv2d",r,i);const h="NHWC"===s?u.shape[3]:u.shape[1];ie(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),ie(rc(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ie(sc(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),ie(sc(n),(()=>"Error in conv2D: Strides should be larger than 0."));const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=La.runKernel(Ct,p,d);return c?oc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ac=Za({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Ka(e,"x","conv1d"),l=Ka(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=oc(o,[1,o.shape[0],o.shape[1]])),ie(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),ie(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),ic("conv1d",r,i),ie(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),ie(rc(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),ie(sc(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),ie(sc(n),(()=>"Error in conv1D: Stride should be larger than 0.")),ie("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=oc(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=oc(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=Cc(p,h,[1,n],r,"NHWC",[1,a],i);return oc(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Oc=Za({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){ie(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=oc(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ie(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ie(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),ie(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];ie(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),ie(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),ic("conv2dDerInput",s,i);const p={dy:l,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=La.runKernel(Ot,p,d);return u?oc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Dc=Za({conv2dTranspose_:function(e,t,n,r,s,a){const i=Ka(e,"x","conv2dTranspose"),o=Ka(t,"filter","conv2dTranspose");return Oc(n,i,o,r,s,"NHWC",a)}}),Rc=Za({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Ka(e,"x","conv3d"),o=Ka(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=oc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),ie(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ie(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ie(rc(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ie("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),ie(sc(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),ie(sc(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},p=La.runKernel(Dt,c,h);return u?oc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Fc=Za({conv3DBackpropInput_:function(e,t,n,r,s){ie(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=oc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];ie(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),ie(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),ie(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ie(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),ie(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},p=La.runKernel(Ft,c,h);return o?oc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Pc=Za({conv3dTranspose_:function(e,t,n,r,s){const a=Ka(e,"x","conv3dTranspose"),i=Ka(t,"filter","conv3dTranspose");return Fc(n,a,i,r,s)}}),Mc=Za({cos_:function(e){const t={x:Ka(e,"x","cos","float32")};return La.runKernel(Pt,t)}}),Lc=Za({cosh_:function(e){const t={x:Ka(e,"x","cosh","float32")};return La.runKernel(Mt,t)}}),zc=Za({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:Ka(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return La.runKernel(Lt,s,a)}}),Bc=Za({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Ka(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return La.runKernel(zt,s,a)}}),Uc=Za({denseBincount_:function(e,t,n,r=!1){const s=Ka(e,"x","denseBincount"),a=Ka(t,"weights","denseBincount");ie("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),ie(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),ie(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ie(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return La.runKernel(Ut,i,o)}}),Vc=Za({depthToSpace_:function(e,t,n="NHWC"){const r=Ka(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];ie(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),ie(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ie(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ie(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return La.runKernel(Vt,o,l)}}),Wc=Za({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ka(e,"x","depthwiseConv2d","float32"),l=Ka(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=oc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),ie(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];ie(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),ic("depthwiseConv2d",r,i);const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=La.runKernel(Wt,p,d);return c?oc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Gc=Za({diag_:function(e){const t={x:Ka(e,"x","diag")};return La.runKernel(Ht,t)}}),jc=Za({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Ka(e,"x","dilation2d"),o=Ka(t,"filter","dilation2d");ie(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),ie(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ie("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=oc(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),ie(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},p=La.runKernel(qt,c,h);return u?oc(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Hc=Za({equal_:function(e,t){let n=Ka(e,"a","equal","string_or_numeric"),r=Ka(t,"b","equal","string_or_numeric");[n,r]=$a(n,r),il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(nn,s)}}),qc=Za({where_:function(e,t,n){const r=Ka(t,"a","where"),s=Ka(n,"b","where"),a=Ka(e,"condition","where","bool"),i=il(il(a.shape,r.shape),s.shape),o={condition:kc(a,i),t:kc(r,i),e:kc(s,i)};return La.runKernel(Cr,o)}}),Kc=Za({divNoNan_:function(e,t){let n=Ka(e,"a","div"),r=Ka(t,"b","div");[n,r]=$a(n,r);const s=Ao(n,r),a=Fo(s),i=Hc(r,a);return qc(i,a,s)}}),Xc=Za({dot_:function(e,t){const n=Ka(e,"t1","dot"),r=Ka(t,"t2","dot");ie(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(ie(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=oc(n,[1,-1]),t=oc(r,[-1,1]),s=Dl(e,t);return oc(s,[])}if(1===n.rank&&2===r.rank){const e=oc(n,[1,-1]),t=oc(r,[r.shape[0],r.shape[1]]),s=Dl(e,t);return oc(s,[s.size])}if(2===n.rank&&1===r.rank){const e=oc(r,[-1,1]),t=Dl(n,e);return oc(t,[t.size])}{const e=oc(r,[r.shape[0],r.shape[1]]);return Dl(n,e)}}}),Yc=Za({einsum_:function(e,...t){const n=t.map(((e,t)=>Ka(e,`tensors${t}`,"einsum"))),r={equation:e};return La.runKernel(Jt,n,r)}}),Zc=Za({elu_:function(e){const t={x:Ka(e,"x","elu","float32")};return La.runKernel(Qt,t)}}),Jc=Za({ensureShape_:function(e,t){const n=Ka(e,"x","ensureShape","string_or_numeric");if(!he(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Qc=Za({erf_:function(e){let t=Ka(e,"x","erf");ie("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=_o(t,"float32"));const n={x:t};return La.runKernel(tn,n)}});function eh(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function th(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function nh(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function rh(e,t){return th(e,t.map((e=>1)),t)}function sh(e,t,n){ie(eh(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function ah(e,t){if(eh(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function ih(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function oh(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const lh=Za({max_:function(e,t=null,n=!1){const r={x:Ka(e,"x","max")},s={reductionIndices:t,keepDims:n};return La.runKernel(Ln,r,s)}}),uh=Za({min_:function(e,t=null,n=!1){const r={x:Ka(e,"x","min")},s={axis:t,keepDims:n};return La.runKernel(Hn,r,s)}}),ch=Za({sum_:function(e,t=null,n=!1){let r=Ka(e,"x","sum");"bool"===r.dtype&&(r=_o(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return La.runKernel(zr,s,a)}});function hh(e,t,n=null){if(0===e.rank)return rl(e);if(1!==e.rank&&null===n)return hh(oc(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ch(rl(e),n);if(t===1/0)return lh(rl(e),n);if(t===-1/0)return uh(rl(e),n);if("euclidean"===t||2===t)return Do(ch(el(rl(e),Wo(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return lh(ch(rl(e),n[0]),n[1]-1);if(t===1/0)return lh(ch(rl(e),n[1]),n[0]);if(t===-1/0)return uh(ch(rl(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Do(ch(Ro(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ph=Za({norm_:function(e,t="euclidean",n=null,r=!1){const s=hh(e=Ka(e,"x","norm"),t,n);let a=s.shape;if(r){const t=we(n,e.shape);a=rh(s.shape,t)}return oc(s,a)}}),dh=Za({euclideanNorm_:function(e,t=null,n=!1){return ph(e,"euclidean",t,n)}}),fh=Za({exp_:function(e){const t={x:Ka(e,"x","exp")};return La.runKernel(rn,t)}}),mh=Za({expandDims_:function(e,t=0){const n=Ka(e,"x","expandDims","string_or_numeric");ie(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return La.runKernel(sn,r,s)}}),gh=Za({expm1_:function(e){const t={x:Ka(e,"x","expm1")};return La.runKernel(an,t)}}),yh=Za({tile_:function(e,t){const n=Ka(e,"x","tile","string_or_numeric");ie(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return La.runKernel(ss,r,s)}}),bh=Za({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=So([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=oc(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return yh(mh(i,0),[n[0],1,1]);if(2===n.length)return yh(mh(mh(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return yh(mh(mh(mh(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),xh=Za({floor_:function(e){const t={x:Ka(e,"x","floor","float32")};return La.runKernel(cn,t)}}),wh=Za({gather_:function(e,t,n=0,r=0){const s={x:Ka(e,"x","gather"),indices:Ka(t,"indices","gather","int32")},a={axis:n,batchDims:r};return La.runKernel(dn,s,a)}}),vh=Za({greater_:function(e,t){let n=Ka(e,"a","greater","string_or_numeric"),r=Ka(t,"b","greater","string_or_numeric");[n,r]=$a(n,r),il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(mn,s)}}),Th=Za({greaterEqual_:function(e,t){let n=Ka(e,"a","greaterEqual","string_or_numeric"),r=Ka(t,"b","greaterEqual","string_or_numeric");[n,r]=$a(n,r),il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(gn,s)}}),kh=Za({isFinite_:function(e){const t={x:Ka(e,"x","isFinite")};return La.runKernel(wn,t)}}),Ih=Za({isInf_:function(e){const t={x:Ka(e,"x","isInf")};return La.runKernel(vn,t)}}),Sh=Za({isNaN_:function(e){const t={x:Ka(e,"x","isNaN")};return La.runKernel(Tn,t)}}),_h=Za({leakyRelu_:function(e,t=.2){const n={x:Ka(e,"x","leakyRelu")},r={alpha:t};return La.runKernel(kn,n,r)}}),Nh=Za({less_:function(e,t){let n=Ka(e,"a","less","string_or_numeric"),r=Ka(t,"b","less","string_or_numeric");[n,r]=$a(n,r),il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(In,s)}}),Eh=Za({lessEqual_:function(e,t){let n=Ka(e,"a","lessEqual","string_or_numeric"),r=Ka(t,"b","lessEqual","string_or_numeric");[n,r]=$a(n,r),il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(Sn,s)}});function $h(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return La.runKernel(_n,{},r)}const Ch=Za({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Ka(e,"x","localResponseNormalization");ie(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),ie(de(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=oc(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=La.runKernel(Fn,l,u);return o?oc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ah=Za({log_:function(e){const t={x:Ka(e,"x","log","float32")};return La.runKernel(Nn,t)}}),Oh=Za({log1p_:function(e){const t={x:Ka(e,"x","log1p")};return La.runKernel(En,t)}}),Dh=Za({softplus_:function(e){const t={x:Ka(e,"x","softplus")};return La.runKernel(Mr,t)}}),Rh=Za({logSigmoid_:function(e){const t=Ka(e,"x","logSigmoid");return Uo((e=>({value:Pl(Dh(Pl(e))),gradFunc:t=>Oo(t,hc(Pl(e)))})))(t)}}),Fh=Za({logSoftmax_:function(e,t=-1){const n=Ka(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Uo(((e,n)=>{const r=lh(e,t,!0),s=tl(e,r),a=tl(_o(s,"float32"),Ah(ch(fh(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=fh(r);return tl(e,Oo(ch(e,t,!0),s))}}}));return r(n)}}),Ph=Za({logSumExp_:function(e,t=null,n=!1){const r=Ka(e,"x","logSumExp"),s=we(t,r.shape),a=lh(r,s,!0),i=tl(r,a),o=fh(i),l=ch(o,s),u=Ah(l),c=$o(oc(a,u.shape),u);if(n){const e=rh(c.shape,s);return oc(c,e)}return c}}),Mh=Za({logicalAnd_:function(e,t){const n=Ka(e,"a","logicalAnd","bool"),r=Ka(t,"b","logicalAnd","bool");il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel($n,s)}}),Lh=Za({logicalNot_:function(e){const t={x:Ka(e,"x","logicalNot","bool")};return La.runKernel(Cn,t)}}),zh=Za({logicalOr_:function(e,t){const n=Ka(e,"a","logicalOr","bool"),r=Ka(t,"b","logicalOr","bool");il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(An,s)}}),Bh=Za({logicalXor_:function(e,t){const n=Ka(e,"a","logicalXor","bool"),r=Ka(t,"b","logicalXor","bool");return il(n.shape,r.shape),Mh(zh(e,t),Lh(Mh(e,t)))}}),Uh=2147483648,Vh=Za({searchSorted_:function(e,t,n="left"){const r=Ka(e,"sortedSequence","searchSorted"),s=Ka(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=oc(r,[-1,a]),l=oc(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ue(l.shape)>=Uh)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=Uh)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return La.runKernel($r,u,c)}});function Wh(e,t){return Vh(e,t,"left")}const Gh=Za({maxPool_:function(e,t,n,r,s){const a=Ka(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=oc(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),ie(rc(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),ic("maxPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=La.runKernel(Bn,l,u);return o?oc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),jh=Za({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Ka(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=oc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),ie("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),ic("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=La.runKernel(Vn,u,c);return l?oc(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Hh=Za({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:Ka(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=La.runKernel(Gn,a,i);return{result:o[0],indexes:o[1]}}}),qh=Za({mean_:function(e,t=null,n=!1){const r={x:Ka(e,"x","mean")},s={axis:t,keepDims:n};return La.runKernel(jn,r,s)}});function Kh(e,t="float32"){if(Ve(e),"complex64"===t){const t=Kh(e,"float32"),n=Kh(e,"float32");return Ja(t,n)}const n=Be(ue(e),t);return La.makeTensor(n,e,t)}function Xh(e,t="float32"){if(Ve(e),"complex64"===t){const t=Xh(e,"float32"),n=Kh(e,"float32");return Ja(t,n)}const n=ze(ue(e),t);return La.makeTensor(n,e,t)}function Yh(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ka(e,"x","meshgrid",e instanceof ga?e.dtype:"float32");if(void 0===t)return[r];let s=Ka(t,"y","meshgrid",t instanceof ga?t.dtype:"float32");const a=ue(r.shape),i=ue(s.shape);return"xy"===n?(r=oc(r,[1,-1]),s=oc(s,[-1,1]),[Dl(Xh([i,1],r.dtype),r),Dl(s,Xh([1,a],s.dtype))]):(r=oc(r,[-1,1]),s=oc(s,[1,-1]),[Dl(r,Xh([1,i],r.dtype)),Dl(Xh([a,1],s.dtype),s)])}const Zh=Za({minimum_:function(e,t){let n=Ka(e,"a","minimum"),r=Ka(t,"b","minimum");[n,r]=$a(n,r),"bool"===n.dtype&&(n=_o(n,"int32"),r=_o(r,"int32")),il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(qn,s)}}),Jh=Za({mirrorPad_:function(e,t,n){ie("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ka(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ie(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ie(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ie(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return La.runKernel(Kn,i,a)}}),Qh=Za({mod_:function(e,t){let n=Ka(e,"a","mod"),r=Ka(t,"b","mod");[n,r]=$a(n,r);const s={a:n,b:r};return La.runKernel(Xn,s)}}),ep=Za({moments_:function(e,t=null,n=!1){const r=we(t,(e=Ka(e,"x","moments")).shape),s=qh(e,r,n);let a=s.shape;n||(a=rh(s.shape,r));const i=Ro(tl(_o(e,"float32"),oc(s,a)));return{mean:s,variance:qh(i,r,n)}}}),tp=Za({multiRNNCell_:function(e,t,n,r){const s=Ka(t,"data","multiRNNCell"),a=Xa(n,"c","multiRNNCell"),i=Xa(r,"h","multiRNNCell");let o=s;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}}),np=Za({multinomial_:function(e,t,n,r=!1){const s=Ka(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?oc(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=La.runKernel(Yn,o,l);return 1===i?oc(u,[u.size]):u}}),rp=Za({notEqual_:function(e,t){let n=Ka(e,"a","notEqual","string_or_numeric"),r=Ka(t,"b","notEqual","string_or_numeric");[n,r]=$a(n,r),il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(Qn,s)}}),sp=Za({onesLike_:function(e){const t={x:Ka(e,"x","onesLike")};return La.runKernel(rr,t)}}),ap=Za({outerProduct_:function(e,t){const n=Ka(e,"v1","outerProduct"),r=Ka(t,"v2","outerProduct");ie(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=oc(n,[-1,1]),a=oc(r,[1,-1]);return Dl(s,a)}}),ip=Za({pad_:function(e,t,n=0){const r=Ka(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return La.runKernel(ir,a,s)}}),op=Za({pad1d_:function(e,t,n=0){return ie(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),ip(e,[t],n)}}),lp=Za({pad2d_:function(e,t,n=0){return ie(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ip(e,t,n)}}),up=Za({pad3d_:function(e,t,n=0){return ie(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ip(e,t,n)}}),cp=Za({pad4d_:function(e,t,n=0){return ie(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ip(e,t,n)}}),hp=Za({spaceToBatchND_:function(e,t,n){const r=Ka(e,"x","spaceToBatchND");ie(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ie(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ie(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return La.runKernel(Br,s,a)}}),pp=Za({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Ka(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=oc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(rc(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=qu(l.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?l:hp(l,h,f),b=("avg"===n?()=>lc(y,t,a,g,i):()=>Gh(y,t,a,g,i))(),x=d?b:mc(b,h,m);return u?oc(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),dp=Za({prelu_:function(e,t){const n={x:Ka(e,"x","prelu"),alpha:Ka(t,"alpha","prelu")};return La.runKernel(ur,n)}}),fp=Za({prod_:function(e,t=null,n=!1){let r=Ka(e,"x","prod");"bool"===r.dtype&&(r=_o(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return La.runKernel(cr,s,a)}}),mp=Za({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>Ka(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:Ka(t,"paramsDenseValues","raggedGather"),indices:Ka(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},i=La.runKernel(hr,s,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),gp=Za({raggedRange_:function(e,t,n){const r=Ka(e,"starts","raggedRange"),s={starts:r,limits:Ka(t,"limits","raggedRange",r.dtype),deltas:Ka(n,"deltas","raggedRange",r.dtype)},a=La.runKernel(pr,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}}),yp=Za({raggedTensorToTensor_:function(e,t,n,r,s){const a=Ka(e,"shape","raggedTensorToTensor","int32"),i=Ka(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:Ka(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>Ka(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:s};return La.runKernel(dr,o,l)}}),bp=Za({rand_:function(e,t,n){Ve(e);const r=ue(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return La.makeTensor(s,e,n)}});var xp=n(391);class wp{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=xp.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class vp{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=xp.alea(s.toString()),this.randn=new wp(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Tp{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=xp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const kp=Za({randomGamma_:function(e,t,n=1,r="float32",s){if(Ve(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new vp(t,n,r,s),i=So(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Ip=Za({randomNormal_:function(e,t=0,n=1,r,s){if(Ve(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new wp(t,n,r,!1,s),i=So(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Sp=Za({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Ip(e,0,1,t,n)}}),_p=Za({randomUniform_:function(e,t=0,n=1,r="float32",s){Ve(e);const a=So(e,r),i=new Tp(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Np=Za({randomUniformInt_:function(e,t,n,r){return _p(e,t,n,"int32",r)}});function Ep(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return La.runKernel(fr,{},s)}const $p=Za({reciprocal_:function(e){const t={x:Ka(e,"x","reciprocal")};return La.runKernel(gr,t)}}),Cp=Za({relu_:function(e){const t={x:Ka(e,"x","relu")};return La.runKernel(yr,t)}}),Ap=Za({relu6_:function(e){const t={x:Ka(e,"x","relu6")};return La.runKernel(kr,t)}}),Op=Za({reverse_:function(e,t){const n={x:Ka(e,"x","reverse")},r={dims:t};return La.runKernel(Ir,n,r)}}),Dp=Za({reverse1d_:function(e){const t=Ka(e,"x","reverse");return ie(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Op(t,0)}}),Rp=Za({reverse2d_:function(e,t){const n=Ka(e,"x","reverse");return ie(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Op(n,t)}}),Fp=Za({reverse3d_:function(e,t){const n=Ka(e,"x","reverse");return ie(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Op(n,t)}}),Pp=Za({reverse4d_:function(e,t){const n=Ka(e,"x","reverse");return ie(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Op(n,t)}}),Mp=Za({round_:function(e){const t={x:Ka(e,"x","round")};return La.runKernel(Sr,t)}}),Lp=Za({rsqrt_:function(e){const t={x:Ka(e,"x","rsqrt","float32")};return La.runKernel(_r,t)}}),zp=Za({selu_:function(e){const t={x:Ka(e,"x","selu")};return La.runKernel(Ar,t)}}),Bp=Za({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Ka(e,"x","separableConv2d"),l=Ka(t,"depthwiseFilter","separableConv2d"),u=Ka(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=oc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ie(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),ie(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),ie(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),ie(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),ie(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];ie(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=Wc(c,l,r,s,i,a),m=Cc(f,u,1,"valid",i);return h?oc(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Up=async function(e,t){const n=Ka(e,"x","setdiff1d"),r=Ka(t,"y","setdiff1d");ie(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),ie(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),ie(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const l=new pa([o],n.dtype),u=new pa([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(l.values[t]=s[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},Vp=Za({sign_:function(e){const t={x:Ka(e,"x","sign")};return La.runKernel(Fr,t)}}),Wp=Za({sin_:function(e){const t={x:Ka(e,"x","sin","float32")};return La.runKernel(Dr,t)}}),Gp=Za({sinh_:function(e){const t={x:Ka(e,"x","sinh")};return La.runKernel(Rr,t)}}),jp=Za({slice1d_:function(e,t,n){const r=Ka(e,"x","slice1d");return ie(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),pc(r,[t],[n])}}),Hp=Za({slice2d_:function(e,t,n){const r=Ka(e,"x","slice2d");return ie(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),pc(r,t,n)}}),qp=Za({slice3d_:function(e,t,n){const r=Ka(e,"x","slice3d");return ie(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),pc(r,t,n)}}),Kp=Za({slice4d_:function(e,t,n){const r=Ka(e,"x","slice4d");return ie(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),pc(r,t,n)}}),Xp=Za({softmax_:function(e,t=-1){const n=Ka(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return La.runKernel(Vr,r,s)}}),Yp=Za({fft_:function(e){ie("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return La.runKernel(on,t)}}),Zp=Za({ifft_:function(e){ie("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return La.runKernel(bn,t)}}),Jp=Za({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=oc(e,[n,t]);r=Zp(s)}else{const s=[n,2*(t-1)],a=oc(Ml(e),[n,t]),i=oc(Fl(e),[n,t]),o=Op(pc(a,[0,1],[n,t-2]),1),l=Oo(Op(pc(i,[0,1],[n,t-2]),1),Wo(-1)),u=cc([a,o],1),c=cc([i,l],1),h=oc(Ja(u,c),[s[0],s[1]]);r=Zp(h)}if(r=Ml(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=oc(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Qp=Za({split_:function(e,t,n=0){const r={x:Ka(e,"x","split")},s={numOrSizeSplits:t,axis:n};return La.runKernel(Ur,r,s)}}),ed=Za({rfft_:function(e,t){ie("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=pc(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=cc([e,Kh(r)],e.shape.length-1),n=t}else s=e;const a=Fo(s),i=oc(Ja(s,a),[r,n]),o=Yp(i),l=Math.floor(n/2)+1,u=Ml(o),c=Fl(o),h=Qp(u,[l,n-l],u.shape.length-1),p=Qp(c,[l,n-l],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=l,oc(Ja(h[0],p[0]),d)}}),td=Za({squaredDifference_:function(e,t){let n=Ka(e,"a","squaredDifference"),r=Ka(t,"b","squaredDifference");[n,r]=$a(n,r),il(n.shape,r.shape);const s={a:n,b:r};return La.runKernel(Kr,s,{})}}),nd=Za({squeeze_:function(e,t){const n=Ka(e,"x","squeeze","string_or_numeric");return oc(n,ve(n.shape,t).newShape)}}),rd=Za({stack_:function(e,t=0){const n=Xa(e,"tensors","stack","string_or_numeric");ie(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ie(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return La.runKernel(ar,r,s)}}),sd=Za({step_:function(e,t=0){const n={x:Ka(e,"x","step")},r={alpha:t};return La.runKernel(ds,n,r)}}),ad=Za({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:Ka(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return La.runKernel(Zr,u,c)}}),id=Za({tan_:function(e){const t={x:Ka(e,"x","tan","float32")};return La.runKernel(ns,t)}});function od(e,t){le(e);const n=ja(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Qa(e,null,n,t)}function ld(e,t,n){if(le(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ja(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Qa(e,t,r,n)}function ud(e,t,n){if(le(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=ja(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Qa(e,t,r,n)}function cd(e,t,n){if(le(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=ja(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Qa(e,t,r,n)}function hd(e,t,n){if(le(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=ja(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Qa(e,t=t||r,r,n)}const pd=Za({tensorScatterUpdate_:function(e,t,n){const r=Ka(e,"tensor","tensorScatterupdate"),s=Ka(t,"indices","tensorScatterupdate","int32"),a=Ka(n,"updates","tensorScatterupdate");if(Zl(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const i={tensor:r,indices:s,updates:a};return La.runKernel(Er,i,{})}}),dd=Za({topk_:function(e,t=1,n=!0){const r=Ka(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=La.runKernel(as,a,i);return{values:o,indices:l}}}),fd=Za({truncatedNormal_:function(e,t=0,n=1,r,s){if(Ve(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new wp(t,n,r,!0,s),i=So(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),md=Za({unique_:function(e,t=0){const n=Ka(e,"x","unique","string_or_numeric");ie(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=La.runKernel(ls,r,s);return{values:a,indices:i}}}),gd=Za({unsortedSegmentSum_:function(e,t,n){const r=Ka(e,"x","unsortedSegmentSum"),s=Ka(t,"segmentIds","unsortedSegmentSum","int32");ie(de(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return La.runKernel(cs,a,i)}}),yd=Za({unstack_:function(e,t=0){const n=Ka(e,"x","unstack","string_or_numeric");ie(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return La.runKernel(us,r,s)}});function bd(e,t){return Vh(e,t,"right")}function xd(e,t=!0,n,r){return La.makeVariable(e,t,n,r)}function wd(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=So(e,"int32"),s=So([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const vd=async function(e){const t=Ka(e,"condition","whereAsync","bool"),n=await t.data(),r=wd(t.shape,n);return e!==t&&t.dispose(),r},Td=async function(e,t,n){const r=Ka(e,"tensor","boolMask"),s=Ka(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;ie(i>0,(()=>"mask cannot be scalar")),oe(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+i;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=oc(r,u),h=oc(s,[-1]),p=await vd(h),d=nd(p,[1]),f=wh(c,d,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f},kd=Za({movingAverage_:function(e,t,n,r,s=!0){const a=Ka(e,"v","movingAverage"),i=Ka(t,"x","movingAverage"),o=Ka(n,"decay","movingAverage");Ca(a,i),ie(pe(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=Wo(1),u=tl(l,o);let c=Oo(tl(i,a),u);if(s){ie(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Ka(r,"step","movingAverage");c=Ao(c,tl(l,el(o,e)))}return $o(a,c)}}),Id=Za({scatterND_:function(e,t,n){Ve(n);const r=Ka(e,"indices","scatterND","int32"),s=Ka(t,"updates","scatterND");Zl(s,r,n);const a={indices:r,updates:s},i={shape:n};return La.runKernel(Nr,a,i)}}),Sd=Za({sparseToDense_:function(e,t,n,r=0){Ve(n);const s=Ka(e,"sparseIndices","sparseToDense","int32"),a=Ka(t,"sparseValues","sparseToDense","string_or_numeric"),i=Ka(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},l={outputShape:n};return La.runKernel(qr,o,l)}}),_d=Za({gatherND_:function(e,t){const n=Ka(t,"indices","gatherND","int32"),r={params:Ka(e,"x","gatherND","string_or_numeric"),indices:n};return La.runKernel(fn,r)}}),Nd=Za({dropout_:function(e,t,n,r){const s=Ka(e,"x","dropout");if(ie("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),ie(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ga?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(pe(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Ao(xh($o(_p(a,0,1,"float32",r),i)),i);return Oo(s,o)}});function Ed(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function $d(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return od(s,"float32")}const Cd=async function(e,t,n=1){const r=Ka(e,"predictions","inTopK"),s=Ka(t,"targets","inTopK");ie(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),ie(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),oe(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];ie(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[l,u]=[i.length/a,a],c=Te("bool",l);for(let e=0;e<l;e++){const t=e*u,r=i.subarray(t,t+u),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),ei(c,s.shape,"bool")},Ad=Za({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=oc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=oc(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ie(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ie(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),ie(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];ie(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),ie(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),ic("conv2dDerFilter",s,i);const h={x:o,dy:l},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return La.runKernel(At,h,p)}});function Od(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Oo(e,sd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Dd(e,t){let n=t;const r=al(e.shape,t.shape);return r.length>0&&(n=ch(n,r)),oc(n,e.shape)}function Rd(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Cp(e);if("elu"===t)return Zc(e);if("relu6"===t)return Ap(e);if("prelu"===t)return dp(e,n);if("leakyrelu"===t)return _h(e,r);if("sigmoid"===t)return hc(e);throw new Error(`Unknown fused activation ${t}.`)}const Fd=(e,t)=>!(e>0)||"linear"===t,Pd=Za({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Fd(La.state.gradientDepth,l)){ie("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Cc(e,t,n,r,s,a,i);return null!=o&&(h=$o(h,o)),Rd(h,l,u,c)}const h=Ka(e,"x","conv2d","float32"),p=Ka(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=oc(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ie(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),ie(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),ic("fused conv2d",r,i);const m="NHWC"===s?d.shape[3]:d.shape[1];ie(p.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`)),ie(rc(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=Xu(d.shape,p.shape,n,a,r,i);let y,b;if(null!=o&&(y=Ka(o,"bias","fused conv2d"),[y]=$a(y,h),"NHWC"===s?il(g.outShape,y.shape):(ie(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),ie(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const e=u.shape;if(ie(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)ie(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{il(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=Ka(u,"prelu weights","fused conv2d")}const x=(e,t)=>{ie("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,u,c]=t,h=Od(e,u,l);ie(nc(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[Oc(o.shape,h,i,n,r),Ad(o,h,i.shape,n,r)];if(null!=c){const e=Dd(c,h);p.push(e)}return p},w={x:d,filter:p,bias:y,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Uo(((e,t,n)=>{let r=La.runKernel(ys,w,v);return n([t,e,r]),f&&(r=oc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(d,p)}{const e=Uo(((e,t,n,r)=>{let s=La.runKernel(ys,w,v);return r([t,e,s,n]),f&&(s=oc(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(d,p,y)}}}),Md=Za({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=oc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=oc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return La.runKernel(Gt,u,c)}}),Ld=Za({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=oc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=La.runKernel(jt,u,c);return l?oc(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),zd=Za({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Fd(La.state.gradientDepth,l)){let h=Wc(e,t,n,r,s,a,i);return null!=o&&(h=$o(h,o)),Rd(h,l,u,c)}const h=Ka(e,"x","depthwiseConv2d","float32"),p=Ka(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=oc(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ie(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),ie(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),ie(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),ie(rc(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ic("fused depthwiseConv2d",r,i);const m=Xu(d.shape,p.shape,n,a,r,i,!0);let g,y;null!=o&&(g=Ka(o,"bias","fused conv2d"),[g]=$a(g,h),il(m.outShape,g.shape)),null!=u&&(y=Ka(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{ie(nc(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,c]=t,h=Od(e,u,l),p=Ld(o.shape,h,s,n,r,a,i),d=Md(o,h,s.shape,n,r,a,i);return null!=c?[p,d,Dd(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Uo(((e,t,n)=>{let r=La.runKernel(bs,x,w);return n([t,e,r]),f&&(r=oc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=Uo(((e,t,n,r)=>{let s=La.runKernel(bs,x,w);return r([t,e,s,n]),f&&(s=oc(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p,g)}}}),Bd=Za({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Fd(La.state.gradientDepth,a)){let l=Dl(e,t,n,r);return null!=s&&(l=$o(l,s)),Rd(l,a,i,o)}let l=Ka(e,"a","fused matMul"),u=Ka(t,"b","fused matMul");[l,u]=$a(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ue(f),y=ue(m);ie(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=il(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,d]),x=oc(l,n?[g,c,p]:[g,p,c]),w=oc(u,r?[y,d,h]:[y,h,d]);let v,T;null!=s&&(v=Ka(s,"bias","fused matMul"),[v]=$a(v,l),il(b,v.shape)),null!=i&&(T=Ka(i,"prelu weights","fused matMul"));const k=(e,t)=>{const[i,o,l,u]=t,c=Od(oc(e,l.shape),l,a);let h,p;return n||r?!n&&r?(h=Dl(c,o,!1,!1),p=Dl(c,i,!0,!1)):n&&!r?(h=Dl(o,c,!1,!0),p=Dl(i,c,!1,!1)):(h=Dl(o,c,!0,!0),p=Dl(c,i,!0,!0)):(h=Dl(c,o,!1,!0),p=Dl(i,c,!0,!1)),null!=s?[h,p,Dd(u,c)]:[h,p]},I={a:x,b:w,bias:v,preluActivationWeights:T},S={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=Uo(((e,t,n)=>{const r=La.runKernel(gs,I,S);return n([e,t,r]),{value:oc(r,b),gradFunc:k}}));return e(x,w)}{const e=Uo(((e,t,n,r)=>{const s=La.runKernel(gs,I,S);return r([e,t,s,n]),{value:oc(s,b),gradFunc:k}}));return e(x,w,v)}}}),Ud=Za({hammingWindow_:function(e){return $d(e,.54,.46)}}),Vd=Za({hannWindow_:function(e){return $d(e,.5,.5)}}),Wd=Za({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(pc(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=cc([pc(e,a,t-r),Jo([r],s)]);i.push(o),a+=n}return 0===i.length?ld([],[0,t]):oc(cc(i),[i.length,t])}}),Gd=Za({stft_:function(e,t,n,r,s=Vd){null==r&&(r=Ed(t));const a=Wd(e,t,n),i=Oo(a,s(t));return ed(i,r)}}),jd=Za({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Ka(e,"image","cropAndResize"),o=Ka(t,"boxes","cropAndResize","float32"),l=Ka(n,"boxInd","cropAndResize","int32"),u=o.shape[0];ie(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),ie(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),ie(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),ie(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),ie(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),ie("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return La.runKernel(Bt,c,h)}}),Hd=Za({flipLeftRight_:function(e){const t=Ka(e,"image","flipLeftRight","float32");ie(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return La.runKernel(un,n,{})}}),qd=Za({grayscaleToRGB_:function(e){const t=Ka(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];ie(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),ie(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,yh(t,s)}}),Kd=Za({rgbToGrayscale_:function(e){const t=Ka(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];ie(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),ie(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=_o(t,"float32"),i=od([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Yc("ij,j->i",a,i);break;case 3:o=Yc("ijk,k->ij",a,i);break;case 4:o=Yc("ijkl,l->ijk",a,i);break;case 5:o=Yc("ijklm,m->ijkl",a,i);break;case 6:o=Yc("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=mh(o,-1),_o(o,s)}}),Xd=Za({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Ka(e,"image","rotateWithOffset","float32");ie(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return La.runKernel(ms,a,i)}});function Yd(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),ie(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),ie(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ie(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ie(1===t.rank,(()=>"scores must be a 1D tensor")),ie(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),ie(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Zd=Za({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ka(e,"boxes","nonMaxSuppression","float32"),i=Ka(t,"scores","nonMaxSuppression","float32"),o=Yd(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return La.runKernel(er,{boxes:a,scores:i},l)}});function Jd(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Qd)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Qd(e,t){return e>t?1:e<t?-1:0}function ef(e,t,n,r,s){return rf(e,t,n,r,s,0)}function tf(e,t,n,r,s,a){return rf(e,t,n,r,s,0,!1,a,!0)}function nf(e,t,n,r,s,a){return rf(e,t,n,r,s,a,!0)}function rf(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(of);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=sf(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*af(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>s&&Jd(u,t,of))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function sf(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function af(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function of(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const lf=Za({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ka(e,"boxes","nonMaxSuppression"),o=Ka(t,"scores","nonMaxSuppression"),l=Yd(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=La.runKernel(nr,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),uf=Za({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ka(e,"boxes","nonMaxSuppression"),o=Ka(t,"scores","nonMaxSuppression"),l=Yd(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=La.runKernel(tr,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),cf=Za({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Ka(e,"images","resizeBilinear");ie(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),ie(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ie(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=oc(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=La.runKernel(vr,o,l);return i?oc(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),hf=Za({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Ka(e,"images","resizeNearestNeighbor");ie(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),ie(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ie("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ie(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=oc(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=La.runKernel(xr,o,l);return i?oc(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),pf=Za({threshold_:function(e,t="binary",n=!1,r=.5){const s=Ka(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=Oo(od([r]),255);if(ie(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),ie(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),ie("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),ie("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=Qp(s,[1,1,1],-1);const e=Oo(i,.2989),t=Oo(o,.587),n=Oo(l,.114);u=$o($o(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=od([-1]),u=od([0]),c=od([0]);for(let h=0;h<e.size-1;h++){n=pc(e,0,h+1),r=pc(e,h+1),i=Ao(ch(n),t),o=Ao(ch(r),t);const p=ch(Oo(n,Ep(0,n.size)));s=Ao(p,ch(n));const d=Jo(r.shape,n.size),f=$o(Ep(0,r.size),d),m=Oo(r,f);a=Ao(ch(m),ch(r));const g=tl(s,a),y=tl(s,a),b=Oo(i,o);c=Oo(Oo(b,g),y);const x=vh(c,u);u=qc(x,c,u),l=qc(x,od([h]),l)}return l}(wc(_o(Mp(u),"int32"),ei([]),256),a));const h=n?Eh(u,c):vh(u,c);return _o(Oo(h,255),"int32")}}),df=Za({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Ka(e,"image","transform","float32"),o=Ka(t,"transforms","transform","float32");ie(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),ie(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ie(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return La.runKernel(is,l,u)}}),ff=Za({bandPart_:function(e,t,n){const r=Ka(e,"a","bandPart");ie(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let o,l;"number"==typeof t?(ie(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ie(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=Ka(t<0?a:t,"numLower","bandPart")):(ie("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=qc(Nh(t,0),a,Zh(t,a))),"number"==typeof n?(ie(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),ie(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=Ka(n<0?i:n,"numUpper","bandPart")):(ie("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=qc(Nh(n,0),i,Zh(n,i)));const u=oc(Ep(0,a,1,"int32"),[-1,1]),c=Ep(0,i,1,"int32"),h=tl(u,c),p=Mh(Eh(h,o),Th(h,Pl(l))),d=Kh([a,i],r.dtype);return oc(rd(yd(oc(r,[-1,a,i])).map((e=>qc(p,e,d)))),s)}}),mf=Za({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ie(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ie(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Qp(e,e.shape[0],0).map((e=>nd(e,[0])));ie(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(La.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Oo(ch(Oo(n[r],e)),n[r]);e=tl(e,t)}return Ao(e,ph(e,"euclidean"))})));return t?rd(n,0):n}});function gf(e,t=!1){return La.tidy((()=>{ie(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=bh(n),a=No(e);const i=ld([[1]],[1,1]);let o=No(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=La.tidy((()=>{const t=pc(a,[e,e],[n-e,1]),l=ph(t),u=pc(a,[e,e],[1,1]),c=qc(vh(u,0),ld([[-1]]),ld([[1]])),h=tl(u,Oo(c,l)),p=Ao(t,h);o=1===p.shape[0]?No(i):cc([i,pc(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Pl(Ao(Dl(c,h),l)),f=pc(a,[e,0],[n-e,r]),m=Oo(d,o),g=Ll(o);if(0===e)a=tl(f,Dl(m,Dl(g,f)));else{const t=tl(f,Dl(m,Dl(g,f)));a=cc([pc(a,[0,0],[e,r]),t],0)}const y=Ll(m),b=pc(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=tl(b,Dl(Dl(b,o),y));else{const t=tl(b,Dl(Dl(b,o),y));s=cc([pc(s,[0,0],[n,e]),t],1)}return[o,a,s]})),pi([t,l,u])}return!t&&n>r&&(s=pc(s,[0,0],[n,r]),a=pc(a,[0,0],[r,r])),[s,a]}))}const yf=Za({qr_:function(e,t=!1){if(ie(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return gf(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=yd(oc(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=gf(e,t);s.push(n),a.push(r)})),[oc(rd(s,0),e.shape),oc(rd(a,0),e.shape)]}}});var bf;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(bf||(bf={}));const xf=Za({computeWeightedLoss_:function(e,t,n=bf.SUM_BY_NONZERO_WEIGHTS){const r=Ka(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Ka(t,"weights","computeWeightedLoss"));const a=null==s?r:Oo(r,s);if(n===bf.NONE)return a;if(n===bf.SUM)return ch(a);if(n===bf.MEAN){if(null==s)return qh(a);{const e=r.size/s.size,t=Ao(ch(a),ch(s));return e>1?Ao(t,Wo(e)):t}}if(n===bf.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ao(ch(a),Wo(r.size));{const e=Oo(s,Xh(r.shape)),t=_o(ch(rp(e,Wo(0))),"float32");return Ao(ch(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),wf=Za({absoluteDifference_:function(e,t,n,r=bf.SUM_BY_NONZERO_WEIGHTS){const s=Ka(e,"labels","absoluteDifference"),a=Ka(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Ka(n,"weights","absoluteDifference")),oe(s.shape,a.shape,"Error in absoluteDifference: ");const o=rl(tl(s,a));return xf(o,i,r)}}),vf=Za({cosineDistance_:function(e,t,n,r,s=bf.SUM_BY_NONZERO_WEIGHTS){const a=Ka(e,"labels","cosineDistance"),i=Ka(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Ka(r,"weights","cosineDistance")),oe(a.shape,i.shape,"Error in cosineDistance: ");const l=Wo(1),u=tl(l,ch(Oo(a,i),n,!0));return xf(u,o,s)}}),Tf=Za({hingeLoss_:function(e,t,n,r=bf.SUM_BY_NONZERO_WEIGHTS){let s=Ka(e,"labels","hingeLoss");const a=Ka(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Ka(n,"weights","hingeLoss")),oe(s.shape,a.shape,"Error in hingeLoss: ");const o=Wo(1);s=tl(Oo(Wo(2),s),o);const l=Cp(tl(o,Oo(s,a)));return xf(l,i,r)}}),kf=Za({huberLoss_:function(e,t,n,r=1,s=bf.SUM_BY_NONZERO_WEIGHTS){const a=Ka(e,"labels","huberLoss"),i=Ka(t,"predictions","huberLoss");let o=null;null!=n&&(o=Ka(n,"weights","huberLoss")),oe(a.shape,i.shape,"Error in huberLoss: ");const l=Wo(r),u=rl(tl(i,a)),c=Zh(u,l),h=tl(u,c),p=$o(Oo(Wo(.5),Ro(c)),Oo(l,h));return xf(p,o,s)}}),If=Za({logLoss_:function(e,t,n,r=1e-7,s=bf.SUM_BY_NONZERO_WEIGHTS){const a=Ka(e,"labels","logLoss"),i=Ka(t,"predictions","logLoss");let o=null;null!=n&&(o=Ka(n,"weights","logLoss")),oe(a.shape,i.shape,"Error in logLoss: ");const l=Wo(1),u=Wo(r),c=Pl(Oo(a,Ah($o(i,u)))),h=Oo(tl(l,a),Ah($o(tl(l,i),u))),p=tl(c,h);return xf(p,o,s)}}),Sf=Za({meanSquaredError_:function(e,t,n,r=bf.SUM_BY_NONZERO_WEIGHTS){const s=Ka(e,"labels","meanSquaredError"),a=Ka(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Ka(n,"weights","meanSquaredError")),oe(s.shape,a.shape,"Error in meanSquaredError: ");const o=td(s,a);return xf(o,i,r)}}),_f=Za({sigmoidCrossEntropy_:function(e,t,n,r=0,s=bf.SUM_BY_NONZERO_WEIGHTS){let a=Ka(e,"multiClassLabels","sigmoidCrossEntropy");const i=Ka(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ka(n,"weights","sigmoidCrossEntropy")),oe(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Wo(r),t=Wo(1),n=Wo(.5);a=$o(Oo(a,tl(t,e)),Oo(n,e))}const l=function(e,t){const n=Ka(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ka(t,"logits","sigmoidCrossEntropyWithLogits");oe(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Cp(r),a=Oo(r,n),i=Oh(fh(Pl(rl(r))));return $o(tl(s,a),i)}(a,i);return xf(l,o,s)}}),Nf=Za({softmaxCrossEntropy_:function(e,t,n,r=0,s=bf.SUM_BY_NONZERO_WEIGHTS){let a=Ka(e,"onehotLabels","softmaxCrossEntropy");const i=Ka(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ka(n,"weights","softmaxCrossEntropy")),oe(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Wo(r),t=Wo(1),n=Wo(a.shape[1]);a=$o(Oo(a,tl(t,e)),Ao(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Uo(((e,t,r)=>{const s=Ph(t,[n],!0),a=tl(_o(t,"float32"),s);r([e,a]);const i=Pl(Oo(a,e));return{value:ch(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=rh(e.shape,[n]);return[Oo(oc(e,a),tl(_o(r,"float32"),fh(s))),Oo(oc(e,a),tl(fh(s),_o(r,"float32")))]}}}));return r(e,t)}(a,i);return xf(l,o,s)}}),Ef=Za({sparseFillEmptyRows_:function(e,t,n,r){const s=Ka(e,"indices","sparseFillEmptyRows","int32"),a=Ka(t,"values","sparseFillEmptyRows"),i=Ka(n,"denseShape","sparseFillEmptyRows","int32"),o=Ka(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=La.runKernel(Wr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),$f=Za({sparseReshape_:function(e,t,n){const r=Ka(e,"inputIndices","sparseReshape","int32"),s=Ka(t,"inputShape","sparseReshape","int32"),a=Ka(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=La.runKernel(Gr,i);return{outputIndices:o[0],outputShape:o[1]}}}),Cf=Za({sparseSegmentMean_:function(e,t,n){const r=Ka(e,"data","sparseSegmentMean"),s=Ka(t,"indices","sparseSegmentMean","int32"),a=Ka(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return La.runKernel(jr,i)}}),Af=Za({sparseSegmentSum_:function(e,t,n){const r=Ka(e,"data","sparseSegmentSum"),s=Ka(t,"indices","sparseSegmentSum","int32"),a=Ka(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return La.runKernel(Hr,i)}}),Of=Za({stringNGrams_:function(e,t,n,r,s,a,i,o){const l=Ka(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Ka(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=La.runKernel(Jr,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),Df=Za({stringSplit_:function(e,t,n=!0){const r=Ka(e,"input","stringSplit","string"),s=Ka(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=La.runKernel(Qr,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),Rf=Za({stringToHashBucketFast_:function(e,t){const n=Ka(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return La.runKernel(es,s,r)}}),Ff=Za({staticRegexReplace_:function(e,t,n,r=!0){const s=Ka(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return La.runKernel(Yr,{x:s},a)}}),Pf={fft:Yp,ifft:Zp,rfft:ed,irfft:Jp},Mf={hammingWindow:Ud,hannWindow:Vd,frame:Wd,stft:Gd},Lf={flipLeftRight:Hd,grayscaleToRGB:qd,resizeNearestNeighbor:hf,resizeBilinear:cf,rgbToGrayscale:Kd,rotateWithOffset:Xd,cropAndResize:jd,nonMaxSuppression:Zd,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ka(e,"boxes","nonMaxSuppressionAsync"),i=Ka(t,"scores","nonMaxSuppressionAsync"),o=Yd(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=ef(u,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),od(h,"int32")},nonMaxSuppressionWithScore:lf,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ka(e,"boxes","nonMaxSuppressionAsync"),o=Ka(t,"scores","nonMaxSuppressionAsync"),l=Yd(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=nf(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:od(p,"int32"),selectedScores:od(d)}},nonMaxSuppressionPadded:uf,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ka(e,"boxes","nonMaxSuppressionAsync"),o=Ka(t,"scores","nonMaxSuppressionAsync"),l=Yd(i,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=tf(p,d,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:od(f,"int32"),validOutputs:Wo(m,"int32")}},threshold:pf,transform:df},zf={bandPart:ff,gramSchmidt:mf,qr:yf},Bf={absoluteDifference:wf,computeWeightedLoss:xf,cosineDistance:vf,hingeLoss:Tf,huberLoss:kf,logLoss:If,meanSquaredError:Sf,sigmoidCrossEntropy:_f,softmaxCrossEntropy:Nf},Uf={sparseFillEmptyRows:Ef,sparseReshape:$f,sparseSegmentMean:Cf,sparseSegmentSum:Af},Vf={stringNGrams:Of,stringSplit:Df,stringToHashBucketFast:Rf,staticRegexReplace:Ff},Wf=Du,Gf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function jf(){return new Promise((e=>Gf((()=>e()))))}function Hf(e,t){const n=e[0].length;e.forEach(((e,t)=>{ie(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ie(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)ie(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function qf(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Kf;function Xf(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function Yf(e){const t={FIRST_DIM_SIZE:Kf.FIRST_DIM_SIZE,VALUE_ROWIDS:Kf.VALUE_ROWIDS,ROW_LENGTHS:Kf.ROW_LENGTHS,ROW_SPLITS:Kf.ROW_SPLITS,ROW_LIMITS:Kf.ROW_LIMITS,ROW_STARTS:Kf.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Zf(e){return 0===e.length?0:e[0]===Kf.FIRST_DIM_SIZE?e.length-1:e.length}function Jf(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Kf||(Kf={}));const Qf=30;function em(e){return e<=Qf?e:Re(e,Math.floor(Math.sqrt(e)))}function tm(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function nm(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function rm(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function sm(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function am(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function im(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const om=1.7580993408473768,lm=1.0507009873554805,um=.3275911,cm=.254829592,hm=-.284496736,pm=1.421413741,dm=-1.453152027,fm=1.061405429;function mm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function gm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ym(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function bm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function xm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function wm(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function vm(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Tm(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const km="->",Im=/->/g,Sm=",",_m="...";function Nm(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Im,"").length)/km.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${km}").`);const[r,s]=e.split(km);ie(-1===r.indexOf(_m),(()=>`The ellipsis notation ("${_m}") is not supported yet.`));const a=r.split(Sm),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==Sm&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Em(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function $m(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:ie(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Cm(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=Om(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Am(e){return e.every(((e,t)=>e===t))}function Om(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Dm(e,t,n=0){let r=[];if("number"==typeof t)ie(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);ie(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}ie(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Rm(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Fm(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Pm(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Mm(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Lm(e,t){return`size ${e} must be non-negative, not ${t}`}function zm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Bm(e,t){return`Input to reshape is a SparseTensor with ${ue(e)}\n  dense values, but the requested shape requires a multiple of ${ue(t)}. inputShape=${e} outputShape= ${t}`}function Um(e,t){return`Input to reshape is a tensor with ${ue(e)} dense values, but the requested shape has ${ue(t)}. inputShape=${e} outputShape=${t}`}function Vm(){return"segment ids must be >= 0"}function Wm(){return"segment ids are not increasing"}function Gm(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function jm(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Hm(e,t){let n,r=!1;for(e<=Qf?(n=e,r=!0):n=Re(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Re(e,n+1);return n}function qm(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Km(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Xm(e){try{return e.map((e=>Js(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ym(e){return e.map((e=>Zs(e)))}!function(){for(const e of pl)Ko(e)}();const Zm={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,sd(_o(n,"float32"),-1))}}},Jm={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ro(_o(n,"float32")),r=Do(tl(Wo(1),t));return Pl(Ao(e,r))}}}},Qm={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Do(tl(Ro(_o(n,"float32")),1));return Ao(e,t)}}}},eg={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=il(n.shape,r.shape);return{a:()=>{let t=e;const r=al(n.shape,s);return r.length>0&&(t=ch(t,r)),oc(t,n.shape)},b:()=>{let t=e;const n=al(r.shape,s);return n.length>0&&(t=ch(t,n)),oc(t,r.shape)}}}},tg={kernelName:st,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},ng={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(n)}}},rg={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(n)}}},sg={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,Do(tl(Wo(1),Ro(_o(n,"float32")))))}}},ag={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Do($o(Wo(1),Ro(_o(n,"float32"))));return Ao(e,t)}}}},ig={kernelName:dt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=il(n.shape,r.shape);return{a:()=>{const t=$o(Ro(n),Ro(r));let a=Oo(e,Ao(r,t));const i=al(n.shape,s);return i.length>0&&(a=ch(a,i)),oc(a,n.shape)},b:()=>{const t=$o(Ro(n),Ro(r));let a=Pl(Oo(e,Ao(n,t)));const i=al(r.shape,s);return i.length>0&&(a=ch(a,i)),oc(a,r.shape)}}}},og={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,$o(Ro(_o(n,"float32")),1))}}},lg={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,tl(Wo(1),Ro(_o(n,"float32"))))}}},ug=Za({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Ka(e,"dy","avgPool3dGrad"),o=Ka(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=oc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=oc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ie(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),ie(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),ic("avgPool3dGrad",s,a);const h={dy:l,input:u},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},d=La.runKernel(yt,h,p);return c?oc(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),cg={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>ug(e,r,s,a,i,o)}}},hg=Za({avgPoolGrad_:function(e,t,n,r,s){const a=Ka(e,"dy","avgPoolGrad"),i=Ka(t,"input","avgPoolGrad");ie(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=oc(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=oc(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),ie(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},p=La.runKernel(mt,c,h);return u?oc(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),pg={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>hg(e,r,s,a,i)}}},dg={kernelName:bt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Dl(e,s,!1,!1),b:()=>Dl(e,r,!0,!1)}:a&&!i?{a:()=>Dl(s,e,!1,!0),b:()=>Dl(r,e,!1,!1)}:{a:()=>Dl(s,e,!0,!0),b:()=>Dl(e,r,!0,!0)}:{a:()=>Dl(e,s,!1,!0),b:()=>Dl(r,e,!0,!1)}}},fg={kernelName:xt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>hp(e,r,s)}}},mg={kernelName:Tt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>ch(e,o,!0)}}},gg={kernelName:It,gradFunc:e=>({x:()=>e.clone()})},yg={kernelName:St,gradFunc:e=>({x:()=>Fo(e)})},bg={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>qc(Mh(Th(r,s),Eh(r,a)),e,Fo(e))}}},xg={kernelName:Et,inputsToSave:["x"],gradFunc:Zm.gradFunc},wg={kernelName:$t,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=we(s,t[0].shape)[0],i=r.map((e=>e[a]));return Qp(e,i,a).map((e=>()=>e))}},vg={kernelName:Ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return ie(nc(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Oc(r.shape,e,s,i,o,l),filter:()=>Ad(r,e,s.shape,i,o,l)}}},Tg={kernelName:Ot,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Cc(e,s,a,i,o,1,l),filter:()=>Ad(e,r,s.shape,a,i,o,l)}}},kg=Za({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=oc(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=oc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ie(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),ie(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),ie(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ie(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),ie(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return La.runKernel(Rt,o,l)}}),Ig={kernelName:Dt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;ie(nc(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Fc(i.shape,e,o,s,a),filter:()=>kg(i,e,o.shape,s,a)}}},Sg={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(Pl(Wp(_o(n,"float32"))),e)}}},_g={kernelName:Mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(Gp(_o(n,"float32")),e)}}},Ng={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=ah([s],r.rank);let n=Bc(e,s,a,!i);return null!=t&&(n=Ll(n,t)),n}}}},Eg={kernelName:Wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ie(nc(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return ie(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),ie(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),ie(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ie(rc(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),ic("depthwiseConv2d",a,i),{x:()=>Ld(l.shape,e,u,s,a,o,i),filter:()=>Md(l,e,u.shape,s,a,o,i)}}},$g={kernelName:qt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>La.runKernel(Kt,a,n),filter:()=>La.runKernel(Xt,i,n)}}},Cg={kernelName:Qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>La.runKernel(en,r)}}},Ag={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Oo(fh(Pl(Ro(n))),2/Math.sqrt(Math.PI));return{x:()=>Oo(e,r)}}},Og={kernelName:rn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,n)}}},Dg={kernelName:sn,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>oc(e,n.shape)}}},Rg={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,fh(n))}}},Fg={kernelName:cn,gradFunc:e=>({x:()=>Fo(e)})},Pg={kernelName:hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=il(n.shape,r.shape);return{a:()=>{const t=Ao(e,_o(r,"float32")),a=al(n.shape,s);return a.length>0?oc(ch(t,a),n.shape):t},b:()=>{let t=Oo(e,_o(n,"float32"));const a=al(r.shape,s);a.length>0&&(t=oc(ch(t,a),r.shape));const i=Ro(r);return Pl(Ao(t,_o(i,"float32")))}}}},Mg={kernelName:pn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?Wo(1):o,u=al(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=tl(s,a),p=Oo(e,l),d=Lp($o(i,Wo(r))),f=Oo(Oo(Oo(d,d),d),Wo(-.5));return{x:()=>1===a.rank?oc(Oo(Oo(e,yh(oc(d,[1,1,1,a.shape[0]]),c)),l),s.shape):oc(Oo(Oo(e,d),l),s.shape),mean:()=>{let e=Oo(Oo(d,Wo(-1)),p);return 1===a.rank&&(e=ch(e,u)),oc(e,a.shape)},variance:()=>{let e=Oo(Oo(f,h),p);return 1===a.rank&&(e=ch(e,u)),oc(e,a.shape)},scale:()=>{const t=Oo(h,d);let n=Oo(e,t);return 1===a.rank&&(n=ch(n,u)),oc(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=ch(t,u)),oc(t,a.shape)}}}},Lg={kernelName:dn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=we(a,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),l=i.length,u=r.slice(a,r.length).slice(1),c=u.length,h=zg(0,l),p=zg(l+1,l+1+c),d=Bg([i,[s],u]),f=oc(n,d),m=oc(t,[s]),g=Bg([[l],h,p]),y=Ll(f,g);let b=gd(y,m,e.shape[o]);const x=ih(g);return b=Ll(b,x),b};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=rd(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function zg(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Bg(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Ug={kernelName:gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Fo(n),b:()=>Fo(r)}}},Vg={kernelName:yn,gradFunc:e=>({x:()=>_o(e,"float32")})},Wg={kernelName:wn,gradFunc:e=>({x:()=>Fo(e)})},Gg={kernelName:vn,gradFunc:e=>({x:()=>Fo(e)})},jg={kernelName:Tn,gradFunc:e=>({x:()=>Fo(e)})},Hg={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=vh(r,0);return{x:()=>qc(a,e,Oo(e,s))}}},qg={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,$o(n,1))}}},Kg={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,_o(n,"float32"))}}},Xg={kernelName:Dn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=fh(r);return tl(e,Oo(ch(e,s,!0),t))}}}},Yg=Za({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return La.runKernel(Pn,o,l)}}),Zg={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Yg(r,s,e,a,i,o,l)}}};function Jg(e,t,n,r){return t.rank<n.rank&&(t=oc(t,rh(t.shape,r))),e.rank<n.rank&&(e=oc(e,rh(e.shape,r))),{x:()=>Oo(e,_o(Hc(n,t),e.dtype))}}const Qg={kernelName:Ln,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Jg(e,t[1],a,we(s,a.shape));return{x:()=>i.x()}}},ey={kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Oo(e,_o(Th(n,r),"float32")),b:()=>Oo(e,_o(Nh(n,r),"float32"))}}},ty=Za({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Ka(e,"dy","maxPool3dGrad"),l=Ka(t,"input","maxPool3dGrad"),u=Ka(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=oc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=oc(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=oc(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),ie(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),ie(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),ie(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),ic("maxPool3dGrad",a,i);const f={dy:c,input:h,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=La.runKernel(Wn,f,m);return d?oc(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),ny={kernelName:Vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>ty(e,r,s,a,i,o,l)}}},ry=Za({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Ka(e,"dy","maxPoolGrad"),l=Ka(t,"input","maxPoolGrad"),u=Ka(n,"output","maxPoolGrad");ie(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),ie(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ie(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),ic("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return La.runKernel(Un,c,h)}}),sy={kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>ry(e,r,s,a,i,o)}}},ay={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>pc(e,a,r.shape)}}},iy={kernelName:ir,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>pc(e,a,r.shape)}}},oy={kernelName:lr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=il(a.shape,i.shape);return{a:()=>{const t=_o(i,"float32");let n=Oo(e,Oo(t,el(a,tl(t,Wo(1)))));const r=al(a.shape,o);return r.length>0&&(n=ch(n,r)),oc(n,a.shape)},b:()=>{const t=vh(a,0),n=qc(t,Ah(a),Fo(a));let r=Oo(e,Oo(s,n));const l=al(i.shape,o);return l.length>0&&(r=ch(r,l)),oc(r,i.shape)}}}};const ly={kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=vh(n,Wo(0)),r=Wo(om),s=Wo(lm),a=Oo(e,s),i=Oo(Oo(e,r),fh(_o(n,"float32")));return qc(t,a,i)}}}},uy={kernelName:Br,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>mc(e,r,s)}}},cy={kernelName:Ur,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>cc(e,r)}}},hy=[Zm,Jm,Qm,eg,tg,ng,rg,sg,ag,ig,og,lg,cg,pg,dg,fg,mg,gg,yg,bg,xg,wg,Tg,vg,Ig,Sg,_g,Ng,Eg,$g,{kernelName:Zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=il(n.shape,r.shape);return{a:()=>{const t=Ao(e,_o(r,"float32")),a=al(n.shape,s);return a.length>0?oc(ch(t,a),n.shape):t},b:()=>{let t=Oo(e,_o(n,"float32"));const a=al(r.shape,s);a.length>0&&(t=oc(ch(t,a),r.shape));const i=Ro(r);return Pl(Ao(t,_o(i,"float32")))}}}},Cg,Ag,Og,Dg,Rg,Pg,Fg,Mg,Lg,Ug,Vg,Wg,Gg,jg,Hg,qg,Kg,Xg,Zg,Qg,Qg,ey,ny,sy,{kernelName:jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=we(s,r.shape),i=ue(nh(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=oc(e,t);return Ao(Oo(n,Xh(r.shape,"float32")),i)}}}},{kernelName:Hn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Jg(e,i,a,we(s,a.shape));return{x:()=>o.x()}}},{kernelName:qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Oo(e,_o(Eh(n,r),"float32")),b:()=>Oo(e,_o(vh(n,r),"float32"))}}},ay,{kernelName:Xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=il(n.shape,r.shape);return{a:()=>{const t=al(n.shape,s);return t.length>0?oc(ch(e,t),n.shape):e},b:()=>{const t=Oo(e,Pl(xh(Ao(n,r)))),a=al(r.shape,s);return a.length>0?oc(ch(t,a),r.shape):t}}}},{kernelName:Zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=il(n.shape,r.shape);return{a:()=>{const t=Oo(e,_o(r,"float32")),a=al(n.shape,s);return a.length>0?oc(ch(t,a),n.shape):t},b:()=>{const t=Oo(e,_o(n,"float32")),a=al(r.shape,s);return a.length>0?oc(ch(t,a),r.shape):t}}}},{kernelName:Jn,gradFunc:e=>({x:()=>Pl(e)})},{kernelName:sr,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Kh(n.shape,"float32")}}},{kernelName:rr,gradFunc:e=>({x:()=>Fo(e)})},{kernelName:ar,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return yd(e,r).map((e=>()=>e))}},iy,iy,oy,{kernelName:ur,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=vh(n,0);return{x:()=>qc(s,e,Oo(e,r)),alpha:()=>{let t=qc(s,Fo(e),Oo(e,n));const a=al(r.shape,e.shape);return a.length>0&&(t=ch(t,a)),oc(t,r.shape)}}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,a=ah(n,r);let i=e;null!=a&&(i=Ll(e,a));const o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=oc(t,r),a=zc(e,n,!0,!1),i=zc(e,n,!0,!0),o=Oo(a,i);return Oo(s,o)}(i.reshape(o),t,s);if(u=u.reshape(i.shape),null!=a){const e=ih(a);u=Ll(u,e)}return u}(r,e,a)}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,Pl(Ro(n)))}}},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Oo(Eh(n,6),sd(n));return{x:()=>Oo(e,_o(r,"float32"))}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,_o(sd(n),"float32"))}}},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oc(e,n.shape)}}},{kernelName:vr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>La.runKernel(Tr,s,n)}}},{kernelName:xr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>La.runKernel(wr,s,n)}}},{kernelName:Ir,gradFunc:(e,t,n)=>{const{dims:r}=n,s=we(r,e.shape);return{x:()=>Op(e,s)}}},{kernelName:Sr,gradFunc:e=>({x:()=>Fo(e)})},{kernelName:_r,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pl(Ao(e,Oo(el(n,1.5),2)))}}},{kernelName:Cr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>_o(Fo(n),"float32"),t:()=>Oo(e,_o(n,e.dtype)),e:()=>Oo(e,_o(Lh(n),e.dtype))}}},ly,{kernelName:Pr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Oo(n,tl(Wo(1),n)))}}},{kernelName:Fr,gradFunc:e=>({x:()=>Fo(e)})},{kernelName:Dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(Mc(_o(n,"float32")),e)}}},{kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(Lc(_o(n,"float32")),e)}}},{kernelName:Or,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=mu(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>ip(e,u)}}},{kernelName:Vr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Oo(e,r);return{logits:()=>tl(a,Oo(ch(a,[s],!0),r))}}},{kernelName:Mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,hc(n))}}},uy,uy,cy,cy,{kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,Oo(Do(_o(n,"float32")),2))}}},{kernelName:Kr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Wo(2);return{a:()=>Oo(e,Oo(s,tl(n,r))),b:()=>Oo(e,Oo(s,tl(r,n)))}}},{kernelName:Xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Oo(_o(n,"float32"),2))}}},{kernelName:ds,gradFunc:e=>({x:()=>Fo(e)})},{kernelName:ts,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=il(n.shape,r.shape);return{a:()=>{let t=e;const r=al(n.shape,s);return r.length>0&&(t=ch(t,r)),oc(t,n.shape)},b:()=>{let t=e;const n=al(r.shape,s);return n.length>0&&(t=ch(t,n)),oc(Pl(t),r.shape)}}}},{kernelName:zr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;we(a,r.shape).forEach((e=>{s[e]=1}));const i=oc(e,s),o=Oo(i,Xh(r.shape,"float32"));return{x:()=>o}}},{kernelName:ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ao(e,Ro(Mc(n)))}}},{kernelName:rs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(tl(Wo(1),Ro(n)),e)}}},{kernelName:ss,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Fo(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=$o(t,pc(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=$o(t,pc(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=$o(t,pc(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=$o(t,pc(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:os,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=ih(s);return{x:()=>Ll(e,a)}}},{kernelName:us,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>rd(e,s)}}},{kernelName:cs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=ol(t,Fo(t)),r=wh(e,n);let s=Th(t,Wo(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=mh(s,e+1);s=Mh(s,Xh(r.shape,"bool"));const i=Fo(r);return qc(s,r,i)}(e,n)}}},{kernelName:ps,gradFunc:e=>({x:()=>Fo(e)})}];for(const e of hy)Ns(e);ya().prototype.abs=function(){return this.throwIfDisposed(),rl(this)},ya().prototype.acos=function(){return this.throwIfDisposed(),Ru(this)},ya().prototype.acosh=function(){return this.throwIfDisposed(),Fu(this)},ya().prototype.add=function(e){return this.throwIfDisposed(),$o(this,e)},ya().prototype.all=function(e,t){return this.throwIfDisposed(),Mu(this,e,t)},ya().prototype.any=function(e,t){return this.throwIfDisposed(),Lu(this,e,t)},ya().prototype.argMax=function(e){return this.throwIfDisposed(),zu(this,e)},ya().prototype.argMin=function(e){return this.throwIfDisposed(),Bu(this,e)},ya().prototype.asScalar=function(){return this.throwIfDisposed(),ie(1===this.size,(()=>"The array must have only 1 element.")),oc(this,[])},ya().prototype.asType=function(e){return this.throwIfDisposed(),_o(this,e)},ya().prototype.as1D=function(){return this.throwIfDisposed(),oc(this,[this.size])},ya().prototype.as2D=function(e,t){return this.throwIfDisposed(),oc(this,[e,t])},ya().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),oc(this,[e,t,n])},ya().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),oc(this,[e,t,n,r])},ya().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),oc(this,[e,t,n,r,s])},ya().prototype.asin=function(){return this.throwIfDisposed(),Uu(this)},ya().prototype.asinh=function(){return this.throwIfDisposed(),Vu(this)},ya().prototype.atan=function(){return this.throwIfDisposed(),Wu(this)},ya().prototype.atan2=function(e){return this.throwIfDisposed(),Gu(this,e)},ya().prototype.atanh=function(){return this.throwIfDisposed(),ju(this)},ya().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),lc(this,e,t,n,r)},ya().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),mc(this,e,t)},ya().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),gc(this,e,t,n,r,s)},ya().prototype.broadcastTo=function(e){return this.throwIfDisposed(),kc(this,e)},ya().prototype.cast=function(e){return this.throwIfDisposed(),_o(this,e)},ya().prototype.ceil=function(){return this.throwIfDisposed(),Ic(this)},ya().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Sc(this,e,t)},ya().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ga&&(e=[e]),cc([this,...e],t)},ya().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ac(this,e,t,n,r,s,a)},ya().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Dc(this,e,t,n,r,s)},ya().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Cc(this,e,t,n,r,s,a)},ya().prototype.cos=function(){return this.throwIfDisposed(),Mc(this)},ya().prototype.cosh=function(){return this.throwIfDisposed(),Lc(this)},ya().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),zc(this,e,t,n)},ya().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Bc(this,e,t,n)},ya().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Vc(this,e,t)},ya().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Wc(this,e,t,n,r,s,a)},ya().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),jc(this,e,t,n,r,s)},ya().prototype.divNoNan=function(e){return this.throwIfDisposed(),Kc(this,e)},ya().prototype.div=function(e){return this.throwIfDisposed(),Ao(this,e)},ya().prototype.dot=function(e){return this.throwIfDisposed(),Xc(this,e)},ya().prototype.elu=function(){return this.throwIfDisposed(),Zc(this)},ya().prototype.equal=function(e){return this.throwIfDisposed(),Hc(this,e)},ya().prototype.erf=function(){return this.throwIfDisposed(),Qc(this)},ya().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),dh(this,e,t)},ya().prototype.exp=function(){return this.throwIfDisposed(),fh(this)},ya().prototype.expandDims=function(e){return this.throwIfDisposed(),mh(this,e)},ya().prototype.expm1=function(){return this.throwIfDisposed(),gh(this)},ya().prototype.fft=function(){return this.throwIfDisposed(),Yp(this)},ya().prototype.flatten=function(){return this.throwIfDisposed(),oc(this,[this.size])},ya().prototype.floor=function(){return this.throwIfDisposed(),xh(this)},ya().prototype.floorDiv=function(e){return this.throwIfDisposed(),Co(this,e)},ya().prototype.gather=function(e,t,n){return this.throwIfDisposed(),wh(this,e,t,n)},ya().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Th(this,e)},ya().prototype.greater=function(e){return this.throwIfDisposed(),vh(this,e)},ya().prototype.ifft=function(){return this.throwIfDisposed(),Zp(this)},ya().prototype.irfft=function(){return this.throwIfDisposed(),Jp(this)},ya().prototype.isFinite=function(){return this.throwIfDisposed(),kh(this)},ya().prototype.isInf=function(){return this.throwIfDisposed(),Ih(this)},ya().prototype.isNaN=function(){return this.throwIfDisposed(),Sh(this)},ya().prototype.leakyRelu=function(e){return this.throwIfDisposed(),_h(this,e)},ya().prototype.lessEqual=function(e){return this.throwIfDisposed(),Eh(this,e)},ya().prototype.less=function(e){return this.throwIfDisposed(),Nh(this,e)},ya().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Ch(this,e,t,n,r)},ya().prototype.logSigmoid=function(){return this.throwIfDisposed(),Rh(this)},ya().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Fh(this,e)},ya().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ph(this,e,t)},ya().prototype.log=function(){return this.throwIfDisposed(),Ah(this)},ya().prototype.log1p=function(){return this.throwIfDisposed(),Oh(this)},ya().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Mh(this,e)},ya().prototype.logicalNot=function(){return this.throwIfDisposed(),Lh(this)},ya().prototype.logicalOr=function(e){return this.throwIfDisposed(),zh(this,e)},ya().prototype.logicalXor=function(e){return this.throwIfDisposed(),Bh(this,e)},ya().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Dl(this,e,t,n)},ya().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Gh(this,e,t,n,r)},ya().prototype.max=function(e,t){return this.throwIfDisposed(),lh(this,e,t)},ya().prototype.maximum=function(e){return this.throwIfDisposed(),ol(this,e)},ya().prototype.mean=function(e,t){return this.throwIfDisposed(),qh(this,e,t)},ya().prototype.min=function(e,t){return this.throwIfDisposed(),uh(this,e,t)},ya().prototype.minimum=function(e){return this.throwIfDisposed(),Zh(this,e)},ya().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Jh(this,e,t)},ya().prototype.mod=function(e){return this.throwIfDisposed(),Qh(this,e)},ya().prototype.mul=function(e){return this.throwIfDisposed(),Oo(this,e)},ya().prototype.neg=function(){return this.throwIfDisposed(),Pl(this)},ya().prototype.norm=function(e,t,n){return this.throwIfDisposed(),ph(this,e,t,n)},ya().prototype.notEqual=function(e){return this.throwIfDisposed(),rp(this,e)},ya().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Rl(this,e,t,n)},ya().prototype.onesLike=function(){return this.throwIfDisposed(),sp(this)},ya().prototype.pad=function(e,t){return this.throwIfDisposed(),ip(this,e,t)},ya().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),pp(this,e,t,n,r,s,a)},ya().prototype.pow=function(e){return this.throwIfDisposed(),el(this,e)},ya().prototype.prelu=function(e){return this.throwIfDisposed(),dp(this,e)},ya().prototype.prod=function(e,t){return this.throwIfDisposed(),fp(this,e,t)},ya().prototype.reciprocal=function(){return this.throwIfDisposed(),$p(this)},ya().prototype.relu=function(){return this.throwIfDisposed(),Cp(this)},ya().prototype.relu6=function(){return this.throwIfDisposed(),Ap(this)},ya().prototype.reshapeAs=function(e){return this.throwIfDisposed(),oc(this,e.shape)},ya().prototype.reshape=function(e){return this.throwIfDisposed(),oc(this,e)},ya().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),cf(this,e,t,n)},ya().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),hf(this,e,t,n)},ya().prototype.reverse=function(e){return this.throwIfDisposed(),Op(this,e)},ya().prototype.rfft=function(){return this.throwIfDisposed(),ed(this)},ya().prototype.round=function(){return this.throwIfDisposed(),Mp(this)},ya().prototype.rsqrt=function(){return this.throwIfDisposed(),Lp(this)},ya().prototype.selu=function(){return this.throwIfDisposed(),zp(this)},ya().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Bp(this,e,t,n,r,s,a)},ya().prototype.sigmoid=function(){return this.throwIfDisposed(),hc(this)},ya().prototype.sign=function(){return this.throwIfDisposed(),Vp(this)},ya().prototype.sin=function(){return this.throwIfDisposed(),Wp(this)},ya().prototype.sinh=function(){return this.throwIfDisposed(),Gp(this)},ya().prototype.slice=function(e,t){return this.throwIfDisposed(),pc(this,e,t)},ya().prototype.softmax=function(e){return this.throwIfDisposed(),Xp(this,e)},ya().prototype.softplus=function(){return this.throwIfDisposed(),Dh(this)},ya().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),hp(this,e,t)},ya().prototype.split=function(e,t){return this.throwIfDisposed(),Qp(this,e,t)},ya().prototype.sqrt=function(){return this.throwIfDisposed(),Do(this)},ya().prototype.square=function(){return this.throwIfDisposed(),Ro(this)},ya().prototype.squaredDifference=function(e){return this.throwIfDisposed(),td(this,e)},ya().prototype.squeeze=function(e){return this.throwIfDisposed(),nd(this,e)},ya().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ga?[this,e]:[this,...e];return rd(n,t)},ya().prototype.step=function(e){return this.throwIfDisposed(),sd(this,e)},ya().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),ad(this,e,t,n,r,s,a,i,o)},ya().prototype.sub=function(e){return this.throwIfDisposed(),tl(this,e)},ya().prototype.sum=function(e,t){return this.throwIfDisposed(),ch(this,e,t)},ya().prototype.tan=function(){return this.throwIfDisposed(),id(this)},ya().prototype.tanh=function(){return this.throwIfDisposed(),dc(this)},ya().prototype.tile=function(e){return this.throwIfDisposed(),yh(this,e)},ya().prototype.toBool=function(){return this.throwIfDisposed(),_o(this,"bool")},ya().prototype.toFloat=function(){return this.throwIfDisposed(),_o(this,"float32")},ya().prototype.toInt=function(){return this.throwIfDisposed(),_o(this,"int32")},ya().prototype.topk=function(e,t){return this.throwIfDisposed(),dd(this,e,t)},ya().prototype.transpose=function(e){return this.throwIfDisposed(),Ll(this,e)},ya().prototype.unique=function(e){return this.throwIfDisposed(),md(this,e)},ya().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),gd(this,e,t)},ya().prototype.unstack=function(e){return this.throwIfDisposed(),yd(this,e)},ya().prototype.where=function(e,t){return this.throwIfDisposed(),qc(e,this,t)},ya().prototype.zerosLike=function(){return this.throwIfDisposed(),Fo(this)};class py extends Error{constructor(e){super(e),Object.setPrototypeOf(this,py.prototype)}}class dy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dy.prototype)}}class fy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fy.prototype)}}class my extends Error{constructor(e){super(e),Object.setPrototypeOf(this,my.prototype)}}class gy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gy.prototype)}}Error;class yy{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function by(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function xy(e,t){if(!e)throw new gy(t)}function wy(e,t){let n=0;for(const r of e)r===t&&n++;return n}function vy(e){return 1===e.length?e[0]:e}function Ty(e){return Array.isArray(e)?e:[e]}function ky(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Iy(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Sy={};function _y(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Ny(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Ny(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Ny(t):e[n]=t.value)}}}function Ey(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Sy)a=Sy[s];else if(a=t[s],null==a)throw new fy(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new fy(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Sy?[o,l]=Sy.className:i in t&&([o,l]=t[i]),null==o)throw new fy(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Sy))e[t]=Sy[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Sy);for(const e of Object.keys(n))Sy[e]=n[e];Ny(a.config);const r=l(o,a.config,n,s);return Sy=Object.assign({},t),r}{const e=Object.assign({},Sy);for(const e of Object.keys(n))Sy[e]=n[e];const t=new o(a.config);return Sy=Object.assign({},e),t}}}function $y(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Cy(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Ay(e){if(null==e)throw new fy(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Oy(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new fy(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Dy(e,t,n=0,r=1/0){return xy(n>=0),xy(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Ry(e,t){Array.isArray(e)?(ie(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Ry(e,`element ${n+1} of ${t}`)))):ie(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Fy(e)}.`))}function Fy(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Fy(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Py(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let My=0;function Ly(){return My++}const zy={};function By(e=""){return e in zy||(zy[e]=0),zy[e]+=1,e+zy[e].toString()}const Uy=["channelsFirst","channelsLast"],Vy=["nearest","bilinear"],Wy=["valid","same","causal"],Gy=["max","avg"],jy=["sum","mul","concat","ave"],Hy=new Map;function qy(e){Oy(Uy,"DataFormat",e)}function Ky(e){Oy(Wy,"PaddingMode",e)}function Xy(e){Oy(Gy,"PoolMode",e)}const Yy=[];function Zy(e,t){Yy.push(e);try{const e=t();return Yy.pop(),e}catch(e){throw Yy.pop(),e}}function Jy(e){if(!tb(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Yy.length?"":Yy.join("/")+"/")+e}function Qy(e){if(!tb(e))throw new Error("Not a valid tensor name: '"+e+"'");Hy.has(e)||Hy.set(e,0);const t=Hy.get(e);if(Hy.set(e,Hy.get(e)+1),t>0){const n=`${e}_${t}`;return Hy.set(n,1),n}return e}const eb=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tb(e){return!!e.match(eb)}function nb(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function rb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function sb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function ab(e,t){if(t<e)throw new fy(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let ib;function ob(){return null==ib&&(ib=Ti().epsilon()),ib}function lb(e,t){return _o(e,t)}function ub(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),oc(e,n)}function cb(e,t,n){return hi((()=>{switch(e.rank){case 1:return jp(e,t,n);case 2:return Hp(e,[t,0],[n,e.shape[1]]);case 3:return qp(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Kp(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return pc(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return pc(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new fy(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function hb(e,t,n){return hi((()=>{switch(e.rank){case 1:return jp(e,t,n);case 2:return Hp(e,[0,t],[e.shape[0],n]);case 3:return qp(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Kp(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new fy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function pb(e,t,n,r){return hi((()=>{switch(e.rank){case 1:return jp(e,t,n);case 2:switch(r){case 1:return cb(e,t,n);case 2:return hb(e,t,n);default:throw new fy(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return cb(e,t,n);case 2:return qp(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return hb(e,t,n);default:throw new fy(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return cb(e,t,n);case 2:return Kp(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Kp(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return hb(e,t,n);default:throw new fy(`The axis is not within the rank of the tensor ${r}`)}default:throw new fy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function db(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),cc(e,t)}function fb(e,t){switch(e.rank){case 1:return _c([e,t]);case 2:return Nc([e,t],0);case 3:return Ec([e,t],0);case 4:return $c([e,t],0);default:throw new fy(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function mb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new fy(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return yh(e,t)}function gb(e,t=0,n=1,r,s){return Ip(e,t,n,r,s)}function yb(e,t,n,r){if(e.rank<2||t.rank<2)throw new my(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new my(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Bd({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?wb(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=oc(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=oc(Ll(t,c),[l,-1]);const h=[...s,...u];return oc(Bd({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?wb(e.rank,r,"channelsLast"):null,activation:n}),h)}}function bb(e,t,n){return hi((()=>(t=Array.isArray(t)?od(t,"int32"):_o(t,"int32"),wh(e,t,n))))}function xb(e){return Oo(e,e)}function wb(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new fy(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?oc(t,[1,r[0],1,1,1]):oc(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?oc(t,[1,1,1,1,r[0]]):oc(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?oc(t,[1,r[0],1,1]):oc(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?oc(t,[1,1,1,r[0]]):oc(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?oc(t,[1,r[0],1]):oc(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?oc(t,[1,1,r[0]]):oc(t,[1].concat(r))}else if(e<3)return t;throw new fy(`Unsupported input rank by biasAdd: ${t.rank}`)}function vb(e,t,n){return hi((()=>(null==n&&(n="channelsLast"),qy(n),$o(e,wb(e.rank,t,n)))))}function Tb(e,t,n,r){return hi((()=>Nd(e,t,n,r)))}function kb(e,t,n=!1){return n?e():t()}const Ib=["fanIn","fanOut","fanAvg"],Sb=["normal","uniform","truncatedNormal"];class _b extends Ho{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Nb extends _b{apply(e,t){return Kh(e,t)}}Nb.className="Zeros",Ko(Nb);class Eb extends _b{apply(e,t){return Xh(e,t)}}Eb.className="Ones",Ko(Eb);class $b extends _b{constructor(e){if(super(),"object"!=typeof e)throw new fy(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new fy(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return hi((()=>Oo(Wo(this.value),Xh(e,t))))}getConfig(){return{value:this.value}}}$b.className="Constant",Ko($b);class Cb extends _b{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return _p(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Cb.className="RandomUniform",Ko(Cb);class Ab extends _b{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new my(`randomNormal does not support dType ${t}.`);return gb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ab.className="RandomNormal",Ko(Ab);class Ob extends _b{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new my(`truncatedNormal does not support dType ${t}.`);return fd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ob.className="TruncatedNormal",Ko(Ob);class Db extends _b{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return hi((()=>{if(2!==e.length||e[0]!==e[1])throw new fy("Identity matrix initializer can only be used for 2D square matrices.");return Oo(this.gain,bh(e[0]))}))}getConfig(){return{gain:this.gain}}}Db.className="Identity",Ko(Db);class Rb extends _b{constructor(e){if(super(),e.scale<0)throw new fy(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Oy(Ib,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Oy(Sb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(qy(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=nb(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=nb(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=nb(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new my(`${this.getClassName()} does not support dType ${t}.`);return fd(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return _p(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Rb.className="VarianceScaling",Ko(Rb);class Fb extends Rb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Rb.className}}Fb.className="GlorotUniform",Ko(Fb);class Pb extends Rb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Rb.className}}Pb.className="GlorotNormal",Ko(Pb);class Mb extends Rb{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Rb.className}}Mb.className="HeNormal",Ko(Mb);class Lb extends Rb{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Rb.className}}Lb.className="HeUniform",Ko(Lb);class zb extends Rb{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Rb.className}}zb.className="LeCunNormal",Ko(zb);class Bb extends Rb{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Rb.className}}Bb.className="LeCunUniform",Ko(Bb);class Ub extends _b{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return hi((()=>{if(e.length<2)throw new my("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=ue(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=gb([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=zf.qr(a,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=Oo(o,l.sign()),n<r&&(o=o.transpose()),Oo(Wo(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ub.className="Orthogonal",Ko(Ub);const Vb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Wb(e,t={}){return Ey(e,qo.getMap().classNameMap,t,"initializer")}function Gb(e){return _y(e)}function jb(e){if("string"==typeof e){const t=e in Vb?Vb[e]:e;if("GlorotNormal"===t)return new Pb;if("GlorotUniform"===t)return new Fb;if("HeNormal"===t)return new Mb;if("HeUniform"===t)return new Lb;if("LeCunNormal"===t)return new zb;if("LeCunUniform"===t)return new Bb;{const e={};return e.className=t,e.config={},Wb(e)}}return e instanceof _b?e:Wb(e)}function Hb(e){return Array.isArray(e)&&Array.isArray(e[0])}function qb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Kb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new fy(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Xb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new fy(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Yb(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Zb="Variable";class Jb{constructor(e,t="float32",n=Zb,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ly(),n=null==n?Zb:n,this.originalName=Jy(n),this.name=Qy(this.originalName),this.trainable_=r,this.constraint=s,this.val=xd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Qb(e){return e.map((e=>e.read()))}function ex(e){e.forEach((e=>{e[0].write(e[1])}))}class tx{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class nx{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Ly(),null!=a&&(this.originalName=Jy(a),this.name=Qy(this.originalName)),this.rank=t.length}}let rx=0;class sx{constructor(e,t){this.callArgs=t,this.id=rx++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ax=0;class ix extends Ho{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ax++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ky(e)+"_"+By(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new dy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new fy(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return vy(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return vy(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new py(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new py(`Layer ${this.name} is not connected, no input to return.`);return vy(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new py(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new py(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return vy(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Ty(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Ty(this.inputSpec);if(t.length!==n.length)throw new fy(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new fy(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new fy(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new fy(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new fy(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),a=s.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new fy(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=r.shape[t];if(null!=n&&null!=a&&n!==a)throw new fy(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Ty(e),r=function(e){let t=!0;for(const n of Ty(e))if(!(n instanceof nx)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of Ty(e))if(n instanceof nx){t=!1;break}return t}(e);if(r===s)throw new fy("Arguments to apply() must be all SymbolicTensors or all Tensors");return Zy(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Ty(e))t.push(n.shape);this.build(vy(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=Ty(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=vy(a),null!=this.activityRegularizer)throw new my("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Ty(e);const t=[];for(const n of e)t.push(n.shape);return vy(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new nx(a,n,this,Ty(e),t,this.name,r))):new nx(a,r,this,Ty(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new my("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new py(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new py(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new dy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Yb(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Qb(e?this.trainableWeights:this.weights)}setWeights(e){hi((()=>{const t=this.weights;if(t.length!==e.length)throw new fy(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Qb(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!pe(a.shape,o.shape))throw new fy(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ex(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new fy(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():jb("zeros"));const l=r.apply(t,n),u=new Jb(l,n,e,a,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Ty(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=Ty(t),a=Ty(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=a[e]}addInboundNode(e,t,n,r,s,a,i=null){const o=Ty(e);t=Ty(t),n=Ty(n),r=Ty(r),s=qb(s),a=qb(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new sx({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ox(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=ox(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class lx extends ix{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:By("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new fy("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new fy("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new fy("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new nx(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new sx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new fy(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function ux(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new fy("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new lx({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}lx.className="InputLayer",Ko(lx);class cx{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof cx)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new fy(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return _o(t,e.dtype)}catch(n){throw new fy(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof nx){if(null==this.id2Value[e.id])throw new fy(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new fy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof nx){if(null==this.id2Value[e.id])throw new fy(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new fy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&pi(this.id2Mask)}}const hx=new yy,px=new yy;function dx(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,p=hx.get(c);if(null==p){const e=function(e,t){ie(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=mx(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=mx(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:fx(r)}}(i,t);p=e.sorted,h=e.recipientCounts,hx.put(c,p),px.put(c,h)}h={},s||Object.assign(h,px.get(c));const d=new cx(t);for(let e=0;e<p.length;++e){if(null!=r){const e=ui().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=p[e],i=a.sourceLayer;if(i instanceof lx)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),r=d.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Ty(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=gx(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}s||pi(f)}return d.disposeMasks(),a?l:l[0]}function fx(e){const t={};for(const n in e)t[n]=e[n].size;return t}function mx(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function gx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function yx(e,t){return hi((()=>Do(ch(Oo(e,e),t,!0))))}Xe().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=hx&&hx.setMaxEntries(e),null!=px&&px.setMaxEntries(e)}));class bx extends Ho{getConfig(){return{}}}class xx extends bx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hi((()=>{const t=yx(e,this.axis),n=Sc(t,0,this.maxValue);return Oo(e,Ao(n,$o(ob(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}xx.className="MaxNorm",Ko(xx);class wx extends bx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hi((()=>Ao(e,$o(ob(),yx(e,this.axis)))))}getConfig(){return{axis:this.axis}}}wx.className="UnitNorm",Ko(wx);class vx extends bx{apply(e){return Cp(e)}}vx.className="NonNeg",Ko(vx);class Tx extends bx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hi((()=>{const t=yx(e,this.axis),n=$o(Oo(this.rate,Sc(t,this.minValue,this.maxValue)),Oo(1-this.rate,t));return Oo(e,Ao(n,$o(ob(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Tx.className="MinMaxNorm",Ko(Tx);const kx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ix(e){return _y(e)}function Sx(e,t={}){return Ey(e,qo.getMap().classNameMap,t,"constraint")}function _x(e){return null==e?null:"string"==typeof e?Sx({className:e in kx?kx[e]:e,config:{}}):e instanceof bx?e:Sx(e)}function Nx(e){return new xx(e)}function Ex(e){return new wx(e)}function $x(){return new vx}function Cx(e){return new Tx(e)}function Ax(){return new Nb}function Ox(){return new Eb}function Dx(e){return new $b(e)}function Rx(e){return new Cb(e)}function Fx(e){return new Ab(e)}function Px(e){return new Ob(e)}function Mx(e){return new Db(e)}function Lx(e){return new Rb(e)}function zx(e){return new Fb(e)}function Bx(e){return new Pb(e)}function Ux(e){return new Mb(e)}function Vx(e){return new Lb(e)}function Wx(e){return new zb(e)}function Gx(e){return new Bb(e)}function jx(e){return new Ub(e)}async function Hx(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];pi(r)}}function qx(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Kx;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Kx||(Kx={}));class Xx{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Yx{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Zx extends Xx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=hi((()=>$o(this.totals[e],Oo(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:hi((()=>{const n=Oo(Ao(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),di(t[e])})))}}class Jx extends Xx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Qx extends Xx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||jf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ae(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Xs();return(...a)=>{const i=null!=n?n():Xs();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Hx(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Hx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Hx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Hx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Hx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ae(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Hx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Hx(e),await this.trainEnd(e))}}function ew(e,t){return null==e&&(e={}),e instanceof Xx?[e]:Array.isArray(e)&&e[0]instanceof Xx?e:Ty(e).map((e=>new Qx(e,t)))}class tw{constructor(){}static registerCallbackConstructor(e,t){ie(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),tw.checkForDuplicate(t),null==tw.constructors[e]&&(tw.constructors[e]=[]),tw.constructors[e].push(t)}static checkForDuplicate(e){for(const t in tw.constructors)tw.constructors[+t].forEach((t=>{if(t===e)throw new fy("Duplicate callback constructor.")}))}static clear(){tw.constructors={}}static createCallbacks(e){const t=[];for(const n in tw.constructors){const r=+n;e>=r&&t.push(...tw.constructors[r])}return t.map((e=>new e))}}function nw(e,t,n,r,s,a,i,o,l){const u=new Jx,c=[new Zx,...tw.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Yx(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function rw(e,t={},n=!1){return Ey(e,qo.getMap().classNameMap,t,"layer",n)}function sw(e,t){return hi((()=>{"float32"!==e.dtype&&(e=_o(e,"float32"));const n=ch(xb(e),t,!0),r=Jo(n.shape,ob()),s=Do(ol(n,r));return Ao(e,s)}))}function aw(e,t){return hi((()=>qh(xb(tl(t,e)),-1)))}function iw(e,t){return hi((()=>qh(rl(tl(t,e)),-1)))}function ow(e,t){return hi((()=>{const n=tl(e,t),r=Sc(rl(e),ob(),Number.MAX_VALUE),s=rl(Ao(n,r));return Oo(100,qh(s,-1))}))}function lw(e,t,n=!1){return hi((()=>{if(n)t=Xp(t);else{const e=ch(t,t.shape.length-1,!0);t=Ao(t,e)}return t=Sc(t,ob(),1-ob()),Pl(ch(Oo(_o(e,"float32"),Ah(t)),t.shape.length-1))}))}function uw(e,t,n=!1){return hi((()=>{const r=_o(xh(function(e){const t=[nb(e.shape)];return oc(e,t)}(e)),"int32"),s=(t=Sc(t,ob(),1-ob())).shape;return lw(oc(Rl(r,s[s.length-1]),s),t,n)}))}function cw(e,t){return hi((()=>{let n;return n=Sc(t,ob(),1-ob()),n=Ah(Ao(n,tl(1,n))),qh(function(e,t){if(!pe(e.shape,t.shape))throw new fy(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return hi((()=>{const n=Cp(t),r=Pl(rl(t));return $o(tl(n,Oo(t,e)),Oh(fh(r)))}))}(e,n),-1)}))}function hw(e,t){return hi((()=>{const n=sw(e,-1),r=sw(t,-1),s=Oo(n,r);return Pl(ch(s,-1))}))}tw.constructors={};const pw={meanSquaredError:aw,meanAbsoluteError:iw,meanAbsolutePercentageError:ow,meanSquaredLogarithmicError:function(e,t){return hi((()=>{const n=Sc(t,ob(),Number.MAX_VALUE),r=Ah($o(1,n)),s=Sc(e,ob(),Number.MAX_VALUE),a=Ah($o(1,s));return qh(xb(tl(r,a)),-1)}))},squaredHinge:function(e,t){return hi((()=>{const n=ol(0,tl(1,Oo(e,t)));return qh(xb(n),-1)}))},hinge:function(e,t){return hi((()=>{const n=ol(0,tl(1,Oo(e,t)));return qh(n,-1)}))},categoricalHinge:function(e,t){return hi((()=>{const n=ch(Oo(e,t),-1),r=lh(Oo(tl(1,e),t),-1);return ol(0,$o(1,tl(r,n)))}))},logcosh:function(e,t){return hi((()=>{const n=Math.log(2),r=tl(t,e),s=tl($o(r,Dh(Oo(-2,r))),n);return qh(s,-1)}))},categoricalCrossentropy:lw,sparseCategoricalCrossentropy:uw,binaryCrossentropy:cw,kullbackLeiblerDivergence:function(e,t){return hi((()=>{const n=Sc(e,ob(),1),r=Sc(t,ob(),1);return ch(Oo(e,Ah(Ao(n,r))),-1)}))},poisson:function(e,t){return hi((()=>{const n=Ah($o(ob(),t));return qh(tl(t,Oo(e,n)),-1)}))},cosineProximity:hw};function dw(e){if("string"==typeof e){if(e in pw)return pw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new fy(t)}return e}function fw(e,t){return hi((()=>{const n=Oo(.5,sp(t)),r=lb(vh(t,n),e.dtype);return qh(Hc(e,r),-1)}))}function mw(e,t){return hi((()=>lb(Hc(zu(e,-1),zu(t,-1)),"float32")))}function gw(e,t){return hi((()=>_o(ch(Mh(Hc(e,1),Hc(t,1))),"float32")))}function yw(e,t){return hi((()=>{const n=gw(e,t),r=function(e,t){return hi((()=>_o(ch(Mh(Hc(e,0),Hc(t,1))),"float32")))}(e,t),s=$o(n,r);return _o(qc(vh(s,0),Ao(n,s),0),"float32")}))}function bw(e,t){return cw(e,t)}function xw(e,t){return e.rank===t.rank&&(e=nd(e,[e.rank-1])),(t=zu(t,-1)).dtype!==e.dtype&&(t=_o(t,e.dtype)),_o(Hc(e,t),"float32")}const ww=lw,vw=uw,Tw={binaryAccuracy:fw,categoricalAccuracy:mw,precision:yw,categoricalCrossentropy:ww,sparseCategoricalCrossentropy:vw,mse:aw,MSE:aw,mae:iw,MAE:iw,mape:ow,MAPE:ow,cosine:hw};function kw(e){if("string"==typeof e&&e in Tw)return Tw[e];if("string"!=typeof e&&null!=e)return e;throw new fy(`Unknown metric ${e}`)}function Iw(e){if(xy(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(pw))if(pw[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Tw))if(Tw[n]===e){t=n;break}return void 0!==t?t:e.name}}function Sw(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!_w(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function _w(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!_w(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!_w(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Nw(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Ew(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Nw([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function $w(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Nw([`${o} (${l})`,a,s,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)Nw(["","","","",i[e]],t,r)}function Cw(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Aw(e,t){if(null===e)return null;if("string"==typeof e)return Iy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Cw(t,s,r)?n.push(r):n.push(Aw(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Iy(n);t[e]=Aw(r,e)}}return t}}function Ow(e,t){if(null==e)return null;if("string"==typeof e)return ky(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Cw(t,s,r)?n.push(r):n.push(Ow(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[ky(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Ow(r,n):r}return t}}const Dw="4.17.0";class Rw extends ix{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=By(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Cy(this.inputs).length!==this.inputs.length)throw new fy(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Cy(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;xy(0===n,"input layer has >1 nodes"),xy(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof lx))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new dy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Rw.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(s[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort($y);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Rw&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort($y);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new dy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new dy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new sx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new fy("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=s?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new fy(`Duplicate weight name: ${e}`);n[e]=a,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new fy(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new fy(`${e.length} of ${r} weights are not set: ${e}`)}ex(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Dw}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ow(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return hi((()=>{e=Ty(e);const n=new cx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return dx(this.outputs,n,t)}))}computeMask(e,t){return hi((()=>{let n;return e=Ty(e),n=null==t?by(null,e.length):Ty(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=qb(e);if(t.length!==this.inputLayers.length)throw new fy(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($y);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=qb(t.computeOutputShape(vy(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];xy(t in n),s.push(n[t])}return vy(s)}runInternalGraph(e,t){null==t&&(t=by(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($y);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=Ty(t.call(e,u)),l=Ty(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Ty(t.call(r,u)),l=Ty(t.computeMask(r,i));if(t.activityRegularizer)throw new my("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){xy(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Rw?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=Rw.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new fy("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new fy(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new fy(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return hi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Rw.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=Rw.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[Rw.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=Rw.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=Rw.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(vy(n),r)}function l(e){const n=e.name,a=rw(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new fy(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Ay(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];xy(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];xy(t in s);const a=s[t].inboundNodes[n].outputTensors;p.push(a[r])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new fy("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){hi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Fw(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Pw(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=hi((()=>{if(1===e.shape.length)return No(e);if(2===e.shape.length){if(e.shape[1]>1)return zu(e,1);if(1===e.shape[1])return oc(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());pi(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),od(s,"float32")}return null}function Mw(e,t){return Oo(e,t)}function Lw(e,t){let n,r;const s=t;n=s.xs,r=s.ys,ie(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=zw("input",e.inputNames,n),i=zw("output",e.outputNames,r),o=a[0].shape[0];ie(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ie(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)ie(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ie(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function zw(e,t,n){if(n instanceof ga)return[n];if(Array.isArray(n))return ie(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new fy(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function Bw(e){return"function"==typeof e.iterator}function Uw(e){ie(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Vw(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>cb(e,t,n-t))):cb(e,t,n-t)}function Ww(e,t){return hi((()=>null==e?null:Array.isArray(e)?e.map((e=>Ww(e,t))):bb(e,"int32"===t.dtype?t:_o(t,"int32"))))}function Gw(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function jw(e){const t=[];e instanceof ga&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ub(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Hw(e,t){if(null==e)return;const n=[];if(t instanceof ga)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ga)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function qw(e){return Array.isArray(e)}function Kw(e){return!function(e){return e instanceof ga}(e)&&!qw(e)}function Xw(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(qw(e)&&e.length>0)t=!0;else if(Kw(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new fy(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Kw(e)){a=[];for(const n of t){if(null==e[n])throw new fy(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(qw(e)){if(e.length!==t.length)throw new fy(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new fy(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=jw(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new fy(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new fy(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Yw(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new fy(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new fy(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new fy(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new fy(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Zw extends Rw{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new fy("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Nw(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Ew(o[e],n,r):$w(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Yb(e.collectedTrainableWeights):Yb(e.trainableWeights),t}(e),u=Yb(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Wf.adagrad(.01),Adadelta:()=>Wf.adadelta(1,.95,ob()),Adam:()=>Wf.adam(.001,.9,.999,ob()),Adamax:()=>Wf.adamax(.002,.9,.999,ob(),0),RMSProp:()=>Wf.rmsprop(.001,.9,0,ob()),SGD:()=>Wf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new fy(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Yo))throw new fy("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new fy(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>dw(e)))}else{const n=dw(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new fy(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(dw(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Zy("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Zy("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===cw?-1!==["accuracy","acc"].indexOf(i)?r=fw:-1!==["crossentropy","ce"].indexOf(i)&&(r=bw):this.lossFunctions[e]===uw?-1!==["accuracy","acc"].indexOf(i)?r=xw:-1!==["crossentropy","ce"].indexOf(i)&&(r=vw):-1!==["accuracy","acc"].indexOf(i)?r=mw:-1!==["crossentropy","ce"].indexOf(i)&&(r=ww),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=kw(i);a=e,n=""+Iw(i)}let t;Zy(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Uw(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return vy(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Hw(s[0],e),Hw(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new my("Verbose mode is not implemented yet.");ie(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=hi((()=>{if(t.value){const{xs:n,ys:r}=Lw(e,t.value),i=n.concat(r),u=hi((()=>s(i)));if(pi(i),0===l)for(let e=0;e<u.length;++e)a.push(Wo(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=hi((()=>$o(a[e],Oo(c,t)))),l>0&&pi(n)}pi(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Ao(a[e],o),pi(t)}return vy(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new fy(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new fy(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new fy("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new cx;if(e instanceof ga&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new fy(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new fy(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=dx(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=by(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new fy(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return hi((()=>{const r=this.checkNumSamples(e);if(n)throw new my("Verbose predictLoop() is not implemented yet.");const s=Gw(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)hi((()=>{const n=s[t][0],r=s[t][1],a=Vw(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new cx(i);return dx(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return vy(a.map((e=>cc(e,0))))}))}predict(e,t={}){const n=jw(e);Yw(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Uw(e),this.predictLoop(n,e)}finally{Hw(n,e)}}predictOnBatch(e){Yw(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new dy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===uw?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=Cy(e.map((e=>e.shape[0])));r.sort();const s=Cy(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new fy(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new fy(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!pe(r,s))throw new fy(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Xw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Xw(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[aw,cw,lw];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===lw&&1===a.shape[a.shape.length-1])throw new fy(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new fy(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new fy(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Fw(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Pw(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return hi((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new my("Verbose mode is not implemented yet.");if(null!=s)throw new my("steps mode in testLoop() is not implemented yet");{const r=Gw(a,n),s=od(ab(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=cb(s,a,o-a),u=Ww(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Wo(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=$o(i[e],Oo(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ao(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;wy(e,r)>1&&(s+=`_${wy(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new cx(e),o=dx(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Mw(n,s[e]));const a=qh(n);t.push(a),l=0===e?n:$o(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=qh(t(r[s],o[s]))}di(n),a.push(n)}return l=qh(l),this.calculateLosses().forEach((e=>{l=$o(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>hi((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new cx(a),o=dx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=qh(r(s[e],o[e]));n=0===e?a:$o(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=qh(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,l,u,c,h;this.isTraining=!0;try{const p=null==n.batchSize?32:n.batchSize;Uw(p);const d=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,d,p);r=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new my("validationData including sample weights is not supported yet."):new fy(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,p);u=t[0],c=t[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=Vw(r,e,t),a=r,r=Vw(r,0,e),c=Vw(s,e,t),i=s,s=Vw(s,0,e),m=u.concat(c)}else null!=n.validationSteps&&(g=!0);const y=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,v;g?(this.makeTestFunction(),w=this.testFunction,v=x.slice().concat(x.map((e=>"val_"+e)))):(w=null,m=[],v=x.slice());const T=ew(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,p,n.epochs,n.verbose,T,w,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,Hw(r,e),Hw(s,t),Hw(a,e),Hw(i,t),Hw(u,o),Hw(c,l),null!=h&&pi(h)}}async fitLoop(e,t,n,r,s,a,i,o,l,u,c,h,p,d){null==r&&(r=32),null==s&&(s=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=d&&(f=!0,null==p))throw new fy("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,p,"steps_per_epoch");let g;null!=m&&(g=ab(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=nw(i,a,s,h,m,p,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=h;a<s;++a){await y.onEpochBegin(a);const s={};if(null!=p)throw new my("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new my("batch shuffling is not implemneted yet");u&&J(g);const a=od(g),i=Gw(m,r);for(let u=0;u<i.length;++u){const c={};if(await y.onBatchBegin(u,c),hi((()=>{const h=i[u][0],p=i[u][1],d=cb(a,h,p-h);c.batch=u,c.size=p-h;const m=Ww(t,d),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,di(r)}if(u===i.length-1&&f){const e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];di(a),s["val_"+r]=a}}})),await y.onBatchEnd(u,c),qx(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ie(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ie(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ie(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ie(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ie(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Bw(n.validationData))ie(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new my("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=ew(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=nw(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Lw(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Fw(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Pw(s[e],null,t[e]))}const u=r.concat(s).concat(i),d=o(u);pi(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];a[t]=n,di(n)}await p.onBatchEnd(h,a),qx(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Bw(n.validationData)?Ty(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ty(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return pi(a),Hw(n[0],e),Hw(n[1],t),vy(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ui().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ui().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ky(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ky(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ky(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ky(Iw(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ky(Iw(e))));{const e={};for(const t in this.metrics)e[t]=ky(Iw(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=rw(Aw(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Iy(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Iy(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Iy(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Iy(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Iy(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=ji(e);if(0===t.length)throw new fy(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new fy(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new fy("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Si(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Dw}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await Si(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=Fi([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Sw(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Sw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Zw.className="Model",Ko(Zw);class Jw extends Zw{}async function Qw(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=rw(Aw(n),t);if(null!=e.weightsManifest){const t=await xl(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),pi(t)}return r}async function ev(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Hi(e,t);if(0===n.length)n.push(Sl(e,t));else if(n.length>1)throw new fy(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new fy("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=rw(Aw(s),void 0,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new fy("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=_i(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),pi(e),pi(t.map((e=>e.tensor)))}return o}(e,0,t)}Jw.className="Functional",Ko(Jw);class tv extends Zw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:By("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new fy(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof tv||e instanceof Zw;let n;if(t){if(n=e,1!==n.outputs.length)throw new fy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new fy("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new fy("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=ux({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new fy(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new fy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ox(this.outputs[0])}this.inboundNodes=[],new sx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:by(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Xb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new dy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new dy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new dy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new dy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new fy("Legacy serialization format not supported yet.");s=t}else ie(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof tv))throw new my(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=rw(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new fy("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new fy("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function nv(e){return new Zw(e)}function rv(e){return new tv(e)}function sv(e){return ux(e)}function av(e,t){tw.registerCallbackConstructor(e,t)}tv.className="Sequential",Ko(tv);class iv extends Ho{getConfig(){return{}}}class ov extends iv{apply(e,t=1){return function(e,t=1){if(1!==t)throw new my(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Zc(e)}(e,t)}}ov.className="elu",Ko(ov);class lv extends iv{apply(e){return zp(e)}}lv.className="selu",Ko(lv);class uv extends iv{apply(e){return Cp(e)}}uv.className="relu",Ko(uv);class cv extends iv{apply(e){return hi((()=>Zh(6,Cp(e))))}}cv.className="relu6",Ko(cv);class hv extends iv{apply(e){return e}}hv.className="linear",Ko(hv);class pv extends iv{apply(e){return hc(e)}}pv.className="sigmoid",Ko(pv);class dv extends iv{apply(e){return function(e){return hi((()=>{const t=$o(.5,Oo(.2,e));return Sc(t,0,1)}))}(e)}}dv.className="hardSigmoid",Ko(dv);class fv extends iv{apply(e){return Dh(e)}}fv.className="softplus",Ko(fv);class mv extends iv{apply(e){return function(e){return hi((()=>Ao(e,$o(rl(e),1))))}(e)}}mv.className="softsign",Ko(mv);class gv extends iv{apply(e){return dc(e)}}gv.className="tanh",Ko(gv);class yv extends iv{apply(e,t=-1){return Xp(e,t)}}yv.className="softmax",Ko(yv);class bv extends iv{apply(e,t=-1){return Fh(e,t)}}bv.className="logSoftmax",Ko(bv);class xv extends iv{apply(e,t=1){return hi((()=>Oo(hc(Oo(e,t)),e)))}}xv.className="swish",Ko(xv);class wv extends iv{apply(e){return hi((()=>Oo(e,dc(Dh(e)))))}}function vv(e){return e.getClassName()}function Tv(e,t={}){return Ey(e,qo.getMap().classNameMap,t,"activation")}function kv(e){if(null==e){return Tv({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Tv(t)}return e instanceof iv?e:Tv(e)}function Iv(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}wv.className="mish",Ko(wv);class Sv extends Ho{}class _v extends Sv{constructor(e){super(),Iv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return hi((()=>{let t=Kh([1]);return this.hasL1&&(t=$o(t,ch(Oo(this.l1,rl(e))))),this.hasL2&&(t=$o(t,ch(Oo(this.l2,xb(e))))),oc(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}_v.className="L1L2",Ko(_v);const Nv={l1l2:"L1L2"};function Ev(e){return _y(e)}function $v(e,t={}){return Ey(e,qo.getMap().classNameMap,t,"regularizer")}function Cv(e){return null==e?null:"string"==typeof e?$v({className:e in Nv?Nv[e]:e,config:{}}):e instanceof Sv?e:$v(e)}class Av extends ix{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Kb(e);let n=Cp(e);return null!=this.maxValue&&(n=Sc(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Av.className="ReLU",Ko(Av);class Ov extends ix{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Kb(e);return _h(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ov.className="LeakyReLU",Ko(Ov);class Dv extends ix{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=jb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Cv(e.alphaRegularizer),this.alphaConstraint=_x(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new fy(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Xb(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new tx({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Kb(e),dp(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Gb(this.alphaInitializer),alphaRegularizer:Ev(this.alphaRegularizer),alphaConstraint:Ix(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Dv.className="PReLU",Ko(Dv);class Rv extends ix{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new my(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Kb(e);return Zc(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Rv.className="ELU",Ko(Rv);class Fv extends ix{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Kb(e);return Oo(n,_o(vh(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Fv.className="ThresholdedReLU",Ko(Fv);class Pv extends ix{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new yv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return hi((()=>{let n=Kb(e);const r=t.mask;if(null!=r){const e=Oo(tl(Xh(n.shape),_o(r,n.dtype)),Wo(-1e9));n=$o(n,e)}return this.axis instanceof Array?this.axis.length>1?fh(tl(n,Ph(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Mv(e,t,n){if("number"==typeof e)return by(e,t);if(e.length!==t)throw new fy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new fy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function Lv(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function zv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+sb([n-t,0]);else{if("same"!==r)throw new fy(`Unsupport padding mode: ${r}.`);e*=t}return e}function Bv(e,t){return hi((()=>(qy(t),"channelsFirst"===t?Ll(e,[0,2,3,1]):e)))}function Uv(e,t){return hi((()=>(qy(t),"channelsFirst"===t?Ll(e,[0,2,3,4,1]):e)))}function Vv(e,t,n,r=[1,1],s="valid",a,i,o=null){return hi((()=>{if(null==a&&(a="channelsLast"),qy(a),3!==e.rank&&4!==e.rank)throw new fy(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new fy(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Bv(e,a);if("causal"===s)throw new my("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Pd({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Ll(l,[0,3,1,2])),l}))}Pv.className="Softmax",Ko(Pv);class Wv extends ix{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Wv.verifyArgs(t),this.rank=e,Ry(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new my(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Mv(t.kernelSize,e,"kernelSize"),this.strides=Mv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ky(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,qy(this.dataFormat),this.activation=kv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=jb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=_x(t.biasConstraint),this.biasRegularizer=Cv(t.biasRegularizer),this.activityRegularizer=Cv(t.activityRegularizer),this.dilationRate=Mv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new fy(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new fy(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new fy(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(xy("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Dy(e.kernelSize,"number",1,3))throw new fy(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:vv(this.activation),useBias:this.useBias,biasInitializer:Gb(this.biasInitializer),biasRegularizer:Ev(this.biasRegularizer),activityRegularizer:Ev(this.activityRegularizer),biasConstraint:Ix(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Gv extends Wv{constructor(e,t){super(e,t),this.kernel=null,Gv.verifyArgs(t),this.filters=t.filters,Ry(this.filters,"filters"),this.kernelInitializer=jb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=_x(t.kernelConstraint),this.kernelRegularizer=Cv(t.kernelRegularizer)}build(e){e=Xb(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fy(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return hi((()=>{let t;e=Kb(e);const n=null==this.bias?null:this.bias.read(),r=Py(this.activation.getClassName());if(null!=r&&2===this.rank)t=Vv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return hi((()=>{if(null==a&&(a="channelsLast"),qy(a),3!==e.shape.length)throw new fy(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new fy(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new fy(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=Ll(e,[0,2,1])),"causal"===s)throw new my("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ac(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=vb(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Vv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new my("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return hi((()=>{if(null==a&&(a="channelsLast"),qy(a),4!==e.rank&&5!==e.rank)throw new fy(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new fy(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Uv(e,a);if("causal"===s)throw new my("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Rc(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=vb(o,n)),"channelsFirst"===a&&(o=Ll(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Xb(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Lv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Gb(this.kernelInitializer),kernelRegularizer:Ev(this.kernelRegularizer),kernelConstraint:Ix(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new fy(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class jv extends Gv{constructor(e){super(2,e),jv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Dy(e.kernelSize,"number",1,2))throw new fy(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}jv.className="Conv2D",Ko(jv);class Hv extends Gv{constructor(e){super(3,e),Hv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new fy(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Hv.className="Conv3D",Ko(Hv);class qv extends jv{constructor(e){if(super(e),this.inputSpec=[new tx({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new fy(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Xb(e)).length)throw new fy("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fy("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tx({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return hi((()=>{let t=Kb(e);if(4!==t.shape.length)throw new fy(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,zv(i,c,l,this.padding),zv(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ll(t,[0,2,3,1]));let d=Dc(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Ll(d,[0,3,1,2])),null!=this.bias&&(d=vb(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=Xb(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=zv(t[r],o,a,this.padding),t[s]=zv(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}qv.className="Conv2DTranspose",Ko(qv);class Kv extends Hv{constructor(e){if(super(e),this.inputSpec=[new tx({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new fy(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Xb(e)).length)throw new fy("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fy("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tx({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return hi((()=>{let t=Kb(e);if(5!==t.shape.length)throw new fy(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,zv(o,d,c,this.padding),zv(l,f,h,this.padding),zv(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ll(t,[0,2,3,4,1]));let y=Pc(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Ll(y,[0,4,1,2,3])),null!==this.bias&&(y=vb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Xb(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=zv(t[r],u,i,this.padding),t[s]=zv(t[s],c,o,this.padding),t[a]=zv(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Kv.className="Conv3DTranspose",Ko(Kv);class Xv extends Gv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new fy("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new fy("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new fy(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=jb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Cv(t.depthwiseRegularizer),this.depthwiseConstraint=_x(t.depthwiseConstraint),this.pointwiseInitializer=jb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Cv(t.pointwiseRegularizer),this.pointwiseConstraint=_x(t.pointwiseConstraint)}build(e){if((e=Xb(e)).length<this.rank+2)throw new fy(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new fy(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new tx({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return hi((()=>{let t;if(e=Kb(e),1===this.rank)throw new my("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ll(e,[0,2,3,1])),t=Bp(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=vb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ll(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Gb(this.depthwiseInitializer),e.pointwiseInitializer=Gb(this.pointwiseInitializer),e.depthwiseRegularizer=Ev(this.depthwiseRegularizer),e.pointwiseRegularizer=Ev(this.pointwiseRegularizer),e.depthwiseConstraint=Ix(this.depthwiseConstraint),e.pointwiseConstraint=Ix(this.pointwiseConstraint),e}}Xv.className="SeparableConv";class Yv extends Xv{constructor(e){super(2,e)}}Yv.className="SeparableConv2D",Ko(Yv);class Zv extends Gv{constructor(e){super(1,e),Zv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Dy(e.kernelSize,"number",1,1))throw new fy(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Zv.className="Conv1D",Ko(Zv);class Jv extends ix{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return hi((()=>{if(e=Kb(e),"channelsLast"===this.dataFormat){const t=pb(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return pb(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=pb(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return pb(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Jv.className="Cropping2D",Ko(Jv);class Qv extends ix{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Oy(Vy,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return hi((()=>{let t=Kb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ll(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Lf.resizeNearestNeighbor(t,[e,r]):Lf.resizeBilinear(t,[e,r]);return Ll(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Lf.resizeNearestNeighbor(t,[e,r]):Lf.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Qv.className="UpSampling2D",Ko(Qv);class eT extends Wv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=jb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=_x(e.depthwiseConstraint),this.depthwiseRegularizer=Cv(e.depthwiseRegularizer)}build(e){if((e=Xb(e)).length<4)throw new fy(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new fy(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hi((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return hi((()=>{null==s&&(s="channelsLast"),qy(s);let i=Bv(e,s);if(4!==e.rank)throw new fy(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new fy(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Wc(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Ll(i,[0,3,1,2])),i}))}(e=Kb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=vb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Xb(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Lv(t,this.kernelSize[0],this.padding,this.strides[0]),a=Lv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Gb(this.depthwiseInitializer),e.depthwiseRegularizer=Ev(this.depthwiseRegularizer),e.depthwiseConstraint=Ix(this.depthwiseRegularizer),e}}function tT(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new fy("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function nT(e,t,n,r=!1,s,a,i=!1,o=!1){return hi((()=>{const l=t.shape.length;if(l<3)throw new fy(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(ab(2,l));if(t=Ll(t,u),null!=a)throw new my("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=_o(_o(s,"bool"),"float32")).rank===l-1&&(s=mh(s,-1)),s=Ll(s,u)),r&&(t=Op(t,0),null!=s&&(s=Op(s,0)));const c=[];let h,p=n;const d=t.shape[0],f=yd(t);let m,g;null!=s&&(m=yd(s));for(let t=0;t<d;++t){const n=f[t],r=hi((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=hi((()=>{const e=m[t],n=tl(sp(e),e);return{output:$o(Oo(r[0],e),Oo(p[0],n)),newStates:p.map(((t,s)=>$o(Oo(r[1][s],e),Oo(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=rd(c,1)),[h,g,p]}))}eT.className="DepthwiseConv2D",Ko(eT);class rT extends ix{constructor(e){let t;if(super(e),null==e.cell)throw new fy("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new hT({cells:e.cell}):e.cell,null==t.stateSize)throw new fy("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new tx({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ab(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Hb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return hi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new my("Constants support is not implemented in RNN yet.");Hb(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new tx({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!pe(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new fy(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new tx({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){hi((()=>{if(!this.stateful)throw new py("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new fy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Kh([n,e]))):this.states_=[Kh([n,this.cell.stateSize])];else if(null==e)pi(this.states_),null!=this.keptStates&&(pi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Kh([n,e]))):this.states_[0]=Kh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):pi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!pe(r.shape,a))throw new fy(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>di(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tT(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new tx({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof nx){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return hi((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Kb(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new fy(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=nT(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return hi((()=>{let t=Kh(e.shape);return t=ch(t,[1,2]),t=ub(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?mb(t,[1,e]):t)):this.cell.stateSize>1?[mb(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===rT.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=rw(t.cell,n);return new e(Object.assign(t,{cell:r}))}}rT.className="RNN",Ko(rT);class sT extends ix{}class aT extends sT{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ry(this.units,"units"),this.activation=kv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Cv(e.kernelRegularizer),this.recurrentRegularizer=Cv(e.recurrentRegularizer),this.biasRegularizer=Cv(e.biasRegularizer),this.kernelConstraint=_x(e.kernelConstraint),this.recurrentConstraint=_x(e.recurrentConstraint),this.biasConstraint=_x(e.biasConstraint),this.dropout=rb([1,sb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rb([1,sb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Xb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hi((()=>{if(2!==e.length)throw new fy(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pT({ones:()=>sp(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pT({ones:()=>sp(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=yb(null!=a?Oo(e,a):e,this.kernel.read()),null!=this.bias&&(s=vb(s,this.bias.read())),null!=i&&(n=Oo(n,i));let o=$o(s,yb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vv(this.activation),useBias:this.useBias,kernelInitializer:Gb(this.kernelInitializer),recurrentInitializer:Gb(this.recurrentInitializer),biasInitializer:Gb(this.biasInitializer),kernelRegularizer:Ev(this.kernelRegularizer),recurrentRegularizer:Ev(this.recurrentRegularizer),biasRegularizer:Ev(this.biasRegularizer),activityRegularizer:Ev(this.activityRegularizer),kernelConstraint:Ix(this.kernelConstraint),recurrentConstraint:Ix(this.recurrentConstraint),biasConstraint:Ix(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}aT.className="SimpleRNNCell",Ko(aT);class iT extends rT{constructor(e){e.cell=new aT(e),super(e)}call(e,t){return hi((()=>{null!=this.cell.dropoutMask&&(pi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(pi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}iT.className="SimpleRNN",Ko(iT);class oT extends sT{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new fy("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ry(this.units,"units"),this.activation=kv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=kv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Cv(e.kernelRegularizer),this.recurrentRegularizer=Cv(e.recurrentRegularizer),this.biasRegularizer=Cv(e.biasRegularizer),this.kernelConstraint=_x(e.kernelConstraint),this.recurrentConstraint=_x(e.recurrentConstraint),this.biasConstraint=_x(e.biasConstraint),this.dropout=rb([1,sb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rb([1,sb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Xb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hi((()=>{if(2!==e.length)throw new fy(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pT({ones:()=>sp(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pT({ones:()=>sp(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Oo(e,s[0]));let u=yb(e,this.kernel.read());this.useBias&&(u=vb(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Oo(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=Qp(c,[2*this.units,this.units],c.rank-1),d=yb(r,h),[f,m,g]=Qp(u,3,u.rank-1),[y,b]=Qp(d,2,d.rank-1);i=this.recurrentActivation.apply($o(f,y)),o=this.recurrentActivation.apply($o(m,b));const x=yb(Oo(o,r),p);l=this.activation.apply($o(g,x));const w=$o(Oo(i,r),Oo($o(1,Pl(i)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vv(this.activation),recurrentActivation:vv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Gb(this.kernelInitializer),recurrentInitializer:Gb(this.recurrentInitializer),biasInitializer:Gb(this.biasInitializer),kernelRegularizer:Ev(this.kernelRegularizer),recurrentRegularizer:Ev(this.recurrentRegularizer),biasRegularizer:Ev(this.biasRegularizer),activityRegularizer:Ev(this.activityRegularizer),kernelConstraint:Ix(this.kernelConstraint),recurrentConstraint:Ix(this.recurrentConstraint),biasConstraint:Ix(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}oT.className="GRUCell",Ko(oT);class lT extends rT{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new oT(e),super(e)}call(e,t){return hi((()=>{null!=this.cell.dropoutMask&&(pi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(pi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}lT.className="GRU",Ko(lT);class uT extends sT{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ry(this.units,"units"),this.activation=kv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=kv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Cv(e.kernelRegularizer),this.recurrentRegularizer=Cv(e.recurrentRegularizer),this.biasRegularizer=Cv(e.biasRegularizer),this.kernelConstraint=_x(e.kernelConstraint),this.recurrentConstraint=_x(e.recurrentConstraint),this.biasConstraint=_x(e.biasConstraint),this.dropout=rb([1,sb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rb([1,sb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Xb(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends _b{apply(t,r){const s=e.apply([n]),a=(new Eb).apply([n]),i=e.apply([2*n]);return fb(fb(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return hi((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new fy(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pT({ones:()=>sp(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pT({ones:()=>sp(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Oo(e,a[0]));let h=yb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Oo(r,i[0])),h=$o(h,yb(r,this.recurrentKernel.read())),this.useBias&&(h=vb(h,this.bias.read()));const[p,d,f,m]=Qp(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=$o(Oo(l,s),Oo(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Oo(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vv(this.activation),recurrentActivation:vv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Gb(this.kernelInitializer),recurrentInitializer:Gb(this.recurrentInitializer),biasInitializer:Gb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ev(this.kernelRegularizer),recurrentRegularizer:Ev(this.recurrentRegularizer),biasRegularizer:Ev(this.biasRegularizer),activityRegularizer:Ev(this.activityRegularizer),kernelConstraint:Ix(this.kernelConstraint),recurrentConstraint:Ix(this.recurrentConstraint),biasConstraint:Ix(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}uT.className="LSTMCell",Ko(uT);class cT extends rT{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new uT(e),super(e)}call(e,t){return hi((()=>{null!=this.cell.dropoutMask&&(pi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(pi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}cT.className="LSTM",Ko(cT);class hT extends sT{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return hi((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Hb(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Zy(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(rw(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Qb(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}ex(t)}}function pT(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Tb(t(),n),o=()=>kb(i,t,r);return!s||s<=1?di(o().clone()):Array(s).fill(void 0).map(o).map((e=>di(e.clone())))}hT.className="StackedRNNCells",Ko(hT);class dT extends rT{constructor(e){if(e.unroll)throw new my("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new my("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new tx({ndim:5})]}call(e,t){return hi((()=>{if(null!=this.cell.dropoutMask&&(pi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(pi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new fy("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return hi((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Kh([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){hi((()=>{if(!this.stateful)throw new py("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new fy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Kh(s))):this.states_=[Kh(s)];else if(null==e)pi(this.states_),null!=this.keptStates&&(pi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Kh(s))):this.states_[0]=Kh(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):pi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!pe(n.shape,r))throw new fy(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>di(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Lv(l,r[0],s,a[0],i[0]),h=Lv(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}dT.className="ConvRNN2D";class fT extends uT{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Ry(this.filters,"filters"),this.kernelSize=Mv(n,2,"kernelSize"),this.kernelSize.forEach((e=>Ry(e,"kernelSize"))),this.strides=Mv(r||1,2,"strides"),this.strides.forEach((e=>Ry(e,"strides"))),this.padding=s||"valid",Ky(this.padding),this.dataFormat=a||"channelsLast",qy(this.dataFormat),this.dilationRate=Mv(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Ry(e,"dilationRate")))}build(e){var t;e=Xb(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new fy(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends _b{apply(e,t){return db([n.apply([r]),Xh([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return hi((()=>{if(3!==e.length)throw new fy(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pT({ones:()=>sp(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Oo(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pT({ones:()=>sp(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,w]=Qp(this.kernel.read(),4,3),[v,T,k,I]=this.useBias?Qp(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,T,this.padding),c=this.inputConv(c,x,k,this.padding),h=this.inputConv(h,w,I,this.padding);const[S,_,N,E]=Qp(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,_),m=this.recurrentConv(m,N),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply($o(l,d)),C=this.recurrentActivation.apply($o(u,f)),A=$o(Oo(C,a),Oo($,this.activation.apply($o(c,m)))),O=Oo(this.recurrentActivation.apply($o(h,g)),this.activation.apply(A));return[O,O,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Cc(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?vb(s,n,this.dataFormat):s}recurrentConv(e,t){return Cc(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}fT.className="ConvLSTM2DCell",Ko(fT);class mT extends dT{constructor(e){const t=new fT(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}mT.className="ConvLSTM2D",Ko(mT);class gT extends ix{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return hi((()=>{this.invokeCallHook(e,t);const n=Kb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return kb((()=>Tb(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}gT.className="Dropout",Ko(gT);class yT extends gT{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}yT.className="SpatialDropout1D",Ko(yT);class bT extends ix{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ry(this.units,"units"),this.activation=kv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=_x(e.kernelConstraint),this.biasConstraint=_x(e.biasConstraint),this.kernelRegularizer=Cv(e.kernelRegularizer),this.biasRegularizer=Cv(e.biasRegularizer),this.activityRegularizer=Cv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Xb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Xb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return hi((()=>{this.invokeCallHook(e,t);const n=Kb(e),r=Py(this.activation.getClassName());let s;return null!=r?s=yb(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=yb(n,this.kernel.read()),null!=this.bias&&(s=vb(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:vv(this.activation),useBias:this.useBias,kernelInitializer:Gb(this.kernelInitializer),biasInitializer:Gb(this.biasInitializer),kernelRegularizer:Ev(this.kernelRegularizer),biasRegularizer:Ev(this.biasRegularizer),activityRegularizer:Ev(this.activityRegularizer),kernelConstraint:Ix(this.kernelConstraint),biasConstraint:Ix(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}bT.className="Dense",Ko(bT);class xT extends ix{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Xb(e);for(const t of e.slice(1))if(null==t)throw new fy(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],nb(e,1)]}call(e,t){return hi((()=>{this.invokeCallHook(e,t);let n=Kb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ll(n,e)}return function(e){if(e.rank<=1)throw new fy(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],nb(e.shape,1)];return oc(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}xT.className="Flatten",Ko(xT);class wT extends ix{constructor(e){super(e),this.supportsMasking=!0,this.activation=kv(e.activation)}call(e,t){return hi((()=>{this.invokeCallHook(e,t);const n=Kb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:vv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}wT.className="Activation",Ko(wT);class vT extends ix{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return hi((()=>{return e=Kb(e),t=e,n=this.n,hi((()=>{if(2!==t.shape.length)throw new fy(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return mb(ub(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}vT.className="RepeatVector",Ko(vT);class TT extends ix{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new fy("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=nb(e);if(null!==a){if(0===s||i%s!=0)throw new fy(n);r[a]=i/s}else if(i!==s)throw new fy(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return hi((()=>{this.invokeCallHook(e,t);const n=Kb(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return oc(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}TT.className="Reshape",Ko(TT);class kT extends ix{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ab(1,e.dims.length+1);if(!pe(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new tx({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Xb(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Ll(Kb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}kT.className="Permute",Ko(kT);class IT extends ix{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Kb(e);return Lu(rp(n,this.maskValue),-1)}call(e,t){return hi((()=>{this.invokeCallHook(e,t);const n=Kb(e),r=Lu(rp(n,this.maskValue),-1,!0);return Oo(n,_o(r,n.dtype))}))}}IT.className="Masking",Ko(IT);class ST extends ix{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ty(e.inputLength))}this.inputDim=e.inputDim,Ry(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ry(this.outputDim,"outputDim"),this.embeddingsInitializer=jb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Cv(e.embeddingsRegularizer),this.activityRegularizer=Cv(e.activityRegularizer),this.embeddingsConstraint=_x(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return hi((()=>this.maskZero?(e=Kb(e),rp(e,Fo(e))):null))}computeOutputShape(e){if(e=Xb(e),null==this.inputLength)return[...e,this.outputDim];const t=Ty(this.inputLength);if(t.length!==e.length-1)throw new fy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new fy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return hi((()=>{this.invokeCallHook(e,t);let n=Kb(e);"int32"!==n.dtype&&(n=lb(n,"int32"));const r=bb(this.embeddings.read(),oc(n,[n.size]));return oc(r,Xb(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Gb(this.embeddingsInitializer),embeddingsRegularizer:Ev(this.embeddingsRegularizer),activityRegularizer:Ev(this.activityRegularizer),embeddingsConstraint:Ix(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ST.className="Embedding",Ko(ST);class _T extends ix{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new my}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new fy("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Xb(e)]),e.length<2)throw new fy(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Cy(t),t.length>1)throw new fy(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Cy(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return hi((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=sb(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ub(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=oc(r,[s].concat(nb(e.slice(1))));i=Ll(i,[1,0]),i=oc(i,a),t.push(i),n=!0}else if(e>1){const s=ab(1,e).concat([0]);t.push(Ll(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=oc(Ll(oc(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(ab(0,s-1));r=Ll(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Cy(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return hi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new fy("`mask` should be an Array");if(!Array.isArray(e))throw new fy("`inputs` should be an Array");if(t.length!==e.length)throw new fy(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:mh(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Mh(n,t[e]);return n}))}}class NT extends _T{constructor(e){super(e)}mergeFunction(e){return hi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$o(t,e[n]);return t}))}}NT.className="Add",Ko(NT);class ET extends _T{constructor(e){super(e)}mergeFunction(e){return hi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Oo(t,e[n]);return t}))}}ET.className="Multiply",Ko(ET);class $T extends _T{constructor(e){super(e)}mergeFunction(e){return hi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$o(t,e[n]);return Oo(1/e.length,t)}))}}$T.className="Average",Ko($T);class CT extends _T{constructor(e){super(e)}mergeFunction(e){return hi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ol(t,e[n]);return t}))}}CT.className="Maximum",Ko(CT);class AT extends _T{constructor(e){super(e)}mergeFunction(e){return hi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zh(t,e[n]);return t}))}}AT.className="Minimum",Ko(AT);class OT extends _T{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new fy("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(pe(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new fy("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return hi((()=>db(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new fy("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new fy("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new fy("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new fy(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return hi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(_o(sp(e[n]),"bool")):t[n].rank<e[n].rank?r.push(mh(t[n],-1)):r.push(t[n]);const s=cc(r,this.axis);return Mu(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function DT(e,t){for(;e<0;)e+=t;return e}OT.className="Concatenate",Ko(OT);class RT extends _T{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new my("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new fy(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new fy(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>DT(t,e[n].shape.length))):[DT(this.axes,n.shape.length),DT(this.axes,r.shape.length)],this.normalize&&(n=sw(n,t[0]),r=sw(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new my("batchDot is not implemented for tensors of 4D or higher rank yet");if(ie(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ie(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new my("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return hi((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=oc(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=oc(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?ch(Oo(e,t),a[0]):ch(Oo(Ll(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=Dl(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=nd(i,t)}return 1===i.shape.length&&(i=mh(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[DT(this.axes,e.length),DT(this.axes,t.length)],n}computeOutputShape(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new my("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}RT.className="Dot",Ko(RT);class FT extends ix{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return hi((()=>{this.invokeCallHook(e,t);const n=Kb(e);return kb((()=>$o(gb(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}FT.className="GaussianNoise",Ko(FT);class PT extends ix{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return hi((()=>{this.invokeCallHook(e,t);const n=Kb(e);return this.rate>0&&this.rate<1?kb((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Oo(n,gb(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}PT.className="GaussianDropout",Ko(PT);class MT extends ix{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Kb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return hi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=Kb(e),r=-1.7580993408473766;let s=Th(_p(n),this.rate);s=lb(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=$o(Oo(t,s),Oo($o(s,-1),r));return $o(Oo(o,a),i)};return kb(r,(()=>Kb(e)),t.training||!1)}return e}))}}function LT(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=yc(e,t,n,r,s,a);else if(3===e.rank)i=bc(e,t,n,r,s,a);else{if(4!==e.rank)throw new my(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=xc(e,t,n,r,s,a)}return i}MT.className="AlphaDropout",Ko(MT);class zT extends ix{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jb(e.betaInitializer||"zeros"),this.gammaInitializer=jb(e.gammaInitializer||"ones"),this.movingMeanInitializer=jb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=jb(e.movingVarianceInitializer||"ones"),this.betaConstraint=_x(e.betaConstraint),this.gammaConstraint=_x(e.gammaConstraint),this.betaRegularizer=Cv(e.betaRegularizer),this.gammaRegularizer=Cv(e.gammaRegularizer)}build(e){e=Xb(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new fy(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new tx({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return hi((()=>{const n=null!=t.training&&t.training,r=Kb(e),s=r.shape,a=s.length,i=ab(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=by(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!pe(u,ab(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=oc(this.movingMean.read(),l),t=oc(this.movingVariance.read(),l),n=this.center?oc(this.beta.read(),l):null,s=this.scale?oc(this.gamma.read(),l):null;return LT(r,e,t,n,s,this.epsilon)}return LT(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,r,s=.001){return pe(r.slice().sort(),ab(0,e.rank-1))?function(e,t,n,r,s=.001){return hi((()=>{const a=ep(e,r),i=a.mean,o=a.variance;return[LT(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return hi((()=>{const a=ep(e,r),i=a.mean,o=a.variance,l=[];for(const t of ab(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=oc(i,l),c=oc(o,l),h=null==t?null:oc(t,l),p=null==n?null:oc(n,l);return[LT(e,u,c,p,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{hi((()=>{const r=1-n,s=e.read(),a=Oo(tl(s,t),r);e.write(tl(s,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Gb(this.betaInitializer),gammaInitializer:Gb(this.gammaInitializer),movingMeanInitializer:Gb(this.movingMeanInitializer),movingVarianceInitializer:Gb(this.movingVarianceInitializer),betaRegularizer:Ev(this.betaRegularizer),gammaRegularizer:Ev(this.gammaRegularizer),betaConstraint:Ix(this.betaConstraint),gammaConstraint:Ix(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}zT.className="BatchNormalization",Ko(zT);class BT extends ix{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jb(e.betaInitializer||"zeros"),this.gammaInitializer=jb(e.gammaInitializer||"ones"),this.betaRegularizer=Cv(e.betaRegularizer),this.gammaRegularizer=Cv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Xb(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Cy(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Kb(e),r=n.shape,s=r.length;return hi((()=>{let{mean:e,variance:t}=ep(n,this.axis,!0);const a=by(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?oc(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=yh(e,u),t=yh(t,u),null!=o&&(o=yh(o,c)),null!=l&&(l=yh(l,c)),LT(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Gb(this.betaInitializer),gammaInitializer:Gb(this.gammaInitializer),betaRegularizer:Ev(this.betaRegularizer),gammaRegularizer:Ev(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}BT.className="LayerNormalization",Ko(BT);class UT extends ix{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new fy(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new fy(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new fy(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new tx({ndim:4})]}computeOutputShape(e){let t,n;return e=Xb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return hi((()=>{return t=Kb(e),n=this.padding,r=this.dataFormat,hi((()=>{if(4!==t.rank)throw new fy(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new fy("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new fy(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ip(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function VT(e,t,n,r,s,a){return hi((()=>{let i;qy(s),Xy(a),Ky(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Bv(e,s);const o="same"===r?"same":"valid";return i="max"===a?Gh(e,t,n,o):lc(e,t,n,o),"channelsFirst"===s&&(i=Ll(i,[0,3,1,2])),i}))}function WT(e,t,n,r,s,a){return hi((()=>{let i;qy(s),Xy(a),Ky(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Uv(e,s);const o="same"===r?"same":"valid";return i="max"===a?jh(e,t,n,o):uc(e,t,n,o),"channelsFirst"===s&&(i=Ll(i,[0,4,1,2,3])),i}))}UT.className="ZeroPadding2D",Ko(UT);class GT extends ix{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new fy(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ry(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new fy(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ry(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ky(this.padding),this.inputSpec=[new tx({ndim:3})]}computeOutputShape(e){const t=Lv((e=Xb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return hi((()=>{this.invokeCallHook(e,t),e=ub(Kb(e),2);const n=this.poolingFunction(Kb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return nd(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class jT extends GT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qy(s),Ky(r),VT(e,t,n,r,s,"max")}}jT.className="MaxPooling1D",Ko(jT);class HT extends GT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qy(s),Ky(r),VT(e,t,n,r,s,"avg")}}HT.className="AveragePooling1D",Ko(HT);class qT extends ix{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new fy(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ry(this.poolSize,"poolSize"),Ry(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),Ky(this.padding),this.inputSpec=[new tx({ndim:4})]}computeOutputShape(e){e=Xb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Lv(t,this.poolSize[0],this.padding,this.strides[0]),n=Lv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return hi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Kb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class KT extends qT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qy(s),Ky(r),VT(e,t,n,r,s,"max")}}KT.className="MaxPooling2D",Ko(KT);class XT extends qT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qy(s),Ky(r),VT(e,t,n,r,s,"avg")}}XT.className="AveragePooling2D",Ko(XT);class YT extends ix{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new fy(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ry(this.poolSize,"poolSize"),Ry(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),Ky(this.padding),this.inputSpec=[new tx({ndim:5})]}computeOutputShape(e){e=Xb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Lv(t,this.poolSize[0],this.padding,this.strides[0]),n=Lv(n,this.poolSize[1],this.padding,this.strides[1]),r=Lv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return hi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Kb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ZT extends YT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qy(s),Ky(r),WT(e,t,n,r,s,"max")}}ZT.className="MaxPooling3D",Ko(ZT);class JT extends YT{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qy(s),Ky(r),WT(e,t,n,r,s,"avg")}}JT.className="AveragePooling3D",Ko(JT);class QT extends ix{constructor(e){super(e),this.inputSpec=[new tx({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new my}}class ek extends QT{constructor(e){super(e||{})}call(e,t){return hi((()=>{const t=Kb(e);return qh(t,1)}))}}ek.className="GlobalAveragePooling1D",Ko(ek);class tk extends QT{constructor(e){super(e||{})}call(e,t){return hi((()=>{const t=Kb(e);return lh(t,1)}))}}tk.className="GlobalMaxPooling1D",Ko(tk);class nk extends ix{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),this.inputSpec=[new tx({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new my}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class rk extends nk{call(e,t){return hi((()=>{const t=Kb(e);return"channelsLast"===this.dataFormat?qh(t,[1,2]):qh(t,[2,3])}))}}rk.className="GlobalAveragePooling2D",Ko(rk);class sk extends nk{call(e,t){return hi((()=>{const t=Kb(e);return"channelsLast"===this.dataFormat?lh(t,[1,2]):lh(t,[2,3])}))}}sk.className="GlobalMaxPooling2D",Ko(sk);class ak extends ix{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=rw(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class ik extends ak{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Xb(e)).length<3)throw new fy(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Xb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return hi((()=>nT(((e,n)=>[Kb(this.layer.call(e,t)),[]]),e=Kb(e),[],!1,null,null,!1,!0)[1]))}}ik.className="TimeDistributed",Ko(ik);class ok extends ak{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=rw(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=rw(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Oy(jy,"BidirectionalMergeMode",s),e.weights)throw new my("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):vy(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tT(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new fy("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new tx({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new my("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof nx;for(const e of a)if(e instanceof nx!==o)throw new fy("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return hi((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Op(s,1)),"concat"===this.mergeMode?i=db([r,s]):"sum"===this.mergeMode?i=$o(r,s):"ave"===this.mergeMode?i=Oo(.5,$o(r,s)):"mul"===this.mergeMode?i=Oo(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Zy(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Zy(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=rw(t.layer);if(delete t.layer,null!=t.numConstants)throw new my("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}ok.className="Bidirectional",Ko(ok);class lk extends ix{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return hi((()=>("float32"!==(e=Kb(e)).dtype&&(e=lb(e,"float32")),$o(Oo(e,this.scale),this.offset))))}}lk.className="Rescaling",Ko(lk);const{resizeBilinear:uk,cropAndResize:ck}=Lf;class hk extends ix{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return hi((()=>{let l,u=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(u=!0,l=rd([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const p=ei(h,[h.length,4]),d=Ep(0,h.length,1,"int32"),f=ck(l,p,d,[r,s],"nearest");return lb(u?Kb(yd(f)):f,o)}))}upsize(e,t,n,r){return hi((()=>lb(uk(e,[t,n]),r)))}call(e,t){return hi((()=>{const t=Kb(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Xb(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}hk.className="CenterCrop",Ko(hk);class pk extends ix{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Xb(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return hi((()=>{let n;if("int32"!==(e=Kb(e)).dtype&&(e=lb(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new fy(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Kb(t.countWeights)}const r=lh(e),s=uh(e),a=vh(this.numTokens,r).bufferSync().get(0),i=Th(s,0).bufferSync().get(0);if(!a||!i)throw new fy(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=Kb(e);if("int32"!==s.dtype&&(s=lb(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=mh(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=mh(s,-1)),s.rank>2)throw new fy(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=Uc(s,void 0!==r&&"count"===t?r:[],n,i),"tfIdf"!==t)return o;if(r)return Oo(o,r);throw new fy("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}pk.className="CategoryEncoding",Ko(pk);const dk=new Set(["bilinear","nearest"]);class fk extends ix{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!dk.has(e.interpolation))throw new fy(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Xb(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return hi((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Lf.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Lf.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...dk]} are supported`)}))}}fk.className="Resizing",Ko(fk);class mk{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}mk.className="RandomSeed";class gk extends ix{constructor(e){super(e),this.randomGenerator=new mk(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}gk.className="BaseRandomLayer";const yk=new Set(["bilinear","nearest"]);class bk extends gk{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new fy(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new fy(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new fy(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!yk.has(n))throw new fy(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Xb(e))[2];return[this.imgHeight,-1,t]}call(e,t){return hi((()=>{const t=Kb(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=_p([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return Lf.resizeBilinear(e,s);case"nearest":return Lf.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...yk]} are supported`)}}))}}function xk(e){return new lx(e)}function wk(e){return new Rv(e)}function vk(e){return new Av(e)}function Tk(e){return new Ov(e)}function kk(e){return new Dv(e)}function Ik(e){return new Pv(e)}function Sk(e){return new Fv(e)}function _k(e){return new Zv(e)}function Nk(e){return new jv(e)}function Ek(e){return new qv(e)}function $k(e){return new Hv(e)}function Ck(e){return new Kv(e)}function Ak(e){return new Yv(e)}function Ok(e){return new Jv(e)}function Dk(e){return new Qv(e)}function Rk(e){return new eT(e)}function Fk(e){return new wT(e)}function Pk(e){return new bT(e)}function Mk(e){return new gT(e)}function Lk(e){return new yT(e)}function zk(e){return new xT(e)}function Bk(e){return new vT(e)}function Uk(e){return new TT(e)}function Vk(e){return new kT(e)}function Wk(e){return new ST(e)}function Gk(e){return new NT(e)}function jk(e){return new $T(e)}function Hk(e){return new OT(e)}function qk(e){return new CT(e)}function Kk(e){return new AT(e)}function Xk(e){return new ET(e)}function Yk(e){return new RT(e)}function Zk(e){return new zT(e)}function Jk(e){return new BT(e)}function Qk(e){return new UT(e)}function eI(e){return new HT(e)}function tI(e){return eI(e)}function nI(e){return eI(e)}function rI(e){return new XT(e)}function sI(e){return rI(e)}function aI(e){return rI(e)}function iI(e){return new JT(e)}function oI(e){return iI(e)}function lI(e){return iI(e)}function uI(e){return new ek(e)}function cI(e){return new rk(e)}function hI(e){return new tk(e)}function pI(e){return new sk(e)}function dI(e){return new jT(e)}function fI(e){return new KT(e)}function mI(e){return new ZT(e)}function gI(e){return new lT(e)}function yI(e){return new oT(e)}function bI(e){return new cT(e)}function xI(e){return new uT(e)}function wI(e){return new iT(e)}function vI(e){return new aT(e)}function TI(e){return new mT(e)}function kI(e){return new fT(e)}function II(e){return new rT(e)}function SI(e){return new hT(e)}function _I(e){return new ok(e)}function NI(e){return new ik(e)}bk.className="RandomWidth",Ko(bk);const EI=hI,$I=pI,CI=dI,AI=fI;function OI(e){return new FT(e)}function DI(e){return new PT(e)}function RI(e){return new MT(e)}function FI(e){return new IT(e)}function PI(e){return new lk(e)}function MI(e){return new hk(e)}function LI(e){return new fk(e)}function zI(e){return new pk(e)}function BI(e){return new bk(e)}function UI(e,t){return fw(e,t)}function VI(e,t){return bw(e,t)}function WI(e,t){return xw(e,t)}function GI(e,t){return mw(e,t)}function jI(e,t){return ww(e,t)}function HI(e,t){return yw(e,t)}function qI(e,t){return function(e,t){return hi((()=>{const n=gw(e,t),r=function(e,t){return hi((()=>_o(ch(Mh(Hc(e,1),Hc(t,0))),"float32")))}(e,t),s=$o(n,r);return _o(qc(vh(s,0),Ao(n,s),0),"float32")}))}(e,t)}function KI(e,t){return hw(e,t)}function XI(e,t){return iw(e,t)}function YI(e,t){return ow(e,t)}function ZI(e,t){return ow(e,t)}function JI(e,t){return ow(e,t)}function QI(e,t){return aw(e,t)}function eS(e,t){return aw(e,t)}function tS(e,t){return aw(e,t)}function nS(e){return new _v(e)}function rS(e){return Iv(t=e),new _v({l1:null!=t?t.l1:null,l2:0});var t}function sS(e){return Iv(t=e),new _v({l2:null!=t?t.l2:null,l1:0});var t}class aS extends Xx{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Zw))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function iS(e,t){return e<t}function oS(e,t){return e>t}class lS extends aS{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new my("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=iS:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=oS:this.monitorFunc=iS,this.monitorFunc===iS&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===iS?1/0:-1/0}async onEpochEnd(e,t){await Hx(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const uS={earlyStopping:function(e){return new lS(e)}};var cS,hS;Xe().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(cS||(cS={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(hS||(hS={}));const pS={};function dS(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};pS[e]=n}function fS(e){return pS[e]}function mS(e){delete pS[e]}function gS(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return yS(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>yS(e,n,r,s)))}const l=yS(t.inputNames[o],n,r,s),u=l.dataSync();return"number"===a.type?u[0]:Me(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function yS(e,t,n,r){const[s,a]=vS(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[wS(s,e)]));return void 0!==i?t[wS(s,i)][a]:void 0}function bS(e,t,n){return t[wS(e,n.currentContextId)]}function xS(e,t){const[n,r,s]=vS(e,t);return[wS(n,t&&t.currentContextId),r,s]}function wS(e,t){return t?`${e}-${t}`:e}function vS(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function TS(e,t,n){let r=gS("pad",e,t,n);if("explicit"===r){r=gS("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function kS(e){return e.kept?e:No(e)}const IS=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],SS=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_S=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],NS=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],ES=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],$S=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],CS=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],AS=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],OS=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],DS=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],RS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],FS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],PS=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],MS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],LS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],zS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],BS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],US=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],VS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class WS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[S,_,N,E,$,C,A,O,D,R,F,P,M,L,z,B,U,V,W].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=xS(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=xS(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=xS(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=fS(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=jS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=jS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=t_(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=t_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=qS(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=qS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=e_(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=e_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=HS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=HS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=r_(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=r_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=QS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=QS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=n_(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=n_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=YS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=YS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=ZS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ZS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=XS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=XS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=xS(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:KS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=xS(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=xS(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function GS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Xe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function jS(e,t,n,r=!1){const s=e[t];return null!=s?GS(s.s,r):n}function HS(e,t,n){const r=e[t];return r?r.b:n}function qS(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function KS(e){switch("string"==typeof e&&(e=cS[e]),e){case cS.DT_FLOAT:case cS.DT_HALF:return"float32";case cS.DT_INT32:case cS.DT_INT64:case cS.DT_INT8:case cS.DT_UINT8:return"int32";case cS.DT_BOOL:return"bool";case cS.DT_DOUBLE:return"float32";case cS.DT_STRING:return"string";case cS.DT_COMPLEX64:case cS.DT_COMPLEX128:return"complex64";default:return null}}function XS(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function YS(e,t,n){const r=e[t];return r&&r.type?KS(r.type):n}function ZS(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>KS(e))):n}function JS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function QS(e,t,n){const r=e[t];return r&&r.shape?JS(r.shape):n}function e_(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function t_(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>GS(e,r))):n}function n_(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>JS(e))):n}function r_(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class s_{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return yS(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return yS(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return qS(this.node.rawAttrs,e,t);if(null!=n.s)return jS(this.node.rawAttrs,e,t);if(null!=n.b)return HS(this.node.rawAttrs,e,t);if(null!=n.shape)return QS(this.node.rawAttrs,e,t);if(null!=n.type)return YS(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return e_(this.node.rawAttrs,e,t);if(null!=n.list.s)return t_(this.node.rawAttrs,e,t);if(null!=n.list.shape)return n_(this.node.rawAttrs,e,t);if(null!=n.list.b)return r_(this.node.rawAttrs,e,t);if(null!=n.list.type)return ZS(this.node.rawAttrs,e,t)}return t}}function a_(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ie(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];ie(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function i_(e){return"number"!=typeof e&&!e.some((e=>e<0))}function o_(e,t,n){let r=l_(e,n);const s=!i_(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=l_(e.shape,r)})),!i_(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function l_(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class u_{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Wo(0),di(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),a_(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,di(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ei([],[0].concat(this.elementShape));const n=this.readMany(e);return a_(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),rd(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return ei([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return a_(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),cc(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,yd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];hi((()=>{t=oc(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=oc(pc(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class c_{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);a_(t,e.shape,"TensorList shape mismatch: "),di(e)})),this.idTensor=Wo(0),this.maxNumElements=r,di(this.idTensor)}copy(){return new c_([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);a_(e,this.elementShape,"TensorList shape mismatch: ");const r=o_(this.elementShape,this.tensors,e);return hi((()=>{const e=this.tensors.map((e=>oc(e,r)));return rd(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=o_(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,a_(r.shape,e,"TensorList shape mismatch: "),oc(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(a_(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");di(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new c_([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);a_(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=o_(this.elementShape,this.tensors,t);return oc(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);a_(this.elementShape,t.shape,"TensorList shape mismatch: "),di(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);a_(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=o_(this.elementShape,this.tensors,n);return 0===e.length?ei([],[0].concat(r)):hi((()=>{const t=e.map((e=>oc(this.tensors[e],r)));return rd(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);a_(this.elementShape,t,"TensorList shape mismatch: ");const n=o_(this.elementShape,this.tensors,t);return 0===this.size()?ei([],[0].concat(n)):hi((()=>{const e=this.tensors.map((e=>oc(e,n)));return cc(e,0)}))}}function h_(e,t,n){const[r,s]=gS("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,l="fusedbatchnorm"===r,u=gS("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=gS("strides",e,t,n),h=TS(e,t,n),p=gS("dataFormat",e,t,n).toUpperCase(),d=gS("dilations",e,t,n);let[f,m]=gS("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:gS("leakyreluAlpha",e,t,n)}}function p_(e,t,n){return{boxes:gS("boxes",e,t,n),scores:gS("scores",e,t,n),maxOutputSize:gS("maxOutputSize",e,t,n),iouThreshold:gS("iouThreshold",e,t,n),scoreThreshold:gS("scoreThreshold",e,t,n),softNmsSigma:gS("softNmsSigma",e,t,n)}}class d_{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Wo(0),this.tensorMap=new Map,di(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Wo(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),hi((()=>{const e=yd(t),r=n.length,s=e.length;ie(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];di(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return hi((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return rd(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function f_(e,t,n,r,s=hi){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(gS("a",e,t,n),gS("b",e,t,n))];case"AddN":return[r.addN(gS("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(gS("a",e,t,n),gS("b",e,t,n))];case"Mul":return[r.mul(gS("a",e,t,n),gS("b",e,t,n))];case"RealDiv":case"Div":return[r.div(gS("a",e,t,n),gS("b",e,t,n))];case"DivNoNan":return[r.divNoNan(gS("a",e,t,n),gS("b",e,t,n))];case"FloorDiv":return[r.floorDiv(gS("a",e,t,n),gS("b",e,t,n))];case"Sub":return[r.sub(gS("a",e,t,n),gS("b",e,t,n))];case"Minimum":return[r.minimum(gS("a",e,t,n),gS("b",e,t,n))];case"Maximum":return[r.maximum(gS("a",e,t,n),gS("b",e,t,n))];case"Pow":return[r.pow(gS("a",e,t,n),gS("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(gS("a",e,t,n),gS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(gS("x",e,t,n))];case"Acos":return[r.acos(gS("x",e,t,n))];case"Acosh":return[r.acosh(gS("x",e,t,n))];case"Asin":return[r.asin(gS("x",e,t,n))];case"Asinh":return[r.asinh(gS("x",e,t,n))];case"Atan":return[r.atan(gS("x",e,t,n))];case"Atan2":return[r.atan2(gS("x",e,t,n),gS("y",e,t,n))];case"Atanh":return[r.atanh(gS("x",e,t,n))];case"Ceil":return[r.ceil(gS("x",e,t,n))];case"Complex":return[r.complex(gS("real",e,t,n),gS("imag",e,t,n))];case"Cos":return[r.cos(gS("x",e,t,n))];case"Cosh":return[r.cosh(gS("x",e,t,n))];case"Elu":return[r.elu(gS("x",e,t,n))];case"Erf":return[r.erf(gS("x",e,t,n))];case"Exp":return[r.exp(gS("x",e,t,n))];case"Expm1":return[r.expm1(gS("x",e,t,n))];case"Floor":return[r.floor(gS("x",e,t,n))];case"Log":return[r.log(gS("x",e,t,n))];case"Log1p":return[r.log1p(gS("x",e,t,n))];case"Imag":return[r.imag(gS("x",e,t,n))];case"Neg":return[r.neg(gS("x",e,t,n))];case"Reciprocal":return[r.reciprocal(gS("x",e,t,n))];case"Real":return[r.real(gS("x",e,t,n))];case"Relu":return[r.relu(gS("x",e,t,n))];case"Round":return[r.round(gS("x",e,t,n))];case"Selu":return[r.selu(gS("x",e,t,n))];case"Sigmoid":return[r.sigmoid(gS("x",e,t,n))];case"Sin":return[r.sin(gS("x",e,t,n))];case"Sign":return[r.sign(gS("x",e,t,n))];case"Sinh":return[r.sinh(gS("x",e,t,n))];case"Softplus":return[r.softplus(gS("x",e,t,n))];case"Sqrt":return[r.sqrt(gS("x",e,t,n))];case"Square":return[r.square(gS("x",e,t,n))];case"Tanh":return[r.tanh(gS("x",e,t,n))];case"Tan":return[r.tan(gS("x",e,t,n))];case"ClipByValue":return[r.clipByValue(gS("x",e,t,n),gS("clipValueMin",e,t,n),gS("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(gS("x",e,t,n))];case"Rsqrt":return[r.rsqrt(yS(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(gS("x",e,t,n),gS("alpha",e,t,n))];case"Prelu":return[r.prelu(gS("x",e,t,n),gS("alpha",e,t,n))];case"IsNan":return[r.isNaN(yS(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(yS(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(yS(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=gS("thenBranch",e,t,n),s=gS("elseBranch",e,t,n),a=gS("cond",e,t,n),i=gS("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=gS("body",e,t,n),s=gS("cond",e,t,n),a=gS("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[kS(gS("pred",e,t,n))];case"Switch":{const r=gS("pred",e,t,n);let s=gS("data",e,t,n);return s.kept||(s=kS(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==yS(e,t,n)));return r?[kS(yS(r,t,n))]:void 0}case"Enter":{const r=gS("frameName",e,t,n),s=gS("tensor",e,t,n);return n.enterFrame(r),[kS(s)]}case"Exit":{const r=gS("tensor",e,t,n);return n.exitFrame(),[kS(r)]}case"NextIteration":{const r=gS("tensor",e,t,n);return n.nextIteration(),[kS(r)]}case"TensorArrayV3":{const r=gS("size",e,t,n),s=gS("dtype",e,t,n),a=gS("elementShape",e,t,n),i=gS("dynamicSize",e,t,n),o=gS("clearAfterRead",e,t,n),l=gS("identicalElementShapes",e,t,n),u=gS("name",e,t,n),c=new u_(u,s,r,a,l,i,o);return n.addTensorArray(c),[c.idTensor,Wo(1)]}case"TensorArrayWriteV3":{const r=gS("tensorArrayId",e,t,n),s=gS("index",e,t,n),a=gS("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=gS("tensorArrayId",e,t,n),s=gS("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=gS("tensorArrayId",e,t,n),s=gS("indices",e,t,n),a=gS("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=gS("tensorArrayId",e,t,n),s=gS("indices",e,t,n),a=gS("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=gS("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=gS("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=gS("tensorArrayId",e,t,n),s=gS("tensor",e,t,n),a=gS("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=gS("tensorArrayId",e,t,n);return[Wo(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=gS("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=gS("tensorListId",e,t,n),s=gS("index",e,t,n),a=gS("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=gS("tensorListId",e,t,n),s=gS("index",e,t,n),a=gS("elementShape",e,t,n),i=gS("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=gS("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new c_([],n,e.dtype,r),i=yd(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(gS("tensor",e,t,n),r,gS("elementShape",e,t,n),gS("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=gS("elementShape",e,t,n),s=gS("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=gS(a,e,t,n),o=function(e,t,n,r){return new c_([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=gS("tensorListId",e,t,n),s=gS("indices",e,t,n),a=gS("elementShape",e,t,n),i=gS("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=gS("tensorListId",e,t,n),s=gS("elementShape",e,t,n),a=gS("elementDType",e,t,n),i=gS("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);a_(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=yd(e);return new c_(s,t,r)}(gS("tensor",e,t,n),gS("elementShape",e,t,n),gS("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=gS("tensorListId",e,t,n),s=n.getTensorList(r.id),a=gS("dtype",e,t,n),i=gS("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=gS("tensorListId",e,t,n),s=gS("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=gS("tensorListId",e,t,n),s=gS("elementShape",e,t,n),a=gS("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=gS("tensor",e,t,n),s=gS("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=l_(e.shape.slice(1),n),i=0===r?0:e.size/r,o=hi((()=>{const n=[];e=oc(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],i];n[r]=oc(pc(e,o,l),a)}return e.dispose(),n})),l=new c_([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,gS("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=gS("tensorListId",e,t,n);return[Wo(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=gS("tensorListId",e,t,n),s=gS("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Conv1D":{const s=gS("stride",e,t,n),a=gS("pad",e,t,n),i=gS("dataFormat",e,t,n).toUpperCase(),o=gS("dilation",e,t,n);return[r.conv1d(gS("x",e,t,n),gS("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=gS("strides",e,t,n),a=TS(e,t,n),i=gS("dataFormat",e,t,n).toUpperCase(),o=gS("dilations",e,t,n);return[r.conv2d(gS("x",e,t,n),gS("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=h_(e,t,n);return[r.fused.conv2d({x:gS("x",e,t,n),filter:gS("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=h_(e,t,n);return[r.fused.depthwiseConv2d({x:gS("x",e,t,n),filter:gS("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=gS("outputShape",e,t,n),a=gS("strides",e,t,n),i=TS(e,t,n);return[r.conv2dTranspose(gS("x",e,t,n),gS("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=gS("strides",e,t,n),a=TS(e,t,n),i=gS("dilations",e,t,n),o=gS("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(gS("input",e,t,n),gS("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=gS("strides",e,t,n),a=gS("pad",e,t,n),i=gS("dataFormat",e,t,n).toUpperCase(),o=gS("dilations",e,t,n);return[r.conv3d(gS("x",e,t,n),gS("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=gS("strides",e,t,n),a=gS("pad",e,t,n),i=gS("kernelSize",e,t,n);return[r.avgPool(gS("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=gS("strides",e,t,n),a=gS("pad",e,t,n),i=gS("kernelSize",e,t,n);return[r.maxPool(gS("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=gS("strides",e,t,n),a=gS("pad",e,t,n),i=gS("kernelSize",e,t,n),o=gS("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(gS("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[l,u]}case"AvgPool3D":{const s=gS("strides",e,t,n),a=gS("pad",e,t,n),i=gS("kernelSize",e,t,n);return[r.avgPool3d(gS("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=gS("strides",e,t,n),a=gS("pad",e,t,n),i=gS("kernelSize",e,t,n);return[r.maxPool3d(gS("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=gS("strides",e,t,n),a=gS("pad",e,t,n),i=gS("dilations",e,t,n),o=s[1],l=s[2],u=i[1],c=i[2];return[r.dilation2d(gS("x",e,t,n),gS("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Fill":{const s=gS("shape",e,t,n),a=gS("dtype",e,t,n),i=gS("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=gS("start",e,t,n),a=gS("stop",e,t,n),i=gS("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=gS("logits",e,t,n),a=gS("numSamples",e,t,n),i=gS("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=gS("indices",e,t,n),a=gS("depth",e,t,n),i=gS("onValue",e,t,n),o=gS("offValue",e,t,n),l=gS("dtype",e,t,n);return[r.oneHot(s,a,i,o,l)]}case"Ones":return[r.ones(gS("shape",e,t,n),gS("dtype",e,t,n))];case"OnesLike":return[r.onesLike(gS("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(gS("shape",e,t,n),gS("dtype",e,t,n),gS("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(gS("shape",e,t,n),gS("minval",e,t,n),gS("maxval",e,t,n),gS("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(gS("shape",e,t,n),gS("minval",e,t,n),gS("maxval",e,t,n),gS("seed",e,t,n))];case"Range":{const s=gS("start",e,t,n),a=gS("stop",e,t,n),i=gS("step",e,t,n);return[r.range(s,a,i,gS("dtype",e,t,n))]}case"TruncatedNormal":{const s=gS("shape",e,t,n),a=gS("mean",e,t,n),i=gS("stdDev",e,t,n),o=gS("seed",e,t,n);return[r.truncatedNormal(s,a,i,gS("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(gS("shape",e,t,n),gS("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(gS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=G)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=p_(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=p_(e,t,n),u=gS("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=p_(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,l)]}case"Where":{const r=s.cast(gS("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(gS("x",e,t,n),gS("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"LowerBound":{const s=gS("sortedSequence",e,t,n),a=gS("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=gS("x",e,t,n),a=gS("k",e,t,n),i=gS("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=gS("sortedSequence",e,t,n),a=gS("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=gS("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=gS("x",e,t,n),a=gS("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"ResizeBilinear":{const s=gS("images",e,t,n),a=gS("size",e,t,n),i=gS("alignCorners",e,t,n),o=gS("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=gS("images",e,t,n),a=gS("size",e,t,n),i=gS("alignCorners",e,t,n),o=gS("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=gS("image",e,t,n),a=gS("boxes",e,t,n),i=gS("boxInd",e,t,n),o=gS("cropSize",e,t,n),l=gS("method",e,t,n),u=gS("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,l,u)]}case"ImageProjectiveTransformV3":{const s=gS("images",e,t,n),a=gS("transforms",e,t,n),i=gS("outputShape",e,t,n),o=gS("fillValue",e,t,n),l=gS("interpolation",e,t,n),u=gS("fillMode",e,t,n);return[r.image.transform(s,a,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=gS("default",e,t,n);return[yS(e.name,t,n)||s];case"Placeholder":return[yS(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[kS(gS("x",e,t,n))];case"IdentityN":return gS("x",e,t,n).map((e=>kS(e)));case"Shape":return[r.tensor1d(gS("x",e,t,n).shape,"int32")];case"ShapeN":return gS("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(gS("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(gS("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=gS("x",e,t,n),i=gS("data",e,t,n),o=gS("message",e,t,n),l=gS("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Equal":return[r.equal(gS("a",e,t,n),gS("b",e,t,n))];case"NotEqual":return[r.notEqual(gS("a",e,t,n),gS("b",e,t,n))];case"Greater":return[r.greater(gS("a",e,t,n),gS("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(gS("a",e,t,n),gS("b",e,t,n))];case"Less":return[r.less(gS("a",e,t,n),gS("b",e,t,n))];case"LessEqual":return[r.lessEqual(gS("a",e,t,n),gS("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(gS("a",e,t,n),gS("b",e,t,n))];case"LogicalNot":return[r.logicalNot(gS("a",e,t,n))];case"LogicalOr":return[r.logicalOr(gS("a",e,t,n),gS("b",e,t,n))];case"Select":case"SelectV2":return[r.where(gS("condition",e,t,n),gS("a",e,t,n),gS("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(gS("a",e,t,n),gS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(gS("a",e,t,n),gS("b",e,t,n),gS("transposeA",e,t,n),gS("transposeB",e,t,n))];case"Einsum":return[r.einsum(gS("equation",e,t,n),...gS("tensors",e,t,n))];case"Transpose":return[r.transpose(gS("x",e,t,n),gS("perm",e,t,n))];case"_FusedMatMul":const[s,a]=gS("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,l=gS("numArgs",e,t,n),u=gS("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=gS("args",e,t,n);return[r.fused.matMul({a:gS("a",e,t,n),b:gS("b",e,t,n),transposeA:gS("transposeA",e,t,n),transposeB:gS("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(gS("a",e,t,n),gS("numLower",e,t,n),gS("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(gS("x",e,t,n),gS("axis",e,t,n),gS("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(gS("x",e,t,n),gS("mean",e,t,n),gS("variance",e,t,n),gS("offset",e,t,n),gS("scale",e,t,n),gS("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(gS("x",e,t,n),gS("radius",e,t,n),gS("bias",e,t,n),gS("alpha",e,t,n),gS("beta",e,t,n))];case"Softmax":return[r.softmax(gS("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(gS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(gS("paramsNestedSplits",e,t,n),gS("paramsDenseValues",e,t,n),gS("indices",e,t,n),gS("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(gS("starts",e,t,n),gS("limits",e,t,n),gS("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(gS("shape",e,t,n),gS("values",e,t,n),gS("defaultValue",e,t,n),gS("rowPartitionTensors",e,t,n),gS("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Max":{const s=gS("axis",e,t,n),a=gS("keepDims",e,t,n);return[r.max(gS("x",e,t,n),s,a)]}case"Mean":{const s=gS("axis",e,t,n),a=gS("keepDims",e,t,n);return[r.mean(gS("x",e,t,n),s,a)]}case"Min":{const s=gS("axis",e,t,n),a=gS("keepDims",e,t,n);return[r.min(gS("x",e,t,n),s,a)]}case"Sum":{const s=gS("axis",e,t,n),a=gS("keepDims",e,t,n);return[r.sum(gS("x",e,t,n),s,a)]}case"All":{const s=gS("axis",e,t,n),a=gS("keepDims",e,t,n);return[r.all(gS("x",e,t,n),s,a)]}case"Any":{const s=gS("axis",e,t,n),a=gS("keepDims",e,t,n);return[r.any(gS("x",e,t,n),s,a)]}case"ArgMax":{const s=gS("axis",e,t,n);return[r.argMax(gS("x",e,t,n),s)]}case"ArgMin":{const s=gS("axis",e,t,n);return[r.argMin(gS("x",e,t,n),s)]}case"Prod":{const s=gS("axis",e,t,n),a=gS("keepDims",e,t,n);return[r.prod(gS("x",e,t,n),s,a)]}case"Cumprod":{const s=gS("axis",e,t,n),a=gS("exclusive",e,t,n),i=gS("reverse",e,t,n);return[r.cumprod(gS("x",e,t,n),s,a,i)]}case"Cumsum":{const s=gS("axis",e,t,n),a=gS("exclusive",e,t,n),i=gS("reverse",e,t,n);return[r.cumsum(gS("x",e,t,n),s,a,i)]}case"Bincount":const s=gS("x",e,t,n),a=gS("weights",e,t,n),i=gS("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=gS("x",e,t,n),a=gS("weights",e,t,n),i=gS("size",e,t,n),o=gS("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=gS("n",e,t,n),a=gS("axis",e,t,n);let i=gS("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=gS("x",e,t,n),a=gS("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=gS("axis",e,t,n),a=gS("batchDims",e,t,n),i=gS("x",e,t,n),o=gS("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=gS("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=gS("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=gS("axis",e,t,n),a=gS("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=gS("begin",e,t,n),a=gS("size",e,t,n);return[r.slice(gS("x",e,t,n),s,a)]}case"StridedSlice":{const s=gS("begin",e,t,n),a=gS("end",e,t,n),i=gS("strides",e,t,n),o=gS("beginMask",e,t,n),l=gS("endMask",e,t,n),u=gS("ellipsisMask",e,t,n),c=gS("newAxisMask",e,t,n),h=gS("shrinkAxisMask",e,t,n),p=gS("x",e,t,n);return[r.stridedSlice(p,s,a,i,o,l,u,c,h)]}case"Pack":return hi((()=>{const s=gS("axis",e,t,n),a=gS("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,l=a.map((e=>{const t=pe(e.shape,i);if(!t&&!pe(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,s)]}));case"Unpack":{const s=gS("axis",e,t,n),a=gS("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=gS("reps",e,t,n);return[r.tile(gS("x",e,t,n),s)]}case"Split":case"SplitV":{const s=gS("axis",e,t,n),a=gS("numOrSizeSplits",e,t,n),i=gS("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=gS("indices",e,t,n),a=gS("values",e,t,n),i=gS("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=gS("x",e,t,n),a=gS("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=gS("sparseIndices",e,t,n),a=gS("outputShape",e,t,n),i=gS("sparseValues",e,t,n),o=gS("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=gS("indices",e,t,n),a=gS("values",e,t,n),i=gS("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(gS("indices",e,t,n),gS("values",e,t,n),gS("denseShape",e,t,n),gS("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(gS("inputIndices",e,t,n),gS("inputShape",e,t,n),gS("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(gS("data",e,t,n),gS("indices",e,t,n),gS("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(gS("data",e,t,n),gS("indices",e,t,n),gS("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"FFT":return[r.fft(gS("x",e,t,n))];case"IFFT":return[r.ifft(gS("x",e,t,n))];case"RFFT":return[r.rfft(gS("x",e,t,n))];case"IRFFT":return[r.irfft(gS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(gS("input",e,t,n),gS("pattern",e,t,n),gS("rewrite",e,t,n),gS("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(gS("data",e,t,n),gS("dataSplits",e,t,n),gS("separator",e,t,n),gS("nGramWidths",e,t,n),gS("leftPad",e,t,n),gS("rightPad",e,t,n),gS("padWidth",e,t,n),gS("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(gS("input",e,t,n),gS("delimiter",e,t,n),gS("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(gS("input",e,t,n),gS("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Cast":return[r.cast(gS("x",e,t,n),gS("dtype",e,t,n))];case"ExpandDims":{const s=gS("axis",e,t,n);return[r.expandDims(gS("x",e,t,n),s)]}case"Squeeze":{const s=gS("axis",e,t,n);return[r.squeeze(gS("x",e,t,n),s)]}case"Reshape":return[r.reshape(gS("x",e,t,n),gS("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(gS("x",e,t,n),gS("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(gS("x",e,t,n),gS("padding",e,t,n),gS("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(gS("x",e,t,n),gS("padding",e,t,n),gS("constantValue",e,t,n))];case"SpaceToBatchND":{const s=gS("blockShape",e,t,n),a=gS("paddings",e,t,n);return[r.spaceToBatchND(gS("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=gS("blockShape",e,t,n),a=gS("crops",e,t,n);return[r.batchToSpaceND(gS("x",e,t,n),s,a)]}case"DepthToSpace":{const s=gS("blockSize",e,t,n),a=gS("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(gS("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(gS("x",e,t,n),gS("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(gS("s0",e,t,n),gS("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=gS("keyDType",e,t,n),a=gS("valueDType",e,t,n),i=new d_(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=gS("tableHandle",e,t,n,r),a=gS("keys",e,t,n),i=gS("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=gS("tableHandle",e,t,n,r),a=gS("keys",e,t,n),i=gS("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=gS("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=fS(e.op);if(a&&a.customExecutor)return a.customExecutor(new s_(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return je(a)?a.then((e=>[].concat(e))):[].concat(a)}class m_{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function g_(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>vS(e)[0])));r=r||[];const c=new Set(r.map((e=>vS(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(v_(e)||T_(e)||k_(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}class y_ extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const b_=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),x_=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),w_=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function v_(e){return b_.has(e.op)}function T_(e){return x_.has(e.op)}function k_(e){return w_.has(e.op)}class I_{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new I_(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=g_(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=function(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>vS(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...s,...e.weights,...a]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),h={};for(const e of u){h[e.name]=h[e.name]||0;for(const t of e.children)i(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1}const p=Object.entries(h).filter((([,e])=>0===e)).map((([e])=>e)),d=[...p];for(;p.length>0;){const e=p.pop(),t=c.get(e);for(const e of t.children.filter(i))0==--h[e.name]&&(d.push(e.name),p.push(e.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!s.has(e.name)&&(s.add(e.name),r.push(e.name))}return e.filter((e=>s.has(e.name)))}(d.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"==typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(i)){if(!n.has(e.name))throw new y_(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new y_(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!s(t))for(const e of t.inputs){if(!n.has(e.name))throw new y_(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new y_(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>v_(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let t=0;t<e.length;++t){const r=a[t];if(r===n)continue;const s=e[t],o=e[r];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(s)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return di(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[vS(e)[0]])),s=t.map((e=>vS(e)[0])),a=new Set(s);let i=s.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const u={},c={};return hi((()=>{const n=new m_(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=vS(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))}));const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(r[e.name])continue;const t=f_(e,r,n,this._resourceManager);if(je(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>yS(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!v_(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(v_(e))continue;const t=bS(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return v_(e)||s.has(e.name)}if(!v_(e)&&null!=a)for(const e of a){if(i(e))continue;const s=bS(e.name,t,n);for(const e of s)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new m_(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>yS(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[vS(e)[0]])),i=n.map((e=>vS(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:h,syncInputs:p}=g_(e,l,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=vS(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){const e=this.processStack(a,d,t,f,y,g,o,m,u);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!v_(e)&&!yS(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&gS("isConstant",e.node,r,n)&&([c]=xS(e.node.name,n)),null==r[e.node.name]){const h=f_(e.node,r,n,this._resourceManager);c||([c]=xS(e.node.name,n));const p=n.currentContext;je(h)?u.push(h.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=xS(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!yS(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!yS(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=vS(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;ie(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&ie(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=vS(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=vS(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class S_{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const __="?tfjs-format=file",N_="model.json";class E_{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=l){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new S_}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return je(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Ai(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new I_(WS.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=WS.Instance.transformGraph(e.modelInitializer);this.initializer=new I_(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof ga?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof ga||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&pi(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function $_(e,t={},n=l){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${N_}${__}`}(e));const r=new E_(e,t,n);return await r.load(),r}function C_(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");t=Cl(Li(n,Ui(n.weightsManifest),r))}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=Cl(e)}const n=new E_(t);return n.load(),n}const A_="4.17.0";function O_(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(M_(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=O_(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function D_(e,t=F_){return R_(e,t)}function R_(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(M_(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=R_(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function F_(e){return null===e?null:M_(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function P_(e,t){const n=new Map;O_(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(je(t)){const r=await t;n.set(e,r)}}return O_(e,t,n)}function M_(e){let t=!1;if(Xe().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ga)&&!(e instanceof Promise)&&!t)}function L_(e){return e instanceof ga?{value:e.clone(),recurse:!1}:M_(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class z_{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class B_ extends z_{constructor(){super(B_.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function U_(e){return new G_(e)}function V_(e){return new j_(e)}B_.INITIAL_CAPACITY=32;class W_{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new J_(this,e)}filter(e){return new Y_(this,e)}map(e){return new Z_(this,e)}mapAsync(e){return new Q_(this,e)}serialMapAsync(e){return new Q_(this,e).serial()}flatmap(e){return new tN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new X_(this,e,t)}columnMajorBatch(e,t=!0,n=F_){return this.rowMajorBatch(e,t).map((e=>D_(e,n)))}concatenate(e,t){return new nN(U_([this,e]),t)}take(e){return e<0||null==e?this:new K_(this,e)}skip(e){return e<0||null==e?this:new q_(this,e)}prefetch(e){return new aN(this,e)}shuffle(e,t){return new iN(this,e,t)}serial(){return new H_(this)}}class G_ extends W_{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return O_(e,t)}(t,L_)),done:!1};var t}}class j_ extends W_{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class H_ extends W_{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class q_ extends W_{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;pi(e.value)}return this.upstream.next()}}class K_ extends W_{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class X_ extends W_{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Y_ extends W_{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;pi(e.value)}}}class Z_ extends W_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Oa(e.value),n=this.transform(e.value),r=Oa(n);for(const e of t)Aa(e,r)||e.dispose();return{value:n,done:!1}}}class J_ extends W_{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Q_ extends W_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Oa(e.value),n=await this.transform(e.value),r=Oa(n);for(const e of t)Aa(e,r)||e.dispose();return{value:n,done:!1}}}class eN extends W_{constructor(){super(),this.outputQueue=new B_,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class tN extends eN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Oa(e.value),n=this.transform(e.value),r=Oa(n);this.outputQueue.pushAll(n);for(const e of t)Aa(e,r)||e.dispose();return!0}}class nN extends W_{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var rN;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(rN||(rN={}));class sN extends W_{constructor(e,t=rN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await P_(this.iterators,(function(e){return e instanceof W_?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case rN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case rN.SHORTEST:return{value:null,done:!0};case rN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class aN extends W_{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new z_(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class iN extends aN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=xp.alea(n||Xs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class oN{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ie(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),lN((async()=>(await n.iterator()).columnMajorBatch(e,t,hN)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,lN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,lN((async()=>(await t.iterator()).filter((t=>hi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return lN((async()=>(await t.iterator()).map((t=>hi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return lN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return lN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,lN((async()=>{return n=V_((async()=>({value:await t.iterator(),done:!1}))).take(e),new nN(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,lN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=xp.alea(t||Xs().toString());return lN((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,lN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function lN(e,t=null){return new class extends oN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function uN(e){return lN((async()=>U_(e)),e.length)}function cN(e){if(!M_(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return lN((async()=>function(e,t=rN.FAIL){return new sN(e,t)}(await P_(e,(e=>{if(e instanceof oN)return{value:e.iterator(),recurse:!1};if(M_(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),rN.SHORTEST)),t)}function hN(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof ga||Qs(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ga?rd(e):ei(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}oN.MAX_BUFFER_SIZE=1e4;class pN extends oN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const dN='"',fN=Symbol("out"),mN=Symbol("field"),gN=Symbol("quote"),yN=Symbol("quoteafterquote"),bN=Symbol("quoteinquote");class xN extends oN{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ie(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(ie(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new pN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ie(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[s];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[a]=l:n[a]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=fN;for(let t=0;t<s;t++)switch(a){case fN:switch(e.charAt(t)){case dN:r=t+1,a=gN;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=fN;break;default:a=mN,r=t}break;case mN:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),a=fN,r=t+1);break;case gN:e.charAt(t)===dN&&(a=yN);break;case yN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),a=fN,r=t+1;break;case dN:a=gN;break;default:a=bN}break;case bN:e.charAt(t)===dN&&(a=gN)}if(a===yN?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class wN extends W_{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Xe().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new wN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ue(t));return n.set(e,n.length-e.length),ei(n,t)}}class vN extends W_{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=od([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=ld([r,n,a,s],[1,4])}else this.cropBox=ld([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Xe().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new vN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ie("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Kl(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return hi((()=>{const t=mh(_o(e,"float32"),0);let n;n=Lf.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return oc(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class TN{}class kN extends W_{split(e){return new IN(this,e)}}class IN extends kN{constructor(e,t){super(),this.upstream=e,this.impl=new SN(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class SN extends eN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class _N extends W_{decodeUTF8(){return new NN(this)}}class NN extends kN{constructor(e){super(),this.upstream=e,this.impl=new EN(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class EN extends eN{constructor(e){if(super(),this.upstream=e,Xe().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(530);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Xe().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class $N extends _N{constructor(e,t={}){super(),this.file=e,this.options=t,ie(e instanceof Uint8Array||!!Xe().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await e,done:!1}}}function CN(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class AN extends TN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(CN(this.input)&&Xe().get("IS_NODE")){const e=n(108);this.input=e.readFileSync(this.input.slice(7))}return new $N(this.input,this.options)}}class ON extends TN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return CN(this.url)?new AN(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,s;var a;"string"==typeof e?r=e:(r=e.url,s={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const i=await(n||Ys)(r,s);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new $N(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function DN(e,t={}){return new xN(new ON(e),t)}function RN(e){const t=V_(e);return lN((async()=>t))}function FN(e){return lN((async()=>{const t=await e();return V_((()=>t.next()))}))}async function PN(e,t){return vN.create(e,t)}async function MN(e){return wN.create(e)}const LN="4.17.0";function zN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ie("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const BN=wd;class UN extends Y{nextDataId(){return UN.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new X(this,li())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Xe().get("IS_NODE")&&xs("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const s=n.map((e=>Zs(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?mm(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):Le(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Js(e)));return So(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return So(e.shape,e.dtype,t)}makeOutput(e,t,n){return li().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Xs();return e(),{kernelMs:Xs()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){zN([e],"where");const t=this.readSync(e.dataId);return BN(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function VN(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}UN.nextDataId=0;const WN={kernelName:et,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;zN(t,"abs");let r=new Float32Array(ue(t.shape));return r=VN(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function GN(e){return(t,n,r,s,a)=>{const i=il(t,n),o=i.length,l=Fe(i),u=Te(a,ue(i)),c=t.length,h=n.length,p=Fe(t),d=Fe(n),f=sl(t,i),m=sl(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=Ge(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=We(a,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=We(g,h,d);u[t]=e(r[i],s[y])}return[u,i]}}function jN(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const HN={kernelName:Nt,backendName:"cpu",kernelFunc:jN};function qN(e,t,n="float32"){if("complex64"===n)return jN({inputs:{real:qN(e,t,"float32"),imag:qN(e,t,"float32")},backend:e});const r=Be(ue(t),n);return e.makeTensorInfo(t,n,r)}function KN(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const XN={kernelName:yn,backendName:"cpu",kernelFunc:KN};function YN(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const ZN={kernelName:mr,backendName:"cpu",kernelFunc:YN};function JN(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=Ks([0],n),[s,a]=GN(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function QN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return KN({inputs:{x:s},backend:n});const e=qN(n,s.shape,s.dtype),t=QN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=jN({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=YN({inputs:{input:s},backend:n}),t=QN({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!_e(s.dtype,a)){const e=KN({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,l,u]=JN(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,l,u)}const eE={kernelName:It,backendName:"cpu",kernelFunc:QN};function tE(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;zN([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?Xm(l):l,h="string"===a.dtype?Xm(u):u,p=r||a.dtype,[d,f]=t(a.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=QN({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=QN({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=jN({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function nE(e){return(t,n,r,s,a,i)=>{const o=il(t,n),l=ue(o),u=o.length,c=Fe(o),h=Te("float32",l),p=Te("float32",l),d=sl(t,o),f=sl(n,o),m=mm(r,s),g=mm(a,i),y=t.length,b=Fe(t),x=n.length,w=Fe(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,p[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Ge(t,u,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const s=We(r,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=We(a,x,w),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const rE=GN(((e,t)=>e+t)),sE=nE(((e,t,n,r)=>({real:e+n,imag:t+r}))),aE=tE(rt,rE,sE),iE={kernelName:rt,backendName:"cpu",kernelFunc:aE};function oE(e,t,n,r,s){const a=ue(r),i=Be(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function lE(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=So([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const uE=GN(((e,t)=>e&t)),cE=tE(vt,uE),hE={kernelName:vt,backendName:"cpu",kernelFunc:cE};function pE(e){return(t,n,r)=>{const s=ke(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function dE(e,t,n){return fE(e,pE(t),n)}function fE(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;zN(i,e);const o=a,l=o.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Xm(l)}else u=l;const c=n||i.dtype,h=t(u,c,s);return o.makeTensorInfo(i.shape,c,h)}}const mE=pE((e=>Math.ceil(e))),gE=fE(St,mE),yE={kernelName:St,backendName:"cpu",kernelFunc:gE};function bE(e,t,n,r){const s=ke(n,ue(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ue(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Xm(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}const xE=GN(((e,t)=>e===t?1:0)),wE=tE(nn,xE,null,"bool"),vE={kernelName:nn,backendName:"cpu",kernelFunc:wE},TE=pE((e=>Math.exp(e))),kE=fE(rn,TE,"float32"),IE={kernelName:rn,backendName:"cpu",kernelFunc:kE},SE=pE((e=>Math.expm1(e))),_E=fE(an,SE),NE={kernelName:an,backendName:"cpu",kernelFunc:_E},EE=pE((e=>Math.floor(e))),$E=fE(cn,EE),CE={kernelName:cn,backendName:"cpu",kernelFunc:$E},AE=GN(((e,t)=>Math.floor(e/t))),OE=tE(hn,AE,null,"int32"),DE={kernelName:hn,backendName:"cpu",kernelFunc:OE};function RE(e,t,n,r,s,a,i,o,l){const u=So([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}function FE(e,t,n){const r=So(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const PE=GN(((e,t)=>e>t?1:0)),ME=tE(mn,PE,null,"bool"),LE={kernelName:mn,backendName:"cpu",kernelFunc:ME},zE=GN(((e,t)=>e>=t?1:0)),BE=tE(gn,zE,null,"bool"),UE={kernelName:gn,backendName:"cpu",kernelFunc:BE},VE=GN(((e,t)=>e<t?1:0)),WE=tE(In,VE,null,"bool"),GE={kernelName:In,backendName:"cpu",kernelFunc:WE},jE=GN(((e,t)=>e<=t?1:0)),HE=tE(Sn,jE,null,"bool"),qE={kernelName:Sn,backendName:"cpu",kernelFunc:HE};function KE(e,t,n){const r=(t-e)/(n-1),s=Be(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const XE=pE((e=>Math.log(e))),YE=fE(Nn,XE),ZE={kernelName:Nn,backendName:"cpu",kernelFunc:YE};function JE(e,t,n,r){const s=Te(r,ue(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}const QE=GN(((e,t)=>Math.max(e,t))),e$=tE(zn,QE),t$={kernelName:zn,backendName:"cpu",kernelFunc:e$},n$=GN(((e,t)=>Math.min(e,t))),r$=tE(qn,n$),s$={kernelName:qn,backendName:"cpu",kernelFunc:r$},a$=GN(((e,t)=>e*t)),i$=nE(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),o$=tE(Zn,a$,i$),l$={kernelName:Zn,backendName:"cpu",kernelFunc:o$};function u$(e,t,n){const r=qs(-1,n);return a$([],t,r,e,n)}const c$={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;zN(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=u$(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},h$=GN(((e,t)=>e!==t?1:0)),p$=tE(Qn,h$,null,"bool"),d$={kernelName:Qn,backendName:"cpu",kernelFunc:p$};function f$(e,t,n,r,s){const a=t.length,i=ue(t),o=Fe(t),l=Fe(s),u=Te(n,ue(s));for(let t=0;t<i;++t){const n=Ge(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[We(s,a,l)]=e[t]}return u}function m$(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;zN(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=f$(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const g$={kernelName:os,backendName:"cpu",kernelFunc:m$};function y$(e,t,n,r){const[s,a]=nh(e,r),i=Sa(t,"int32"),o=Be(ue(s),i),l=ue(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const b$={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;zN(s,"prod");const o=s.shape.length,l=we(a,s.shape),u=ah(l,o);let c=l,h=s;const p=[];null!=u&&(h=m$({inputs:{x:s},backend:n,attrs:{perm:u}}),p.push(h),c=oh(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=y$(h.shape,h.dtype,d,c);let y=m;return i&&(y=rh(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function x$(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function w$(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=Ge(r,t.length,Fe(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[i];for(let e=i;e<l;++e)o[s].push(r[e+1]+t)}i=r[i],l=r[l]}l!==i&&(s.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:s,numValues:a}}(a,i,e,l),p=function(e){const t=[];for(let n=0;n<e.length;++n){const r=ke("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),d=function(e,t,n,r,s){const a=t.slice();a[0]=s;const i=ke(n,ue(a)),o=e.length;return function(e,t,n,r,s,a){const i=x$(t,2)[1],o=x$(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[l*o+t]=e[n*i+t];++l}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}(n,r,s,c,h);return[p,d[0],d[1]]}const v$=2147483647;function T$(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],p=ke("int32",h+1);p[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=l?r[0]:r[t],i=u?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>v$)throw new Error(`Requires ((limit - start) / delta) <= ${v$}`);p[t+1]=p[t]+c}const d=ke(n,p[h]);let f=0;for(let t=0;t<h;++t){const n=p[t+1]-p[t];let r=o?e[0]:e[t];const s=u?a[0]:a[t];for(let e=0;e<n;++e)d[f++]=r,r+=s}return[p,d]}var k$=Kf;class I${constructor(e,t,n,r,s,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Yf(u),this.raggedRank=Zf(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===k$.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===k$.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case k$.VALUE_ROWIDS:return I$.getMaxWidthValueRowID(t);case k$.ROW_SPLITS:return I$.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${k$[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return _$(e,n)}calculateOutputSize(e){const t=this.valuesShape;Jf(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Xf(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return ie(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case k$.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case k$.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${k$[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case k$.FIRST_DIM_SIZE:return e[0];case k$.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case k$.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${k$[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=_$(t,!1),s=ke(this.valuesDType,ue(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=ue(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;hi((()=>{const t=oc(u,e),n=kc(t,i);u=n.dataSync()}))}let c=0,h=0,p=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==p){if(h<p){const e=s.subarray(c*o);S$(a.subarray(h*o),e,(p-h)*o)}if(e>=l){const e=n.length;r=Math.floor(e/o)}if(r>p)if(1===this.defaultValue.length)a.subarray(p*o,r*o).fill(this.defaultValue[0]),p=r;else for(;r>p;)S$(a.slice(p*o),u,o),++p;r<0?(c=e+1,h=p):(c=e,h=p,p=h+1)}else++p}}}function S$(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function _$(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function N$(e,t,n,r,s,a,i,o,l,u){return new I$(e,t,n,r,s,a,i,o,l,u).compute()}function E$(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Be(0,r);const s=Be(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const $$=pE((e=>1/Math.sqrt(e))),C$=fE(_r,$$),A$={kernelName:_r,backendName:"cpu",kernelFunc:C$};function O$(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,p=t.values;if(0===r)return So(n,t.dtype);const d=l instanceof pa?l:So(c,t.dtype);"string"==typeof l||"number"==typeof l?d.values.fill(l):"boolean"==typeof l&&d.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?d.values[l*s+n]+=p[e*s+n]:d.values[l*s+n]=0===t.rank?p[0]:p[e*s+n]}return d}const D$=pE((e=>1/(1+Math.exp(-e)))),R$=dE(Pr,(e=>1/(1+Math.exp(-e)))),F$={kernelName:Pr,backendName:"cpu",kernelFunc:R$};function P$(e,t,n,r,s){const a=du(r,t,n),i=ue(n),o=Fe(r);if(a){const n=fu(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=So(r,s,"string"===s?Xm(e):e),u=So(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?Ym(u.values):u.values}function M$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;zN(s,"slice");const[o,l]=mu(s,a,i);tu(s,o,l);const u=P$(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const L$={kernelName:Or,backendName:"cpu",kernelFunc:M$};function z$(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Rm(o));return[ke(n,0),[0,h],ke(s,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(Fm(t,n));if(n>=l)throw new Error(Pm(t,n,l));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=ke(n,t*h),p=ke(s,t),d=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=d[n],i=(0===n?0:f[n-1])+s;d[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];p[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=i}return[a,[t,h],p,u,c]}}function B$(e,t,n,r,s){const a=ue(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Mm(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Lm(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(Bm(r,l));l[c]=e}if(ue(l)!==a)throw new Error(Um(r,l));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*l[e+1]}const f=ke(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[i,o],l]}function U$(e,t,n,r,s,a=!1,i=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=ke(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=s[d];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Gm(g,c));g>m&&p.fill(i,m*u,g*u);for(let t=d;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(jm(t,r[t],l[0]));for(let t=0;t<u;t++)p[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)p[g*u+e]/=f-d;if(d=f,++f,m=g+1,g=t,f>o)break}return m<c&&p.fill(i,m*u,c*u),[p,h]}const V$=pE((e=>Math.sqrt(e))),W$=dE(Lr,(e=>Math.sqrt(e))),G$={kernelName:Lr,backendName:"cpu",kernelFunc:W$},j$=GN(((e,t)=>{const n=e-t;return n*n})),H$=tE(Kr,j$),q$={kernelName:Kr,backendName:"cpu",kernelFunc:H$},K$=pE(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),X$=fE(Yr,K$),Y$={kernelName:Yr,backendName:"cpu",kernelFunc:X$};function Z$(e,t,n,r){const s=So(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}class J${constructor(e,t,n,r,s,a){this.separator=Zs(e),this.nGramWidths=t,this.leftPad=Zs(n),this.rightPad=Zs(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=ke("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,l,a),s+=l})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,r,i,s,l,o)}}return[i,a]}}function Q$(e,t,n,r,s,a,i,o){return new J$(n,r,s,a,i,o).compute(e,t)}function eC(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function tC(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;eC(e[l],t,n,s);const u=s.length-r;o[l]=u,a+=u,i=Math.max(i,u)}const l=ke("int32",2*a),u=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=s[h],++h;return[l,u,c]}function nC(e,t){const n=ke("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Hs(e[r]).modulo(t).getLowBitsUnsigned();return n}const rC=GN(((e,t)=>e-t)),sC=nE(((e,t,n,r)=>({real:e-n,imag:t-r}))),aC=tE(ts,rC,sC),iC={kernelName:ts,backendName:"cpu",kernelFunc:aC};function oC(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=So(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const lC=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function uC(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);uC(e,t,Math.max(n,Math.floor(t-a*o/s+l)),Math.min(r,Math.floor(t+(s-a)*o/s+l)))}const s=e[t];let a=n,i=r;for(ne(e,n,t),lC(e[r],s)>0&&ne(e,n,r);a<i;){for(ne(e,a,i),a++,i--;lC(e[a],s)<0;)a+=1;for(;lC(e[i],s)>0;)i-=1}0===lC(e[n],s)?ne(e,n,i):(i+=1,ne(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function cC(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=Te(n,i*r),u=Te("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(uC(i,r),i=i.slice(0,r)),s&&i.sort(lC);const c=t*r,h=l.subarray(c,c+r),p=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[So(c,n,l),So(c,"int32",u)]}function hC(e,t,n,r){const s=we(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i=new Map,o=new Int32Array(n[s]),l=new pa(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}const r=i.get(n);if(null!=r)o[t]=r;else{const e=i.size;i.set(n,e),o[t]=e,u.push(t)}}const h=a.slice();h[1]=i.size;const p=new pa(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(l.get(n,e,r),n,t,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const pC="4.17.0";vi("cpu",(()=>new UN),1);const dC=dE(Qt,(e=>e>=0?e:Math.exp(e)-1)),fC={kernelName:Qt,backendName:"cpu",kernelFunc:dC};function mC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;zN([s],"leakyRelu");const i=ue(s.shape),o=n.data.get(s.dataId).values,l=Te("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const gC={kernelName:kn,backendName:"cpu",kernelFunc:mC},yC=GN(((e,t)=>e<0?t*e:e));function bC(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;zN([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=yC(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const xC={kernelName:ur,backendName:"cpu",kernelFunc:bC},wC=dE(yr,(e=>Math.max(0,e))),vC={kernelName:yr,backendName:"cpu",kernelFunc:wC},TC=dE(kr,(e=>Math.min(Math.max(0,e),6))),kC={kernelName:kr,backendName:"cpu",kernelFunc:TC};function IC(e,t,n,r,s){if("linear"===n)return KN({inputs:{x:t},backend:e});if("relu"===n)return wC({inputs:{x:t},backend:e});if("elu"===n)return dC({inputs:{x:t},backend:e});if("relu6"===n)return TC({inputs:{x:t},backend:e});if("prelu"===n)return bC({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return mC({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return R$({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function SC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=ue(s.shape),o=xe(a,i),l=ue(o);ie(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const _C={kernelName:br,backendName:"cpu",kernelFunc:SC};function NC(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;zN([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=i?s.shape[l-1]:s.shape[l-2],d=o?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=ue(f),y=ue(m),b=il(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);ie(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=SC({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=SC({inputs:{x:a},backend:n,attrs:{shape:x}}),T=i?w.shape[1]:w.shape[2],k=i?w.shape[2]:w.shape[1],I=o?v.shape[1]:v.shape[2],S=Math.max(g,y),_=n.data.get(w.dataId).values,N=n.data.get(v.dataId).values,E=Fe(w.shape),$=Fe(v.shape),[C,A,O]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,R,F]=o?[1,$[1],$[0]]:[$[1],1,$[0]],P=k*I,M=So([S,k,I],w.dtype),L=M.values,z=n.blockSize;for(let e=0;e<S;e++){const t=e%g,n=e%y;for(let r=0;r<k;r+=z){const s=Math.min(r+z,k);for(let a=0;a<I;a+=z){const i=Math.min(a+z,I);for(let o=0;o<T;o+=z){const l=Math.min(o+z,T);for(let u=r;u<s;u++)for(let r=a;r<i;r++){let s=0;for(let e=o;e<l;e++)s+=_[t*C+u*A+e*O]*N[e*D+r*R+n*F];L[e*P+(u*I+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,M.dtype,M.values)}const EC={kernelName:bt,backendName:"cpu",kernelFunc:NC},$C={kernelName:gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=NC({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=aE({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=IC(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}},CC=dE(tt,(e=>Math.acos(e))),AC={kernelName:tt,backendName:"cpu",kernelFunc:CC},OC=dE(nt,(e=>Math.acosh(e))),DC={kernelName:nt,backendName:"cpu",kernelFunc:OC},RC={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;zN(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=So(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}},FC={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;zN(s,"all");const o=we(a,s.shape);let l=o;const u=ah(l,s.shape.length);let c=s;null!=u&&(c=m$({inputs:{x:s},backend:n,attrs:{perm:u}}),l=oh(l.length,s.shape.length)),sh("all",l,c.shape.length);const[h,p]=nh(c.shape,l),d=ue(p),f=Be(ue(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=SC({inputs:{x:g},backend:n,attrs:{shape:rh(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},PC={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;zN(s,"any");const o=we(a,s.shape);let l=o;const u=ah(l,s.shape.length);let c=s;null!=u&&(c=m$({inputs:{x:s},backend:n,attrs:{perm:u}}),l=oh(l.length,s.shape.length)),sh("any",l,c.shape.length);const[h,p]=nh(c.shape,l),d=ue(p),f=Be(ue(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=SC({inputs:{x:g},backend:n,attrs:{shape:rh(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},MC={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;zN(s,"argMax");let i=we(a,s.shape);const o=ah(i,s.shape.length);let l=s;const u=[];null!=o&&(l=m$({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=oh(i.length,l.shape.length)),i=[i[0]],sh("argMax",i,l.shape.length);const[c,h]=nh(l.shape,i),p=Be(ue(c),"int32"),d=ue(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const s=f[t+e];s>n&&(n=s,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},LC={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;zN(s,"argMin");let i=we(a,s.shape);const o=ah(i,s.shape.length);let l=s;const u=[];null!=o&&(l=m$({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=oh(i.length,l.shape.length)),i=[i[0]],sh("argMin",i,l.shape.length);const[c,h]=nh(l.shape,i),p=Be(ue(c),"int32"),d=ue(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const s=f[t+e];s<n&&(n=s,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},zC=dE(ut,(e=>Math.asin(e))),BC={kernelName:ut,backendName:"cpu",kernelFunc:zC},UC=dE(ct,(e=>Math.asinh(e))),VC={kernelName:ct,backendName:"cpu",kernelFunc:UC},WC=dE(ht,(e=>Math.atan(e))),GC={kernelName:ht,backendName:"cpu",kernelFunc:WC},jC=GN(((e,t)=>Math.atan2(e,t))),HC=tE(dt,jC),qC={kernelName:dt,backendName:"cpu",kernelFunc:HC},KC=dE(pt,(e=>Math.atanh(e))),XC={kernelName:pt,backendName:"cpu",kernelFunc:KC};function YC(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=So(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const w=y*i-p,v=Math.max(0,w),T=Math.min(s.inHeight,c+w),k=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<T;n+=l){const s=m+n*r[1];for(let n=c;n<p;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[k+n*x+t]="avg"===a?b/w:y}}}return m}function ZC(e,t,n,r,s=!1,a=!1){const i=So(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=So(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>w&&(w=u,v=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+l)}}i.set(v,e,n,o,t)}}return i}function JC(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=So(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outDepth;++v){const S=v*i-m;let _=S;for(;_<0;)_+=u;const N=Math.min(s.inDepth,p+S),E=n+v*T;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(s.inHeight,d+i),v=E+n*k;for(let n=0;n<s.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(s.inWidth,f+i),g=v+n*I;let T=b,k=0,S=0;for(let n=_;n<N;n+=u){const s=x+n*r[1];for(let n=p;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<d;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>T?T=s:"avg"===a&&(k+=s,S++),isNaN(T))break}if(isNaN(T))break}if(isNaN(T))break}w[g+t]="avg"===a?k/Math.max(S,1):T}}}}return x}const QC={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;zN(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ie(rc(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=qu(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&pe(u.inShape,u.outShape))c=KN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Fe(s.shape),r=YC(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},eA={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;zN(s,"avgPool3d");const c=Ku(s.shape,a,i,1,o,l,u),h=JC(n.data.get(s.dataId).values,s.shape,s.dtype,Fe(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},tA={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;zN([s,a],"avgPool3DGrad");const c=Ku(a.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,T=c.effectiveFilterWidth,k=w-1-c.padInfo.front,I=T-1-c.padInfo.left,S=v-1-c.padInfo.top,_=So(a.shape,"float32"),N=1/(f*m*g),E=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-k,i=r-S,o=s-I;let l=0;for(let n=0;n<w;n+=y){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const s=(i+n)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<T;n+=x){const a=(o+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=E.get(e,r,s,a,t))}}}_.set(l*N,e,n,r,s,t)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}},nA={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;zN([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=qu(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=So(i.shape,"float32"),T=1/(d*f),k=n.data.get(s.dataId).values,I=So(s.shape,"float32",k);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=I.get(e,r,s,t))}}v.set(i*T,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},rA={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;ie(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),zN([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,T=0,k=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*d[T++]/Math.sqrt(p[k++]+u),w>=g&&(w=0),v>=x&&(v=0),T>=y&&(T=0),k>=b&&(k=0);return n.makeTensorInfo(s.shape,s.dtype,m)}},sA={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;zN([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=nm(s.shape,a,o),u=rm(l.length,a.length),c=sm(s.shape,a,o),h=am(i,a.length),p=im(c,i,a.length),d=SC({inputs:{x:s},backend:n,attrs:{shape:l}}),f=m$({inputs:{x:d},backend:n,attrs:{perm:u}}),m=SC({inputs:{x:f},backend:n,attrs:{shape:c}}),g=M$({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},aA={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=oE(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},iA={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=il(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},oA=dE(_t,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),lA={kernelName:_t,backendName:"cpu",kernelFunc:oA},uA={kernelName:Et,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ue(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function cA(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const hA={kernelName:xn,backendName:"cpu",kernelFunc:cA};function pA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=we(s,t[0].shape)[0];Hf(t.map((e=>e.shape)),a);let i=qf(t.map((e=>e.shape)),a);if(0===ue(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ue(e.shape)>0));if(1===o.length)return KN({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>YN({inputs:{input:e},backend:n}))),t=o.map((e=>cA({inputs:{input:e},backend:n}))),r=pA({inputs:e,backend:n,attrs:{axis:a}}),s=pA({inputs:t,backend:n,attrs:{axis:a}}),i=jN({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=ue(e.shape.slice(a));return SC({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=qf(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=bE(u,i,t[0].dtype,c),p=qf(o.map((e=>e.shape)),a),d=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const dA={kernelName:$t,backendName:"cpu",kernelFunc:pA};function fA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;zN([s,a],"conv2d");const h=ac(l),p=Xu(s.shape,a.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new pa(p.outShape,s.dtype),v=Fe(s.shape),T=Fe(a.shape),k=v[0],I=x?v[1]:v[2],S=x?v[2]:1,_=x?1:v[1],N=w.strides[0],E=x?w.strides[1]:w.strides[2],$=x?w.strides[2]:1,C=x?1:w.strides[1],A=n.data.get(s.dataId).values,O=n.data.get(a.dataId).values,D=w.values;for(let e=0;e<p.batchSize;++e){const t=e*k,n=e*N;for(let e=0;e<p.outHeight;++e){const r=n+e*E,s=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const a=e*T[0],i=t+n*I;for(let e=0;e<p.outWidth;++e){const t=r+e*$,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const s=i+r*S;let o=a+e*T[1];for(let e=0;e<p.inChannels;++e){const n=A[s+e*_];for(let e=0;e<p.outChannels;++e)D[t+e*C]+=n*O[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const mA={kernelName:Ct,backendName:"cpu",kernelFunc:fA},gA={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;zN([s,a],"conv2dBackpropFilter");const h=ac(l),p=Xu(s.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new pa(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,T=n.data.get(a.dataId).values,k=new pa(s.shape,s.dtype,v),I=new pa(a.shape,a.dtype,T);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/d)),n=Math.min(p.outHeight,(p.inHeight+w-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-w;for(let e=s;e<a;++e){const n=r+e*f-x;l+=y?k.get(u,t,n,i)*I.get(u,c,e,o):k.get(u,i,t,n)*I.get(u,o,c,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},yA={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;zN([s,a],"conv2dBackpropInput");const h=Fe(a.shape),p=Fe(s.shape);let d=ac(u);const f=Xu(i,a.shape,o,1,l,c,!1,d),m=new pa(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:T,filterHeight:k,filterWidth:I,inChannels:S,inHeight:_,inWidth:N,outChannels:E,outHeight:$,outWidth:C,strideHeight:A,strideWidth:O}=f;d=f.dataFormat;const D=k-1-f.padInfo.top,R=I-1-f.padInfo.left,F="channelsLast"===d,P=m.strides[0],M=F?m.strides[1]:m.strides[2],L=F?m.strides[2]:1,z=F?1:m.strides[1],B=p[0],U=F?p[1]:p[2],V=F?p[2]:1,W=F?1:p[1];for(let e=0;e<T;++e)for(let t=0;t<S;++t)for(let n=0;n<_;++n){const r=n-D,s=Math.max(0,Math.ceil(r/A)),a=Math.min($,(k+r)/A);for(let i=0;i<N;++i){const o=i-R,l=Math.max(0,Math.ceil(o/O)),u=Math.min(C,(I+o)/O);let c=0;for(let n=s;n<a;++n){const s=n*A-r;for(let r=l;r<u;++r){const a=B*e+U*n+V*r,i=x*(k-1-s)+w*(I-1-(r*O-o))+v*t;for(let e=0;e<E;++e)c+=y[a+W*e]*b[i+e]}}g[P*e+M*n+L*i+z*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},bA={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;zN([s,a],"conv3d");const u=Yu(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new pa(u.outShape,s.dtype),v=n.data.get(s.dataId).values,T=n.data.get(a.dataId).values,k=w.values,I=Fe(s.shape),S=Fe(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*I[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*w.strides[1],s=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*d;if(n<0||n>=u.inDepth)continue;const a=e*S[0],i=t+n*I[1];for(let e=0;e<u.outHeight;++e){const t=r+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*S[1],o=i+r*I[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const a=s+e*S[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=v[i+e];for(let e=0;e<u.outChannels;++e)k[n+e]+=t*T[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},xA={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;zN([s,a],"conv3dBackpropFilterV2");const u=Fe(s.shape),c=Fe(a.shape),h=Yu(s.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new pa(h.filterShape,"float32"),x=b.values,[w,v,T,k]=b.strides,I=n.data.get(a.dataId).values,[S,_,N,E]=c,$=n.data.get(s.dataId).values,[C,A,O,D]=u,R=h.padInfo.front,F=h.padInfo.left,P=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((R-e)/p)),n=Math.min(h.outDepth,(h.inDepth+R-e)/p),r=e*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((P-s)/d)),i=Math.min(h.outHeight,(h.inHeight+P-s)/d),o=s*v+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((F-r)/f)),u=Math.min(h.outWidth,(h.inWidth+F-r)/f),c=r*T+o;for(let o=0;o<h.inChannels;++o){const m=o*k+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*C,y=m*S;for(let m=t;m<n;++m){const t=(e+m*p-R)*A+h,n=m*_+y;for(let e=a;e<i;++e){const a=(s+e*d-P)*O+t,i=e*N+n;for(let e=l;e<u;++e){const t=e*E+i;g+=$[(r+e*f-F)*D+a+o]*I[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},wA={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;zN([s],"conv3dBackpropInputV2");const u=Fe(s.shape),c=Fe(a.shape),h=Yu(l,a.shape,o,1,i),p=new pa(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,T]=u,k=n.data.get(a.dataId).values,[I,S,_,N]=c,{batchSize:E,filterDepth:$,filterHeight:C,filterWidth:A,inChannels:O,inDepth:D,inHeight:R,inWidth:F,outChannels:P,outDepth:M,outHeight:L,outWidth:z,strideDepth:B,strideHeight:U,strideWidth:V}=h,W=$-1-h.padInfo.front,G=C-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<O;++t)for(let n=0;n<D;++n){const r=n-W,s=Math.max(0,Math.ceil(r/B)),a=Math.min(M,($+r)/B);for(let i=0;i<R;++i){const o=i-G,l=Math.max(0,Math.ceil(o/U)),u=Math.min(L,(C+o)/U);for(let c=0;c<F;++c){const h=c-j,p=Math.max(0,Math.ceil(h/V)),E=Math.min(z,(A+h)/V);let O=0;for(let n=s;n<a;++n){const s=n*B-r;for(let r=l;r<u;++r){const a=r*U-o;for(let i=p;i<E;++i){const o=x*e+w*n+v*r+T*i,l=I*($-1-s)+S*(C-1-a)+_*(A-1-(i*V-h))+N*t;for(let e=0;e<P;++e)O+=b[o+e]*k[l+e]}}}d[f*e+m*n+g*i+y*c+t]=O}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},vA=dE(Pt,(e=>Math.cos(e))),TA={kernelName:Pt,backendName:"cpu",kernelFunc:vA},kA=dE(Mt,(e=>Math.cosh(e))),IA={kernelName:Mt,backendName:"cpu",kernelFunc:kA},SA={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,p,d]=s.shape,f=a.shape[0],[m,g]=o,y=So([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,v=Fe(s.shape),T=Fe(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const s=r+n*T[2]+t*T[1]+e*T[0];y.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(p-1)+l*f:.5*(r+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+l*T[2]+t*T[1]+e*T[0];y.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let a=r+h*v[2]+n*v[1]+i*v[0];const u=w[a];a=r+m*v[2]+n*v[1]+i*v[0];const c=w[a];a=r+h*v[2]+s*v[1]+i*v[0];const p=w[a];a=r+m*v[2]+s*v[1]+i*v[0];const d=u+(c-u)*b,f=p+(w[a]-p)*b;a=r+l*T[2]+t*T[1]+e*T[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(p-1)+n*f:.5*(r+a)*(p-1);if(s<0||s>p-1){for(let r=0;r<d;r++){const s=r+n*T[2]+t*T[1]+e*T[0];y.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<d;r++){const s=r+o*v[2]+l*v[1]+i*v[0],a=r+n*T[2]+t*T[1]+e*T[0];y.values[a]=w[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},_A={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;zN(s,"cumprod");const l=ah([a],s.shape.length);let u=s;null!=l&&(u=m$({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=oh(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Sa(u.dtype,"int32"),p=ze(ue(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?1:d[n];else{const r=m(e,t-1);p[n]=i?d[r]*p[r]:d[n]*p[r]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=m$({inputs:{x:g},backend:n,attrs:{perm:ih(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},NA={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;zN(s,"cumsum");const l=ah([a],s.shape.length);let u=s;null!=l&&(u=m$({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=oh(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Sa(u.dtype,"int32"),p=Be(ue(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const r=m(e,t-1);p[n]=i?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=m$({inputs:{x:g},backend:n,attrs:{perm:ih(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},EA={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=oE(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=lE(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},$A={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;ie("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<p;++t){const s=Math.floor(t/a),i=(r*a+t%a)*d;for(let t=0;t<d;++t){const r=t+i+c*(s+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,d],s.dtype,m)}};function CA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;zN([s,a],"depthwiseConv2DNative");const c=Fe(s.shape),h=Fe(a.shape);let p=l;null==p&&(p=[1,1]),ie(rc(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=Xu(s.shape,a.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,T=new pa(d.outShape,s.dtype),k=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,S=T.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*T.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*T.strides[1],s=e*d.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*T.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=a+e*h[1],o=i+r*d.inChannels;let l=t,u=s;for(let e=0;e<d.inChannels;++e){const t=k[o+e];for(let e=0;e<v;++e)S[l+e]+=t*I[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const AA={kernelName:Wt,backendName:"cpu",kernelFunc:CA},OA={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;zN([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Xu(s.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new pa(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new pa(s.shape,s.dtype,w),T=n.data.get(a.dataId).values,k=new pa(a.shape,a.dtype,T);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=s;e<a;++e){const n=r+e*d-y;u+=v.get(l,t,n,o)*k.get(l,c,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},DA={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;zN([s,a],"depthwiseConv2DNativeBackpropInput");const h=Fe(s.shape),p=Fe(a.shape),d=Xu(c,a.shape,i,o,l,u,!0),f=new pa(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,T]=h,k=n.data.get(a.dataId).values,[I,S,_]=p,{batchSize:N,filterHeight:E,filterWidth:$,inChannels:C,inHeight:A,inWidth:O,outChannels:D,outHeight:R,outWidth:F,strideHeight:P,strideWidth:M}=d,L=E-1-d.padInfo.top,z=$-1-d.padInfo.left,B=D/C;for(let e=0;e<N;++e)for(let t=0;t<C;++t)for(let n=0;n<A;++n){const r=n-L,s=Math.max(0,Math.ceil(r/P)),a=Math.min(R,(E+r)/P);for(let i=0;i<O;++i){const o=i-z,l=Math.max(0,Math.ceil(o/M)),u=Math.min(F,($+o)/M);let c=0;for(let n=s;n<a;++n){const s=n*P-r;for(let r=l;r<u;++r){const a=w*e+v*n+T*r,i=I*(E-1-s)+S*($-1-(r*M-o))+_*t;for(let e=0;e<B;++e)c+=x[a+(t*B+e)]*k[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},RA={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=ue(r.shape),a=n.data.get(r.dataId).values,i=So([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},FA={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:T,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:_}=Hu(r.shape,s.shape,a,i,"NHWC",o),N=ue(_),E=_.length,$=ke(r.dtype,N);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*v-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<T;++t){const a=n+t*I;if(a>=0&&a<f)for(let n=0;n<k;++n){const d=i+n*S;if(d>=0&&d<m){const i=We([e,a,d,o],c,Fe(r.shape)),f=We([t,n,o],p,Fe(s.shape)),m=u[i]+h[f];m>l&&(l=m)}}}$[We([e,t,a,o],E,Fe(_))]=l}}}return{dataId:l.write(Ks($,r.dtype),_,r.dtype),shape:_,dtype:r.dtype}}},PA={kernelName:Xt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Me(r.shape,u.data.get(r.dataId).values),h=Me(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:T,dilationHeight:k,dilationWidth:I,outShape:S}=Hu(r.shape,s.shape,i,o,"NHWC",l);ie(a.rank===S.length,(()=>`Error in ${Xt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const _=Me(S,u.data.get(a.dataId).values),N=Ue(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){const r=n+t*k;if(r>=0&&r<d)for(let n=0;n<T;++n){const u=s+n*I;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=t,l=n)}}}N[o][l][a]+=_[e][t][r][a]}}}return{dataId:u.write(Ks(N,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},MA={kernelName:Kt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Me(r.shape,u.data.get(r.dataId).values),h=Me(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:T,dilationHeight:k,dilationWidth:I,outShape:S}=Hu(r.shape,s.shape,i,o,"NHWC",l);ie(a.rank===S.length,(()=>`Error in ${Kt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const _=Me(S,u.data.get(a.dataId).values),N=Ue(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<v;++t){const r=n+t*k;if(r>=0&&r<d)for(let n=0;n<T;++n){const u=s+n*I;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=r,l=u)}}}N[e][o][l][a]+=_[e][t][r][a]}}}return{dataId:u.write(Ks(N,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},LA={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[p,d]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(d*p*4);for(let e=0;e<p*d;++e){const t=[0,0,0,255*u];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}a.width=d,a.height=p;const b=new ImageData(y,d,p);return h.putImageData(b,0,0),s}};function zA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;zN(s,"sum"),o="bool"===s.dtype?QN({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):KN({inputs:{x:s},backend:n});const l=o.shape.length,u=we(a,o.shape),c=ah(u,l);let h=u,p=o;null!=c&&(p=m$({inputs:{x:o},backend:n,attrs:{perm:c}}),h=oh(h.length,l)),sh("sum",h,p.shape.length);const[d,f]=nh(p.shape,h);let m=qN(n,d,Sa(p.dtype,"int32"));const g=ue(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=SC({inputs:{x:m},backend:n,attrs:{shape:rh(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const BA={kernelName:zr,backendName:"cpu",kernelFunc:zA},UA={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Nm(s,a.length);$m(i.length,l,a);const{path:u,steps:c}=Cm(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Em(d,l[t]);let s;Am(e)?s=a[t]:(s=m$({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);pe(s.shape,i)||(s=SC({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===p?p=s:(p=o$({inputs:{a:s,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=zA({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},VA={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;zN([r,s],"eluGrad");const a=new Float32Array(ue(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},WA=um,GA=cm,jA=hm,HA=pm,qA=dm,KA=fm,XA=dE(tn,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+WA*n);return t*(1-((((KA*r+qA)*r+HA)*r+jA)*r+GA)*r*Math.exp(-n*n))})),YA={kernelName:tn,backendName:"cpu",kernelFunc:XA};function ZA(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(ie(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),SC({inputs:{x:s},backend:n,attrs:{shape:o}})}const JA={kernelName:sn,backendName:"cpu",kernelFunc:ZA},QA=GN(((e,t)=>e/t)),eO=tE(Zt,QA),tO={kernelName:Zt,backendName:"cpu",kernelFunc:eO};function nO(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=ue(u),h=Te("float32",c),p=Te("float32",c);for(let e=0;e<s;e++){const r=M$({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=M$({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=jN({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=rO(i,t,n),d=mm(u,c);for(let t=0;t<a;t++){const n=xm(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=jN({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function rO(e,t,n){const r=ue(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if((o=r)&o-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Tm(s*r,t,n),l=xm(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),wm(r,a,i,s)}return r}(mm(a,i),r,t);return gm(e)}{const s=sO(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",qs(r,"float32")),i=KN({inputs:{x:a},backend:n}),l=tO.kernelFunc({inputs:{a:e,b:a},backend:n}),u=tO.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}var o}function sO(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=mm(e,t),i=n/2,o=ym(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),p=s.makeTensorInfo(c,"float32",u),d=jN({inputs:{real:h,imag:p},backend:s}),f=bm(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=jN({inputs:{real:b,imag:x},backend:s}),v=sO(l,u,i,r,s),T=v.real,k=v.imag,I=[T.length],S=s.makeTensorInfo(I,"float32",T),_=s.makeTensorInfo(I,"float32",k),N=jN({inputs:{real:S,imag:_},backend:s}),E=sO(m,g,i,r,s),$=E.real,C=E.imag,A=[$.length],O=s.makeTensorInfo(A,"float32",$),D=s.makeTensorInfo(A,"float32",C),R=jN({inputs:{real:O,imag:D},backend:s}),F=vm(n,r),P=[F.real.length],M=s.makeTensorInfo(P,"float32",F.real),L=s.makeTensorInfo(P,"float32",F.imag),z=jN({inputs:{real:M,imag:L},backend:s}),B=o$({inputs:{a:z,b:R},backend:s}),U=aE({inputs:{a:N,b:B},backend:s}),V=aC({inputs:{a:N,b:B},backend:s}),W=YN({inputs:{input:U},backend:s}),G=YN({inputs:{input:V},backend:s}),j=cA({inputs:{input:U},backend:s}),H=cA({inputs:{input:V},backend:s}),q=pA({inputs:[W,G],backend:s,attrs:{axis:0}}),K=pA({inputs:[j,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const aO={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ue(r.shape),a=r.shape[r.shape.length-1],i=SC({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=nO(i,!1,n),l=SC({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function iO(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||Oe(s),o=ke(i,ue(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const oO={kernelName:ln,backendName:"cpu",kernelFunc:iO},lO={kernelName:un,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=Te(r.dtype,ue(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let s=0;s<u;s++){const i=Math.round(l-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},uO={kernelName:ys,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=fA({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=SC({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=aE({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=aE({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;if("NCHW"===c&&"prelu"===d&&1===o.shape.length&&1!==o.shape[0]){const e=SC({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=IC(n,m,d,e,f),n.disposeIntermediateTensorInfo(e)}else m=IC(n,m,d,o,f);n.disposeIntermediateTensorInfo(e)}return m}},cO={kernelName:bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=CA({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=aE({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=IC(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},hO={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=ue(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=Xl(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const p=RE(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,a);return n.makeTensorInfo(l,r.dtype,p.values)}},pO={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;zN([s,a],"gatherV2");const l=we(i,s.shape)[0],u=n.data.get(a.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];ie(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=ue(a.shape),d=Km(s,a,l,h),f=SC({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=SC({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=FE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},dO={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ue(r.shape),a=r.shape[r.shape.length-1],i=SC({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=nO(i,!0,n),l=SC({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},fO=dE(wn,(e=>Number.isFinite(e)?1:0),"bool"),mO={kernelName:wn,backendName:"cpu",kernelFunc:fO},gO=dE(vn,(e=>Math.abs(e)===1/0?1:0),"bool"),yO={kernelName:vn,backendName:"cpu",kernelFunc:gO},bO=dE(Tn,(e=>Number.isNaN(e)?1:0),"bool"),xO={kernelName:Tn,backendName:"cpu",kernelFunc:bO},wO={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=KE(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},vO=dE(En,(e=>Math.log1p(e))),TO={kernelName:En,backendName:"cpu",kernelFunc:vO},kO=GN(((e,t)=>e&&t)),IO=tE($n,kO,null,"bool"),SO={kernelName:$n,backendName:"cpu",kernelFunc:IO},_O=dE(Cn,(e=>e?0:1),"bool"),NO={kernelName:Cn,backendName:"cpu",kernelFunc:_O},EO=GN(((e,t)=>e||t)),$O=tE(An,EO,null,"bool"),CO={kernelName:An,backendName:"cpu",kernelFunc:$O},AO={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;zN(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,p=ue(s.shape),d=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);d[e]=n}return n.makeTensorInfo(s.shape,s.dtype,d)}},OO={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;zN(i,"LRNGrad");const h=ue(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function DO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=we(a,l);let h=c;const p=ah(h,u);let d=o.data.get(s.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];d=f$(d,l,s.dtype,p,e),h=oh(h.length,u),l=e}zN(s,"max"),sh("max",h,u);const[f,m]=nh(l,h),g=JE(d,ue(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;return i&&(b=rh(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const RO={kernelName:Ln,backendName:"cpu",kernelFunc:DO},FO={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;zN(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ie(rc(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=qu(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&pe(u.inShape,u.outShape))c=KN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Fe(s.shape),r=YC(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},PO={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;zN(s,"maxPool3d");const c=Ku(s.shape,a,i,1,o,l,u),h=JC(n.data.get(s.dataId).values,s.shape,s.dtype,Fe(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},MO={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;zN([s,a],"maxPool3DGrad");const c=Ku(a.shape,i,o,1,l,u),h=function(e,t){const n=So(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-d;let p=u;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let T=d;for(;T<0;)T+=l;const k=Math.min(t.inWidth,h+d);let I=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=p;r<v;r+=o){const s=r-u;for(let a=T;a<k;a+=l){const i=a-d,o=e.get(m,t,r,a,g);o>=I&&(I=o,S=n*c*h+s*c+i)}}}n.set(S,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,T=w-1-c.padInfo.left,k=x-1-c.padInfo.top,I=So(a.shape,"float32"),S=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-v,i=r-k,o=s-T;let l=0;for(let n=0;n<b;n+=m){const r=(a+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(i+s)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*w-1-h.get(e,r,a,u,t)===n*x*w+s*w+i?1:0;0!==p&&(l+=S.get(e,r,a,u,t)*p)}}}I.set(l,e,n,r,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},LO={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;zN([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=qu(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=So(p.outShape,o.dtype,ZC(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,T=x-1-p.padInfo.top,k=So(o.shape,"float32"),I=n.data.get(s.dataId).values,S=So(s.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-T,a=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*w-1-f.get(e,r,o,t)===n*w+s?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}k.set(i,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},zO={kernelName:Gn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;zN(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=qu(r.shape,s,a,[1,1],i),[h,p]=function(e,t,n,r,s){const a=YC(e,0,n,Fe(t),s,"max"),i=ZC(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),d=l.write(h,c.outShape,r.dtype),f=l.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},BO={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=we(a,s.shape),l=ue(nh(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=QN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=eO({inputs:{a:h,b:c},backend:n});u.push(p);const d=zA({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},UO={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;zN(s,"min");const o=we(a,s.shape);let l=o;const u=ah(l,s.shape.length);let c=s;null!=u&&(c=m$({inputs:{x:s},backend:n,attrs:{perm:u}}),l=oh(l.length,s.shape.length)),sh("min",l,c.shape.length);const[h,p]=nh(c.shape,l),d=ue(p),f=Be(ue(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=SC({inputs:{x:g},backend:n,attrs:{shape:rh(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},VO={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;zN(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=Fe(s.shape),f=ue(o),m=o.length,g=Fe(o),y=Te(s.dtype,f);for(let e=0;e<f;e++){let t=Ge(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=We(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},WO=GN(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),GO=tE(Xn,WO),jO={kernelName:Xn,backendName:"cpu",kernelFunc:GO};function HO(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=we([o],s.shape),u=DO({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=rh(u.shape,l),h=SC({inputs:{x:u},backend:n,attrs:{shape:c}}),p=aC({inputs:{a:s,b:h},backend:n}),d=kE({inputs:{x:p},backend:n}),f=zA({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=SC({inputs:{x:f},backend:n,attrs:{shape:c}}),g=eO({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const qO={kernelName:Vr,backendName:"cpu",kernelFunc:HO},KO={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;zN(s,"multinomial");const l=o?s:HO({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=Be(ue(p),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=xp.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();d[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}},XO=ef,YO={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;zN(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=XO(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},ZO=tf,JO={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;zN(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=ZO(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},QO=nf,eD={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;zN(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=QO(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},tD={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r;zN(s,"oneHot");const u=ue(s.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(s.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function nD(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=YN({inputs:{input:r},backend:n}),t=nD({inputs:{x:e},backend:n}),s=cA({inputs:{input:r},backend:n}),a=nD({inputs:{x:s},backend:n}),i=jN({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return iO({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const rD={kernelName:ps,backendName:"cpu",kernelFunc:nD},sD={kernelName:rr,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=YN({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=cA({inputs:{input:s},backend:r}),i=nD({inputs:{x:a},backend:r}),o=jN({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return iO({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function aD(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return ZA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=pA({inputs:t.map((e=>{const t=ZA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const iD={kernelName:ar,backendName:"cpu",kernelFunc:aD},oD={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;zN(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=ue(s.shape),h=s.shape.length,p=Fe(s.shape),d=ue(o),f=o.length,m=Fe(o),g=Te(s.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[We(Ge(e,h,p).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},lD=GN(((e,t)=>Math.pow(e,t))),uD=tE(lr,lD),cD={kernelName:lr,backendName:"cpu",kernelFunc:uD},hD={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[p,d,f]=w$(l,u,c,a.shape,a.dtype,h,i.shape),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}},pD={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=T$(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}},dD={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,p=o.map((e=>n.data.get(e.dataId).values)),d=o.map((e=>e.shape)),[f,m]=N$(u,s.shape,c,a.shape,a.dtype,h,i.shape,p,d,l);return n.makeTensorInfo(f,a.dtype,m)}},fD={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=E$(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},mD=dE(gr,(e=>1/e)),gD={kernelName:gr,backendName:"cpu",kernelFunc:mD},yD={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;zN(s,"resizeBilinear");const l=Fe(s.shape),[u,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(ue([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(p-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(d-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],p=o+a*l[2],y=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*r,i=a+(n+(m[y+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},bD={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;zN([a,s],"resizeBilinearGrad");const o=Fe(s.shape),[l,u,c,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,p=1-l;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,d=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],v=p*u,T=p*s,k=l*u,I=l*s;for(let e=0;e<h;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*T,f[g+e]+=t*k,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},xD={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;zN(s,"resizeNearestNeighbor");const l=Fe(s.shape),[u,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},wD={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;zN([a,s],"resizeNearestNeighborGrad");const o=Fe(s.shape),l=Fe(a.shape),[u,c,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,T=1/w,k=2*Math.ceil(v)+2,I=2*Math.ceil(T)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),s=Math.floor(r-k/2);for(let r=0;r<h;r++){const a=n+r*o[2],u=Math.floor(r*T),y=Math.floor(u-I/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<k;a++){const u=a+s;if(u<0||u>=d)continue;const p=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const s=p+t*l[2],a=t*w;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},vD={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;zN(s,"reverse");const i=s.shape.length,o=we(a,s.shape);if(0===i)return KN({inputs:{x:s},backend:n});const l=new pa(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},TD={kernelName:ms,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=Te(r.dtype,ue(r.shape)),[u,c,h,p]=r.shape,[d,f]=tm(i,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let i=0;i<p;i++){const o=[u,e,r,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let T=a;"number"!=typeof a&&(T=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(T=y[t+v*(h*p)+w*p+i]),l[t+n+s+i]=T}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},kD=dE(Sr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),ID={kernelName:Sr,backendName:"cpu",kernelFunc:kD},SD={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Jl(0,s,i),p=O$(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function _D(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function ND(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const ED={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=ke("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)i[l+e]="left"===a?_D(n,t[e+l]):ND(n,t[e+l])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},$D={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;zN([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=Sa(s.dtype,a.dtype),h=Be(ue(s.shape),c);let p=0;const d=0===i||i>1||1===s.shape.length?1:ue(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},CD=om,AD=lm,OD=dE(Ar,(e=>e>=0?AD*e:CD*(Math.exp(e)-1))),DD={kernelName:Ar,backendName:"cpu",kernelFunc:OD},RD=dE(Fr,(e=>e<0?-1:e>0?1:0)),FD={kernelName:Fr,backendName:"cpu",kernelFunc:RD},PD=dE(Dr,(e=>Math.sin(e))),MD={kernelName:Dr,backendName:"cpu",kernelFunc:PD},LD=dE(Rr,(e=>Math.sinh(e))),zD={kernelName:Rr,backendName:"cpu",kernelFunc:LD},BD=Math.log(1.1920928955078125e-7)+2,UD=dE(Mr,(e=>{const t=e>-BD,n=e<BD,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),VD={kernelName:Mr,backendName:"cpu",kernelFunc:UD},WD={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;zN([s],"spaceToBatchND");const o=ue(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=oD.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=nm(u.shape,a,o,!1),h=rm(c.length,a.length,!1),p=sm(u.shape,a,o,!1),d=SC({inputs:{x:u},backend:n,attrs:{shape:c}}),f=m$({inputs:{x:d},backend:n,attrs:{perm:h}}),m=SC({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}},GD={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=z$(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},jD={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=B$(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},HD={kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=U$(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},qD={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=U$(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},KD={kernelName:qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=Jl(0,s,o),d=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=O$(f,n.bufferSync(a),o,p,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),d);break;case"float32":case"int32":m=O$(f,n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],d);break;case"string":m=O$(f,n.bufferSync(a),o,p,c,u,l,h,Js(n.data.get(i.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},XD={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=we(i,s.shape)[0],l=Dm(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=M$({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},YD={kernelName:Xr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;zN(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ZD=dE(ds,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),JD={kernelName:ds,backendName:"cpu",kernelFunc:ZD},QD={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;zN(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=gu(s.shape,a,i,o,l,u,c,h,p);let v;if(m)v=SC({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){ie(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ru(b,x,w),t=M$({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=SC({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=Z$(d,n.bufferSync(s),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}},eR={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=Q$(p,d,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},tR={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=tC(o,l,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},nR={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=nC(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},rR=dE(ns,(e=>Math.tan(e))),sR={kernelName:ns,backendName:"cpu",kernelFunc:rR},aR=dE(rs,(e=>Math.tanh(e))),iR={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=Jl(0,s,r.shape),h=n.bufferSync(s),p=n.bufferSync(a),d=n.bufferSync(r),f=O$(h,p,r.shape,c,l,o,i,u,d,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}},oR={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;zN(s,"tile");const i=oC(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},lR={kernelName:as,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;zN(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=cC(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},uR={kernelName:is,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=s.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=Fe(s.shape),b=y[0],x=y[1],w=y[2],v=Fe(g),T=v[0],k=v[1],I=v[2],S=Te(s.dtype,ue(g));S.fill(l);const _=r.data.get(s.dataId).values,N=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<d;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,d=(t[3]*r+t[4]*n+t[5])/u,f=cR(c,p,o),m=cR(d,h,o);switch(i){case"nearest":a=pR(_,h,p,b,x,w,e,m,f,s,l);break;case"bilinear":a=dR(_,h,p,b,x,w,e,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}S[e*T+n*k+r*I+s]=a}return r.makeTensorInfo(g,s.dtype,S)}return{dataId:r.write(S,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function cR(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ee(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ee(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ee(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function hR(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function pR(e,t,n,r,s,a,i,o,l,u,c){return hR(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function dR(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*hR(e,t,n,r,s,a,i,h,p,u,c)+(l-p)*hR(e,t,n,r,s,a,i,h,f,u,c))+(o-h)*((f-l)*hR(e,t,n,r,s,a,i,d,p,u,c)+(l-p)*hR(e,t,n,r,s,a,i,d,f,u,c))}const fR={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;zN(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=hC(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},mR={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=M$({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[e]=SC({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},gR={kernelName:cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;zN(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=ZA({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=qs(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=wE({inputs:{a:r,b:c},backend:n}),i=QN({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=o$({inputs:{a:i,b:s},backend:n}),h=zA({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(a),l.push(i),l.push(u),l.push(h)}const h=aD({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},yR=[$C,WN,AC,DC,iE,RC,FC,PC,MC,LC,BC,VC,GC,qC,XC,QC,eA,tA,nA,EC,rA,sA,aA,hE,iA,eE,yE,lA,HN,uA,dA,mA,gA,yA,bA,xA,wA,TA,IA,SA,_A,NA,EA,$A,AA,OA,DA,RA,FA,PA,MA,LA,UA,fC,VA,vE,YA,IE,JA,NE,aO,oO,lO,CE,DE,uO,cO,hO,pO,LE,UE,XN,dO,hA,mO,yO,xO,gC,GE,qE,wO,ZE,TO,SO,NO,CO,AO,OO,RO,t$,FO,PO,MO,LO,zO,BO,UO,s$,VO,jO,KO,l$,c$,YO,JO,eD,d$,tD,sD,iD,oD,cD,xC,b$,hD,pD,dD,fD,ZN,tO,gD,vC,kC,_C,yD,bD,xD,wD,vD,TD,ID,A$,SD,ED,$D,DD,F$,FD,MD,zD,L$,qO,VD,WD,GD,jD,HD,qD,KD,XD,G$,YD,q$,Y$,JD,QD,eR,tR,nR,iC,BA,sR,{kernelName:rs,backendName:"cpu",kernelFunc:aR},iR,oR,lR,uR,g$,fR,mR,gR,rD];for(const e of yR)_s(e);const bR={},xR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function wR(e,t){bR[e]=t}function vR(e,t){if(!(e in bR)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Xe().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete bR[e]}),!1),Xe().getBool("SOFTWARE_WEBGL_ENABLED")&&(xR.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",xR)||n.getContext("experimental-webgl",xR):n.getContext("webgl2",xR)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;bR[e]=n}const n=bR[e];return null==n||n.isContextLost()?(delete bR[e],vR(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),bR[e])}var TR,kR,IR;function SR(e,t){return[t,e]}function _R(e){const t=ue(e);return me(Math.ceil(t/4))}function NR(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function ER(e,t){const n=e;let r,s,a,i,o,l,u,c,h,p;return 2===Xe().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function $R(e,t){const n=t();return Xe().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+DR(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(TR||(TR={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(kR||(kR={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(IR||(IR={}));const CR=5.96e-8,AR=65504;function OR(e){return!!(Xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||CR<Math.abs(e)&&Math.abs(e)<AR)}function DR(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function RR(e,t){return aF(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function FR(e,t){const n=aF(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if($R(e,(()=>e.shaderSource(n,t))),$R(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function PR(e,t){const n=aF(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if($R(e,(()=>e.shaderSource(n,t))),$R(e,(()=>e.compileShader(n))),Xe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw LR(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const MR=/ERROR: [0-9]+:([0-9]+):/g;function LR(e,t){const n=MR.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>ye((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ye(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function zR(e){return aF(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function BR(e,t){if($R(e,(()=>e.linkProgram(t))),!Xe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function UR(e,t){if($R(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function VR(e,t){const n=aF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return $R(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),$R(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function WR(e,t){const n=aF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return $R(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),$R(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function GR(){return 2===Xe().getNumber("WEBGL_VERSION")?1:4}function jR(e){return aF(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function HR(e,t){const n=Xe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function qR(e){return aF(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function KR(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&($R(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),$R(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),$R(e,(()=>e.enableVertexAttribArray(o))),!0)}function XR(e,t,n){iF(e,n),$R(e,(()=>e.activeTexture(e.TEXTURE0+n))),$R(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function YR(e,t){iF(e,t),$R(e,(()=>e.activeTexture(e.TEXTURE0+t))),$R(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function ZR(e,t,n){return aF(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function JR(e,t,n){return e.getUniformLocation(t,n)}function QR(e,t,n,r){$R(e,(()=>XR(e,t,r))),$R(e,(()=>e.uniform1i(n,r)))}function eF(e){$R(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),$R(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),$R(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function tF(e,t,n){$R(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),$R(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function nF(e,t){$R(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),$R(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function rF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+sF(e,t))}function sF(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function aF(e,t,n){const r=$R(e,(()=>t()));if(null==r)throw new Error(n);return r}function iF(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function oF(e,t=2){return ue(e.slice(0,e.length-t))}function lF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function uF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[oF(e),...lF(e)]),t}function cF(e,t=!1){let n=Xe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Xe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Xe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?te(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=ve(e);e=t.newShape}let s=ue(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=oF(e);let n=2,r=2;e.length&&([n,r]=lF(e)),s=t*(n/2)*(r/2),a=me(s).map((e=>2*e))}else a=me(s);return a}function hF(e){return e%2==0}function pF(e,t){if(pe(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(hF(n)&&hF(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&hF(e[0])&&hF(t[0])}let dF,fF;function mF(e){if(null==dF){const t=vR(e);dF=t.getParameter(t.MAX_TEXTURE_SIZE)}return dF}function gF(){dF=null}function yF(){fF=null}function bF(e){if(null==fF){const t=vR(e);fF=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,fF)}function xF(e){if(0===e)return 0;let t;const n=vR(e);return t=wF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:wF(n,"EXT_disjoint_timer_query")?1:0,t}function wF(e,t){return null!=e.getExtension(t)}function vF(e){try{if(null!=vR(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function TF(e){if(0===e)return!1;const t=vR(e);if(1===e){if(!wF(t,"OES_texture_float"))return!1}else if(!wF(t,"EXT_color_buffer_float"))return!1;return IF(t)}function kF(e){if(0===e)return!1;const t=vR(e);if(1!==e){if(wF(t,"EXT_color_buffer_float"))return IF(t);const e="EXT_color_buffer_half_float";if(wF(t,e)){const n=t.getExtension(e);return function(e,t){const n=ER(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!wF(t,"OES_texture_float")&&(!!wF(t,"WEBGL_color_buffer_float")&&IF(t))}function IF(e){const t=ER(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function SF(e){return 2===e&&null!=vR(e).fenceSync}function _F(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ie("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const NF=Xe();function EF(){let e,t,n,r,s,a,i,o,l,u;return 2===Xe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=Xe().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function $F(e,t,n="index"){const r=Fe(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function CF(e,t,n="index"){const r=Fe(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function AF(e){const t=Fe(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}NF.registerFlag("HAS_WEBGL",(()=>NF.getNumber("WEBGL_VERSION")>0)),NF.registerFlag("WEBGL_VERSION",(()=>vF(2)?2:vF(1)?1:0)),NF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),NF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===NF.get("WEBGL_VERSION"))),NF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),NF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),NF.registerFlag("WEBGL_PACK",(()=>NF.getBool("HAS_WEBGL"))),NF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_PACK_CLIP",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_PACK_REDUCE",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_CONV_IM2COL",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>NF.getBool("WEBGL_PACK"))),NF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>mF(NF.getNumber("WEBGL_VERSION")))),NF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>bF(NF.getNumber("WEBGL_VERSION")))),NF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=NF.getNumber("WEBGL_VERSION");return 0===e?0:xF(e)})),NF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>NF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Va())),NF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>TF(NF.getNumber("WEBGL_VERSION")))),NF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!NF.getBool("WEBGL_FORCE_F16_TEXTURES")&&NF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),NF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>kF(NF.getNumber("WEBGL_VERSION")))),NF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>SF(NF.getNumber("WEBGL_VERSION")))),NF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>NF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),NF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),NF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Va()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),NF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),NF.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),NF.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),NF.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),NF.registerFlag("WEBGL_EXP_CONV",(()=>!1)),NF.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>NF.getBool("IS_TEST"))),NF.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),NF.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),NF.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),NF.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const OF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:DF}=y;function RF(e,t,n){const r=[];if(e.forEach((e=>{const t=ue(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=GF(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?PF(e,r):FF(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=DF(e.shapeInfo.logicalShape,t.logicalShape),l=WF(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===ue(e.shapeInfo.logicalShape),m=1===ue(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&pe(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=WF(l),c=DF(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=EF(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${MF}\n    ${LF}\n    ${zF}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(pe(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return pe(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${CF(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=$F(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${CF(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=$F(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=$F(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=$F(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=BF),[h,l,c,s,u,a,n.userCode].join("\n")}function FF(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=UF(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${VF(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=UF(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&pe(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=ve(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${FF(jF(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${HF(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${VF(e)}\n      }\n    `;const u=a[0],c=a[1],h=UF(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=ve(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${FF(jF(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${HF(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${VF(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=UF(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=ve(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${FF(jF(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${HF(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${VF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=UF(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=ve(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${FF(jF(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${HF(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${VF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${UF(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=ve(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${FF(jF(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${HF(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${VF(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${UF(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function PF(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${EF().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=EF();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=EF();if(null!=a&&pe(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${PF(jF(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${HF(a,r)});\n        }\n      `}const o=EF();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=EF();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=a[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const MF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",LF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",zF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",BF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function UF(e){return`offset${e}`}function VF(e){const t=e.name,n=ue(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function WF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function GF(e,t,n){const{newShape:r,keptDims:s}=ve(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,l=!e&&a>1&&!pe(t,n)&&r.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function jF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function HF(e,t){return t.map((t=>e[t])).join(", ")}function qF(e,t,n){const r=[],s=[];let a,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Xe().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function KF(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!pe(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!pe(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function XF(e){return Xe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class YF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=TR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=EF();this.outputShape=e,this.enableShapeUniforms=XF(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?CF(["r","c","d"],e):$F(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class ZF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=TR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=EF();this.outputShape=e,this.enableShapeUniforms=XF(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?CF(["r","c","d"],e):$F(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class JF{constructor(e){this.variableNames=["A"],this.outTexUsage=kR.DOWNLOAD;const t=EF();this.outputShape=e,this.userCode=`\n      ${OF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class QF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=kR.DOWNLOAD;const t=EF();this.outputShape=e,this.userCode=`\n      ${OF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const eP={R:0,G:1,B:2,A:3};class tP{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=EF();this.outputShape=e,this.enableShapeUniforms=XF(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${eP[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":AF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class nP{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=EF();this.outputShape=e,this.enableShapeUniforms=XF(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":AF(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function rP(e){const t=EF();return FR(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function sP(e){return VR(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function aP(e){return WR(e,new Uint16Array([0,1,2,2,1,3]))}function iP(e,t,n,r,s,a){HR(t,n);const i=jR(e),o=e.TEXTURE_2D;return $R(e,(()=>e.bindTexture(o,i))),$R(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),$R(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),$R(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),$R(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Xe().getNumber("WEBGL_VERSION")?$R(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):$R(e,(()=>e.texStorage2D(o,1,r,t,n))),$R(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function oP(e){return e.internalFormatFloat}function lP(e,t,n,r){const[s,a]=SR(t,n);return iP(e,s,a,oP(r),r.textureFormatFloat,e.FLOAT)}function uP(e){return e.internalFormatHalfFloat}function cP(e,t,n,r){const[s,a]=SR(t,n);return iP(e,s,a,uP(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function hP(e){return e.downloadTextureFormat}function pP(e,t,n,r){const[s,a]=SR(t,n);return iP(e,s,a,hP(r),e.RGBA,e.UNSIGNED_BYTE)}function dP(e){return e.internalFormatPackedFloat}function fP(e,t,n,r){const[s,a]=NR(t,n);return iP(e,s,a,dP(r),e.RGBA,e.FLOAT)}function mP(e){return e.internalFormatPackedHalfFloat}function gP(e,t,n,r){const[s,a]=NR(t,n);return iP(e,s,a,mP(r),e.RGBA,r.textureTypeHalfFloat)}function yP(e,t,n){return $R(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),KR(e,t,"clipSpacePos",n,3,20,0)&&KR(e,t,"uv",n,2,20,12)}function bP(e,t,n,r,s,a){let i,o,l;$R(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===Xe().getNumber("WEBGL_VERSION")?$R(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):$R(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),$R(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function xP(e,t,n){$R(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Xe().getNumber("WEBGL_VERSION")?$R(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):$R(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Xe().getNumber("WEBGL_VERSION")?$R(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):$R(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),$R(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function wP(e,t,n,r){const s=e.createBuffer();$R(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return $R(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),$R(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),$R(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function vP(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function TP(e,t,n,r){const[s,a]=SR(t,n),i=new Uint8Array(t*n*4);return $R(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function kP(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=NR(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function IP(e,t,n){const r=new Float32Array(t*n*4);return $R(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class SP{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Xe().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,wR(t,e)):this.gl=vR(t),e=this.gl,2===Xe().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>$R(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>$R(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>$R(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>$R(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>$R(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>$R(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>$R(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>$R(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Xe().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=RR(this.gl,e),wF(this.gl,t))this.textureHalfFloatExtension=RR(this.gl,t);else if(Xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),wF(this.gl,r))this.colorBufferHalfFloatExtension=RR(this.gl,r);else if(Xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",wF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!wF(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=sP(this.gl),this.indexBuffer=aP(this.gl),this.framebuffer=qR(this.gl),this.textureConfig=ER(this.gl,this.textureHalfFloatExtension)}get debug(){return Xe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;$R(e,(()=>e.finish())),$R(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),$R(e,(()=>e.deleteFramebuffer(this.framebuffer))),$R(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),$R(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),$R(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),lP(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),cP(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),pP(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),xP(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),bP(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),gP(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),fP(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(nF(this.gl,this.framebuffer),this.outputTexture=null),$R(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>TP(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return kP(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return vP(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=wP(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Xe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>IP(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=rP(t));const n=zR(t);$R(t,(()=>t.attachShader(n,this.vertexShader))),$R(t,(()=>t.attachShader(n,e))),BR(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&UR(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;$R(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),yP(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&($R(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&UR(this.gl,this.program),$R(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?ZR(this.gl,e,t):JR(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),$R(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),QR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=NR(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&UR(this.gl,this.program),rF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}$R(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),$R(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=RR(this.gl,2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await be((()=>this.disposed||this.isQueryAvailable(e,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Xe().platform&&(n=Xe().platform.setTimeoutCustom.bind(Xe().platform)),be((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),tF(this.gl,e,this.framebuffer),this.debug&&rF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(tF(this.gl,this.outputTexture,this.framebuffer),this.debug&&rF(this.gl)):nF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;tF(r,e,this.framebuffer),this.debug&&rF(r),this.outputTexture=e,$R(r,(()=>r.viewport(0,0,t,n))),$R(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),$R(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:_P,bincountImpl:NP,bincountReduceImpl:EP,bitwiseAndImpl:$P,castImpl:CP,ceilImpl:AP,concatImpl:OP,equalImpl:DP,expImpl:RP,expm1Impl:FP,floorImpl:PP,gatherNdImpl:MP,gatherV2Impl:LP,greaterImpl:zP,greaterEqualImpl:BP,lessImpl:UP,lessEqualImpl:VP,linSpaceImpl:WP,logImpl:GP,maxImpl:jP,maximumImpl:HP,minimumImpl:qP,multiplyImpl:KP,negImpl:XP,notEqualImpl:YP,prodImpl:ZP,raggedGatherImpl:JP,raggedRangeImpl:QP,raggedTensorToTensorImpl:eM,rangeImpl:tM,rsqrtImpl:nM,scatterImpl:rM,sigmoidImpl:sM,simpleAbsImpl:aM,sliceImpl:iM,sparseFillEmptyRowsImpl:oM,sparseReshapeImpl:lM,sparseSegmentReductionImpl:uM,sqrtImpl:cM,staticRegexReplaceImpl:hM,stridedSliceImpl:pM,stringNGramsImpl:dM,stringSplitImpl:fM,stringToHashBucketFastImpl:mM,subImpl:gM,tileImpl:yM,topKImpl:bM,transposeImpl:xM,uniqueImpl:wM}=H;function vM(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function TM(e,t){return 1===t?[e]:vM(e,t)}class kM{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=XF(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=TM("rc",this.rank),t=WF(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class IM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=XF(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):$F(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":AF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class SM{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=NM(t,n),s=EM(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=_M(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===IR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===IR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===IR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===IR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===IR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=NM(n,r),a=EM(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=_M(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Xe().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function _M(e,t,n,r,s){const a=function(e,t){switch(e){case IR.PACKED_2X2_FLOAT32:return dP(t);case IR.PACKED_2X2_FLOAT16:return mP(t);case IR.UNPACKED_FLOAT32:return oP(t);case IR.UNPACKED_FLOAT16:return uP(t);case IR.PACKED_4X1_UNSIGNED_BYTE:return hP(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=NR(e[0],e[1]);i=t*n}else{const[t,n]=SR(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function NM(e,t){if(e===kR.UPLOAD)return IR.PACKED_2X2_FLOAT32;if(e===kR.RENDER||null==e)return function(e){return Xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?IR.PACKED_2X2_FLOAT32:IR.UNPACKED_FLOAT32:e?IR.PACKED_2X2_FLOAT16:IR.UNPACKED_FLOAT16}(t);if(e===kR.DOWNLOAD||e===kR.PIXELS)return IR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function EM(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class $M{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=XF(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const CM="if (isnan(x)) return x;",AM="return x;",OM="return abs(x);",DM="return (x >= 0.0) ? x : (exp(x) - 1.0);",RM=CM+"\n  return (x < 0.0) ? 0.0 : x;\n",FM=CM+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",PM="return x;",MM="return 1.0 / (1.0 + exp(-1.0 * x));",LM="return x;",zM="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",BM="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",UM="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",VM="return 1.0 / (1.0 + exp(-1.0 * x));";class WM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=XF(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class GM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=XF(this.outputShape.length);const t=e.length,n=TM("rc",t),r=WF(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const jM=wd,HM={},qM=Xe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class KM extends Y{nextDataId(){return KM.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Xe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof SP)t=e;else{const n=vR(Xe().getNumber("WEBGL_VERSION"),e);t=new SP(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=vR(Xe().getNumber("WEBGL_VERSION"));t=new SP(e),this.binaryCache=((n=Xe().getNumber("WEBGL_VERSION"))in HM||(HM[n]={}),HM[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new SM(this.gpgpu),this.numMBBeforeWarning=null==Xe().global.screen?1024:Xe().global.screen.height*Xe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new X(this,li())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=uF(t),u=new tP(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((Xe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Xe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:kR.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(Xe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:kR.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new WM(i,PM):new $M(i,PM);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Xs()),c="complex64"===r?mm(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Xs()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new WM(r,PM):new $M(r,PM);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Xe().getBool("DEBUG")&&!Xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Xe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Xe().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,..._R(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=mm(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=ue(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;$R(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&li().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new WM(s,PM):new $M(s,PM);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=li().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Js(e)));return So(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return So(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!OR(n)){if(Xe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=ue(t);if(Xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,..._R(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Xe().getBool("WEBGL_PACK")&&!0===r,i=a?uF(t):t,o=a?new QF(i):new JF(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ea(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=ea(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=re(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Xs(),endMs:null}}endTimer(e){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Xs(),e)}async getQueryTime(e){if(Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=qM){return Xe().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ue(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){xs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return jM(e.shape,t)}packedUnaryOp(e,t,n){const r=new WM(e.shape,t),s=this.compileAndRun(r,[e],n);return li().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=aM(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,OM,e.dtype);const t=new $M(e.shape,OM),n=this.compileAndRun(t,[e]);return li().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const s=n.map((e=>Zs(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return li().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new GM(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new kM(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[oF(e.shape),...lF(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[oF(t),...lF(t)],a=new IM(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&ie(ue(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=uF(s);let o;o=r?new ZF(i):new YF(i);const l=[null!=t?t:_R(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===TR.DENSE){const t=null!=a?a:_R(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ue(i.shape))return o.values=Te(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ue(t.shape)<=Xe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!pF(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=GF(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=Fe(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&pe(t.shape,a),f=1===ue(t.shape),m=sl(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&pe(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${d}_${u}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${Xe().getNumber("WEBGL_VERSION")}`,a}(e,u,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=RF(s,i,t),l=PR(e.gl,o),u=e.createProgram(l);return Xe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},qF(e,t,u)))}(this.gpgpu,e,u,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),Xe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(KF(t.inShapeInfos,n),KF([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Xe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:i,shape:o,texShape:l}=t.variablesLocations[r];if(o){const{uniformShape:n}=GF(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(ue(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=Fe(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],i=s[n];if("float"===r.type)e.gl.uniform1fv(a,i);else if("vec2"===r.type)e.gl.uniform2fv(a,i);else if("vec3"===r.type)e.gl.uniform3fv(a,i);else if("vec4"===r.type)e.gl.uniform4fv(a,i);else if("int"===r.type)e.gl.uniform1iv(a,i);else if("ivec2"===r.type)e.gl.uniform2iv(a,i);else if("ivec3"===r.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,p,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Xe().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Xs();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Xe().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Xe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=hi((()=>{if(!Xe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Xe().getBool("DEBUG");Xe().set("DEBUG",!1);const t=this.abs(Wo(1e-8)).dataSync()[0];if(Xe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Xs());let c=t.texShape;if(null==c&&(c=cF(n,o),t.texShape=c),null!=s){const e=uF(n);let a,i=c[1],h=c[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&p||([i,h]=NR(c[0],c[1])),a=o?new nP(e,p):new tP(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?kR.PIXELS:kR.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Xe().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Xs()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ne(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await jf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw LR(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=qF(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=li().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,a,i);return li().makeTensorFromDataId(l,t,n,o)}}KM.nextDataId=0;const XM="4.17.0";function YM(){Xe().set("WEBGL_FORCE_F16_TEXTURES",!0)}Wa()&&vi("webgl",(()=>new KM),2);const ZM={forceHalfFloat:YM},JM="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class QM{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=il(t,n),this.enableShapeUniforms=XF(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const eL="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class tL{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=il(t,n);const s=this.outputShape.length;this.enableShapeUniforms=XF(s);let a="";if(r)if(0===s||1===ue(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${WF(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=TM("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function nL(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const rL={kernelName:yn,backendName:"webgl",kernelFunc:nL};function sL(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=nL({inputs:{x:r},backend:n}),l=nL({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const aL={kernelName:Nt,backendName:"webgl",kernelFunc:sL},iL="return (a < 0.) ? b * a : a;",oL="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",lL={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",qs(a,"float32")),o=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tL(oL,s.shape,i.shape):new QM(iL,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},uL="return (a < 0.) ? b * a : a;",cL="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",hL={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tL(cL,r.shape,s.shape):new QM(uL,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},pL="if (isnan(x)) return x;";function dL({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new WM(i.shape,t):new $M(i.shape,e),o.runWebGLProgram(u,[i],l)}}function fL({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new QM(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],Sa(n.dtype,r.dtype))})),a=sL({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||Sa(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Xm(e):e,r="string"===l.dtype?Xm(t):t,[a,i]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let p;return p=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new tL(t,l.shape,u.shape,n):new QM(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function mL(e,t=!1){if("linear"===e)return t?LM:AM;if("relu"===e)return t?BM:RM;if("elu"===e)return t?zM:DM;if("relu6"===e)return t?UM:FM;if("prelu"===e)return t?cL:uL;if("leakyrelu"===e)return t?oL:iL;if("sigmoid"===e)return t?VM:MM;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class gL{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=XF(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const yL={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class bL{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=il(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const xL="return a * b;";function wL(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Sa(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new bL(yL.REAL,r.shape,s.shape),i=new bL(yL.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=sL({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=KP(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tL(xL,r.shape,s.shape):new QM(xL,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const vL={kernelName:Zn,backendName:"webgl",kernelFunc:wL};function TL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=ue(s.shape),l=xe(a,o),u=ue(l);ie(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||pF(s.shape,l)||null!==c.texture&&pF(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[oF(e.shape),...lF(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[oF(t),...lF(t)],i=new IM(a,r),o=[r],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,i)}const kL={kernelName:br,backendName:"webgl",kernelFunc:TL};class IL{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${de(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class SL{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function _L(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=em(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new IL({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new IL({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new SL({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class NL{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=WF(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class EL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=WF(this.rank),s=vM("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function $L(e,t,n){const r=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EL(e.shape,t):new NL(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function CL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=we(s,e.shape);let o=i;const l=ah(o,a),u=null!=l;let c=e;u&&(c=$L(e,l,r),o=oh(o.length,a)),sh("sum",o,a);const[h,p]=nh(c.shape,o);let d=h;n&&(d=rh(h,i));const f=ue(p),m=TL({inputs:{x:c},attrs:{shape:[ue(e.shape)/f,f]},backend:r}),g=_L(m,_a(e.dtype),"sum",r),y=TL({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const AL={kernelName:zr,backendName:"webgl",kernelFunc:CL};function OL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=xM(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=$L(s,a,i);return u}const DL={kernelName:os,backendName:"webgl",kernelFunc:OL},RL=1e3;function FL({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ue(m),b=ue(g),x=il(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);ie(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,h,d]:[y,d,h],v=r?[b,f,p]:[b,p,f],T=TL({inputs:{x:e},backend:s,attrs:{shape:w}}),k=TL({inputs:{x:t},backend:s,attrs:{shape:v}}),I=[T,k],S=Math.max(y,b),_=n?T.shape[1]:T.shape[2],N=null!=a,E=null!=i,$="leakyrelu"===l,C=null!=l?mL(l,!0):null;let A;if((1===d||1===f)&&_>RL&&!1===(N||E||$||null!=C)){let e=T,t=k;n&&(e=OL({inputs:{x:T},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=OL({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const a=1===f;let i=e;1!==f&&(i=TL({inputs:{x:e},backend:s,attrs:{shape:[S,_,1]}}),I.push(i));const o=1===f?2:1;let l=t;a&&(l=TL({inputs:{x:t},backend:s,attrs:{shape:[S,1,_]}}),I.push(l));const u=wL({inputs:{a:i,b:l},backend:s});A=CL({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const l=Sa(e.dtype,t.dtype),u=new gL(w,v,[S,d,f],n,r,N,C,E,$),c=[T,k];if(null!=a&&c.push(a),E&&c.push(i),$){const e=s.makeTensorInfo([],"float32",qs(o,"float32"));c.push(e),I.push(e)}A=s.runWebGLProgram(u,c,l)}const O=TL({inputs:{x:A},backend:s,attrs:{shape:x}});I.push(A);for(const e of I)s.disposeIntermediateTensorInfo(e);return O}const PL={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return FL({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},ML="return abs(x);",LL={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=aM(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new WM(r.shape,ML):new $M(r.shape,ML),n.runWebGLProgram(s,[r],r.dtype)}},zL=dL({opSnippet:CM+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),BL={kernelName:tt,backendName:"webgl",kernelFunc:zL},UL=dL({opSnippet:CM+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),VL={kernelName:nt,backendName:"webgl",kernelFunc:UL},WL="return a + b;",GL=fL({opSnippet:WL,packedOpSnippet:WL,supportsComplex:!0,cpuKernelImpl:_P}),jL={kernelName:rt,backendName:"webgl",kernelFunc:GL};class HL{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class qL{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const KL={kernelName:st,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return nL({inputs:{x:s[0]},backend:r});if(s.length>Xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>Sa(e,t))),i=s.map((e=>e.shape)),o=Xe().getBool("WEBGL_PACK")?new qL(s[0].shape,i):new HL(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},XL={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=we(a,s.shape);let u=l;const c=ah(u,o);let h=s;null!=c&&(h=OL({inputs:{x:s},backend:n,attrs:{perm:c}}),u=oh(u.length,o)),sh("all",u,o);const[p,d]=nh(h.shape,u),f=TL({inputs:{x:h},backend:n,attrs:{shape:[-1,ue(d)]}}),m=_L(f,f.dtype,"all",n);let g;return g=TL(i?{inputs:{x:m},backend:n,attrs:{shape:rh(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},YL={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=we(a,s.shape);let u=l;const c=ah(u,o);let h=s;null!=c&&(h=OL({inputs:{x:s},backend:n,attrs:{perm:c}}),u=oh(u.length,o)),sh("any",u,o);const[p,d]=nh(h.shape,u),f=TL({inputs:{x:h},backend:n,attrs:{shape:[-1,ue(d)]}}),m=_L(f,f.dtype,"any",n);let g;return g=TL(i?{inputs:{x:m},backend:n,attrs:{shape:rh(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class ZL{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class JL{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ie(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=WF(o),u=TM("coords",o);let c,h;if(1===a){h=o+1;const e=WF(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=TM("sourceLocR",h-1).concat("inIdx.r"),g=TM("sourceLocG",h-1).concat("inIdx.g"),y=TM("sourceLocB",h-1).concat("inIdx.b"),b=TM("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,T=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${T}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function QL(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=em(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new ZL(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=QL(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function ez(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=em(s[s.length-1]),i=new JL(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=ez(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function tz(e,t,n,r){const s=[n];if(sh("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Xe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=nh(i.shape,s),u=ue(l),c=TL({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=QL(e,c,r);n.push(h);const p=TL({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return ez(e,t,r)}const nz={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=we(a,s.shape);const o=ah(i,s.shape.length);let l=s;const u=[];null!=o&&(l=OL({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=oh(i.length,l.shape.length)),sh("argMax",[i[0]],l.shape.length);const c=tz(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},rz={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=we(a,s.shape);const o=ah(i,s.shape.length);let l=s;const u=[];null!=o&&(l=OL({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=oh(i.length,l.shape.length)),sh("argMin",[i[0]],l.shape.length);const c=tz(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},sz=dL({opSnippet:CM+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),az={kernelName:ut,backendName:"webgl",kernelFunc:sz},iz=dL({opSnippet:CM+"return log(x + sqrt(x * x + 1.0));"}),oz={kernelName:ct,backendName:"webgl",kernelFunc:iz},lz=dL({opSnippet:CM+"\n  return atan(x);\n"}),uz={kernelName:ht,backendName:"webgl",kernelFunc:lz},cz=fL({opSnippet:JM+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+eL+"\n  return result;\n"}),hz={kernelName:dt,backendName:"webgl",kernelFunc:cz},pz=dL({opSnippet:CM+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),dz={kernelName:pt,backendName:"webgl",kernelFunc:pz};class fz{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class mz{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),T=a%4,k=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===T}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===T}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===T}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}const gz={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;_F(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ie(rc(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=qu(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&pe(u.inShape,u.outShape))return nL({inputs:{x:s},backend:n});const c=new fz(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},yz={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Ku(s.shape,a,i,[1,1,1],o,l,u),h=new mz(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class bz{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xz{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wz={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Ku(i.shape,o,l,[1,1,1],u,c),p=new xz(h);return n.runWebGLProgram(p,[s],i.dtype)}},vz={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;_F([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=qu(i.shape,o,l,1,u),h=new bz(c);return n.runWebGLProgram(h,[s],i.dtype)}},Tz={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return FL({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class kz{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],il(e,t),il(e,n);let i="0.0";null!=r&&(il(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(il(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Iz{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],il(e,t),il(e,n);let i="vec4(0.0)";null!=r&&(il(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(il(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Sz={kernelName:pn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;ie(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=Xe().getBool("WEBGL_PACK_NORMALIZATION")?new Iz(r.shape,s.shape,a.shape,c,h,l):new kz(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class _z{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=WF(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Nz.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Nz[t]} = start[${t}] + coords.${Nz[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Nz=["x","y","z","w","u","v"];class Ez{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=WF(this.rank),n=TM("coords",this.rank),r=TM("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function $z(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=mu(s,a,i);if(tu(s,o,l),0===ue(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=iM(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=du(s.shape,o,l);if(u||!c){const e=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ez(l):new _z(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=fu(t,Fe(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const Cz={kernelName:Or,backendName:"webgl",kernelFunc:$z},Az={kernelName:xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;ie(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=nm(s.shape,a,o),u=rm(l.length,a.length),c=sm(s.shape,a,o),h=am(i,a.length),p=im(c,i,a.length),d=[],f=TL({inputs:{x:s},backend:n,attrs:{shape:l}}),m=OL({inputs:{x:f},backend:n,attrs:{perm:u}}),g=TL({inputs:{x:m},backend:n,attrs:{shape:c}}),y=$z({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Oz={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=NP(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},Dz={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Xe().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=$P(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new tL("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new QM("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}},Rz={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=il(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Fz=fL({opSnippet:"return float(a != b);",cpuKernelImpl:YP,dtype:"bool"}),Pz={kernelName:Qn,backendName:"webgl",kernelFunc:Fz};function Mz(e){const{inputs:t,backend:n}=e,{input:r}=t;return nL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Lz={kernelName:mr,backendName:"webgl",kernelFunc:Mz},zz={kernelName:It,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return nL({inputs:{x:a},backend:r});const t=Kh(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=sL({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=Mz({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!_e(a.dtype,i)){const e=nL({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=CP(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new $M(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",Te("bool",1)),t=Fz({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},Bz="return ceil(x);",Uz=dL({opSnippet:Bz,packedOpSnippet:Bz,cpuKernelImpl:AP}),Vz={kernelName:St,backendName:"webgl",kernelFunc:Uz};class Wz{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Gz{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const jz={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=Xe().getBool("WEBGL_PACK_CLIP")?new Gz(s.shape):new Wz(s.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class Hz{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function qz(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Kz={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new Hz(r.shape),i=[qz(r,s.complexTensorInfos.real),qz(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class Xz{constructor(e){this.outputShape=[],this.outputShape=qf(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Yz{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=qf(e,t);const n=this.outputShape,r=n.length,s=WF(r),a=TM("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${Zz(i,l,t)}),\n            vec2(${Zz(u,l,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${Zz(i,l,d)}),\n          vec2(${Zz(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function Zz(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Jz(e){const{inputs:t,backend:n}=e,{input:r}=t;return nL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Qz={kernelName:xn,backendName:"webgl",kernelFunc:Jz};function eB(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Mz({inputs:{input:e},backend:n}))),s=e.map((e=>Jz({inputs:{input:e},backend:n}))),a=eB(r,t,n),i=eB(s,t,n),o=sL({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=ue(e.shape.slice(t));return TL({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=qf(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=OP(a,i,r,o),u=qf(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>ue(e.shape)>0)),i=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new $M(e[0].shape,PM):new WM(e[0].shape,PM);return n.runWebGLProgram(t,e,r)}const o=Xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(eB(s,t,n))}const r=eB(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new Yz(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=qf(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>TL({inputs:{x:e},attrs:{shape:[-1,ue(e.shape.slice(t))]},backend:n}))),outShape:r}}(a,t,n),c=new Xz(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=TL({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function tB(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=we(s,t[0].shape)[0];Hf(t.map((e=>e.shape)),a);const i=qf(t.map((e=>e.shape)),a);if(0===ue(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ue(e.shape)>0));return 1===o.length?nL({inputs:{x:o[0]},backend:n}):eB(o,a,n)}const nB={kernelName:$t,backendName:"webgl",kernelFunc:tB};class rB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class sB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=XF(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?te(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",d="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,d="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${d}\n         setOutput(result);\n       }\n     `}}class iB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=XF(this.outputShape.length);const{dataFormat:n}=t,r=EF(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function oB(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function lB({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a){const e=oB(a.shape,d);null!=e&&(a=TL({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(null!=s){const e=oB(s.shape,d);null!=e&&(s=TL({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if((1!==h&&1!==p||!(c>RL))&&u.isPacked&&d&&null!=u.texture&&l[2]%2!=0&&pe(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,ie(pF(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const d=TL({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=FL({a:h,b:d,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=r.texData.get(g.dataId);ie(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,y.shape=n.outShape,f=nL({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const l=n.outHeight*n.outWidth,u=TL({inputs:{x:e},backend:r,attrs:{shape:d?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=TL({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=FL({a:d?u:c,b:d?c:u,transposeA:!d,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=TL({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function uB({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[n.batchSize,m,g],b=[];if(null!=a){const e=oB(a.shape,f);null!=e&&(a=TL({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=oB(s.shape,f);null!=e&&(s=TL({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=TL({inputs:{x:t},backend:r,attrs:{shape:[1,m,ue(t.shape)/m]}});b.push(x);const w=new iB(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],T=r.runWebGLProgram(w,[e],"float32",v),k=TL({inputs:{x:T},backend:r,attrs:{shape:y}});b.push(T),b.push(k);const I=null!=s,S=null!=a,_="leakyrelu"===o,N=o?mL(o,!0):null,E=new gL(f?k.shape:x.shape,f?x.shape:k.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,I,N,S,_),$=f?[k,x]:[x,k];if(s&&$.push(s),S&&$.push(a),_){const e=r.makeTensorInfo([],"float32",qs(i,"float32"));$.push(e),b.push(e)}const C=r.runWebGLProgram(E,$,"float32"),A=TL({inputs:{x:C},backend:r,attrs:{shape:n.outShape}});b.push(C);for(const e of b)r.disposeIntermediateTensorInfo(e);return A}const cB={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=ac(l),p=Xu(s.shape,a.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&Xe().getBool("WEBGL_EXP_CONV")){const e=new aB(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];d=n.runWebGLProgram(e,[s,a],"float32",t)}else if(Xe().getBool("WEBGL_CONV_IM2COL"))d=uB({x:s,filter:a,convInfo:p,backend:n});else{const e=new rB(p);d=n.runWebGLProgram(e,[s,a],"float32")}else d=lB({x:s,filter:a,convInfo:p,backend:n});const f=TL({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class hB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const mB={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=ac(l),p=Xu(s.shape,c,i,1,o,u,!1,h),d=new hB(p);return n.runWebGLProgram(d,[s,a],"float32")}};class gB{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=XF(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const yB={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=ac(u),p=Xu(i,a.shape,o,1,l,c,!1,h);if(Xe().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new gB(p);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new pB(p);return n.runWebGLProgram(e,[s,a],"float32")}}},bB={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Yu(s.shape,a.shape,i,l,o),c=new sB(u);return n.runWebGLProgram(c,[s,a],"float32")}},xB={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=Yu(s.shape,l,i,1,o),c=new dB(u);return n.runWebGLProgram(c,[s,a],"float32")}},wB={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=Yu(l,a.shape,o,1,i),c=new fB(u);return n.runWebGLProgram(c,[s,a],"float32")}},vB=dL({opSnippet:pL+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${eL}\n  return result;\n`}),TB={kernelName:Pt,backendName:"webgl",kernelFunc:vB},kB=dL({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),IB={kernelName:Mt,backendName:"webgl",kernelFunc:kB};class SB{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const _B={kernelName:Bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new SB(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};var NB;!function(e){e.Prod="*",e.Sum="+"}(NB||(NB={}));class EB{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===NB.Prod?"1.0":"0.0",i=n?a:`getX(${$B(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${WF(s)} coords = getOutputCoords();\n        int end = ${CB(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${CB(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${$B(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function $B(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function CB(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function AB(e,t,n,r,s,a){const i=t.shape.length,o=ah([r],i);let l=t;null!=o&&(l=OL({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=oh(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=nL({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new EB(e,l.shape,!1,a),s=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new EB(e,l.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=OL({inputs:{x:h},backend:n,attrs:{perm:ih(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const OB={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return AB(NB.Prod,s,n,a,i,o)}},DB={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return AB(NB.Sum,s,n,a,i,o)}},RB={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=NP(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=EP(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class FB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const PB={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*a,u=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new FB("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class MB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=XF(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class LB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=XF(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?te(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const zB={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),ie(rc(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Xu(s.shape,a.shape,i,c,o,u,!0);let p;p=Xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new LB(h):new MB(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",d)}};class BB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VB={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Xu(s.shape,c,i,o,l,u,!0),p=new BB(h);return n.runWebGLProgram(p,[s,a],"float32")}},WB={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Xu(c,a.shape,i,o,l,u,!0),p=new UB(h);return n.runWebGLProgram(p,[s,a],"float32")}};class GB{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const jB={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=ue(r.shape),i=TL({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new GB(a),l=n.runWebGLProgram(o,[i],i.dtype),u=TL({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class HB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const qB={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Hu(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new HB(u);c=n.runWebGLProgram(h,[s,a],"float32");const p=TL({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},KB={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Nm(s,a.length);$m(i.length,l,a);const{path:u,steps:c}=Cm(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Em(d,l[t]);let s;Am(e)?s=a[t]:(s=OL({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);pe(s.shape,i)||(s=TL({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===p?p=s:(p=wL({inputs:{a:s,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=CL({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},XB=dL({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),YB={kernelName:Qt,backendName:"webgl",kernelFunc:XB},ZB={kernelName:en,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tL("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new QM("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},JB=fL({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:DP}),QB={kernelName:nn,backendName:"webgl",kernelFunc:JB},eU=dL({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${um};\n  float a1 = ${cm};\n  float a2 = ${hm};\n  float a3 = ${pm};\n  float a4 = ${dm};\n  float a5 = ${fm};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),tU={kernelName:tn,backendName:"webgl",kernelFunc:eU},nU=dL({opSnippet:pL+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:RP,dtype:"float32"}),rU={kernelName:rn,backendName:"webgl",kernelFunc:nU};function sU(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(ie(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),TL({inputs:{x:a},backend:r,attrs:{shape:o}})}const aU={kernelName:sn,backendName:"webgl",kernelFunc:sU},iU="return exp(x) - 1.0;",oU=dL({opSnippet:iU,packedOpSnippet:iU,cpuKernelImpl:FP}),lU={kernelName:an,backendName:"webgl",kernelFunc:oU};class uU{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function cU(e,t,n){const r=n.texData.get(e.dataId),s=ue(e.shape),a=e.shape[e.shape.length-1],i=TL({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new uU("real",o,t),u=new uU("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=sL({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=TL({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const hU={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return cU(r,!1,n)}};class pU{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function dU(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Oe(s),"string"===a){const e=ke(a,ue(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new pU(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const fU={kernelName:ln,backendName:"webgl",kernelFunc:dU};class mU{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const gU={kernelName:un,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new mU(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},yU="return floor(x);",bU=dL({opSnippet:yU,packedOpSnippet:yU,cpuKernelImpl:PP}),xU={kernelName:cn,backendName:"webgl",kernelFunc:bU},wU=fL({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),vU={kernelName:hn,backendName:"webgl",kernelFunc:wU};class TU{constructor(e){this.variableNames=["A"];const t=EF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class kU{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=EF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const IU={kernelName:fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];if(o||i){const e=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=SU&&e===_U||(_U=e,SU=document.createElement("canvas").getContext("2d",{willReadFrequently:_U})),SU.canvas.width=l,SU.canvas.height=u,SU.drawImage(s,0,0,l,u),s=SU.canvas}const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=kR.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=Xe().getBool("WEBGL_PACK")?new kU(h):new TU(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let SU,_U=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const NU={kernelName:ys,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=ac(c),g=Xu(s.shape,a.shape,l,h,u,p,!1,m);let y;const b=[],x=null!=i,w=null!=o,v="leakyrelu"===d,T=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=TL({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",qs(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Xe().getBool("WEBGL_EXP_CONV")){const e=d?mL(d,!0):null,t=new aB(g,x,e,w,v),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=T();y=n.runWebGLProgram(t,s,"float32",r)}else if(Xe().getBool("WEBGL_CONV_IM2COL"))y=uB({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=d?mL(d,!1):null,t=new rB(g,x,e,w,v),r=T();y=n.runWebGLProgram(t,r,"float32")}else y=lB({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const k=TL({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),k}},EU={kernelName:bs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),ie(rc(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Xu(s.shape,a.shape,l,m,u,h,!0),y=Xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?mL(p,y):null,x=[s,a],w=null!=i,v=null!=o,T="leakyrelu"===p;if(w&&x.push(i),v&&x.push(o),T){const e=n.makeTensorInfo([],"float32",qs(d,"float32"));x.push(e),f.push(e)}let k;k=y?new LB(g,w,b,v,T):new MB(g,w,b,v,T);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(k,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class $U{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=WF(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const CU={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=ue(r.shape),[l,u,c,h]=Xl(r,s),p=TL({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),d=TL({inputs:{x:r},backend:n,attrs:{shape:[ue(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=MP(e,t,r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new $U(i,h,[u,c],r.shape),m=n.runWebGLProgram(f,[d,p],d.dtype),g=TL({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class AU{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=WF(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function OU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=we(i,s.shape)[0];if(Xe().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];ie(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=Km(s,a,l,o),c=ue(a.shape),h=[],p=TL({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=TL({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(d);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=LP(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new AU(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=TL({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const DU={kernelName:dn,backendName:"webgl",kernelFunc:OU},RU=fL({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:zP,dtype:"bool"}),FU={kernelName:mn,backendName:"webgl",kernelFunc:RU},PU=fL({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:BP}),MU={kernelName:gn,backendName:"webgl",kernelFunc:PU},LU={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return cU(r,!0,n)}},zU=dL({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),BU={kernelName:wn,backendName:"webgl",kernelFunc:zU},UU=dL({opSnippet:"return float(isinf(x));",dtype:"bool"}),VU={kernelName:vn,backendName:"webgl",kernelFunc:UU},WU=dL({opSnippet:"return float(isnan(x));",dtype:"bool"}),GU={kernelName:Tn,backendName:"webgl",kernelFunc:WU},jU=fL({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:UP,dtype:"bool"}),HU={kernelName:In,backendName:"webgl",kernelFunc:jU},qU=fL({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:VP,dtype:"bool"}),KU={kernelName:Sn,backendName:"webgl",kernelFunc:qU},XU={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=WP(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},YU=dL({opSnippet:pL+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:GP}),ZU={kernelName:Nn,backendName:"webgl",kernelFunc:YU},JU=dL({opSnippet:pL+"\n  return log(1.0 + x);\n"}),QU={kernelName:En,backendName:"webgl",kernelFunc:JU},eV=fL({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),tV={kernelName:$n,backendName:"webgl",kernelFunc:eV},nV=dL({opSnippet:"return float(!(x >= 1.0));"}),rV={kernelName:Cn,backendName:"webgl",kernelFunc:nV},sV=fL({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),aV={kernelName:An,backendName:"webgl",kernelFunc:sV};class iV{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class oV{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const lV={kernelName:Fn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=Xe().getBool("WEBGL_PACK_NORMALIZATION")?new oV(s.shape,a,i,o,l):new iV(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class uV{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const cV={kernelName:Pn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new uV(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function hV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=we(a,s.shape);let u=l;const c=ah(u,o),h=null!=c,p=n.shouldExecuteOnCPU([s]);let d=s;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=xM(e,s.shape,s.dtype,c,t);d=n.makeTensorInfo(t,s.dtype),n.texData.get(d.dataId).values=r}else d=$L(s,c,n);u=oh(u.length,o)}sh("max",u,o);const[f,m]=nh(d.shape,u);let g,y=f;if(i&&(y=rh(f,l)),p){const e=n.texData.get(d.dataId).values,t=jP(e,ue(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=ue(t),a=TL({inputs:{x:e},attrs:{shape:[ue(e.shape)/s,s]},backend:r}),i=_L(a,e.dtype,"max",r),o=TL({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const pV={kernelName:Ln,backendName:"webgl",kernelFunc:hV},dV=fL({opSnippet:JM+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+eL+"\n  return result;\n",cpuKernelImpl:HP}),fV={kernelName:zn,backendName:"webgl",kernelFunc:dV},mV={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;_F(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ie(rc(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=qu(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&pe(u.inShape,u.outShape))return nL({inputs:{x:s},backend:n});const c=new fz(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},gV={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Ku(s.shape,a,i,[1,1,1],o,u,l),h=new mz(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class yV{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bV{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const xV={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Ku(i.shape,o,l,[1,1,1],u,c),p=new mz(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new bV(h),m=n.runWebGLProgram(f,[s,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},wV={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;_F([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=qu(o.shape,l,u,1,c,h),d=new fz(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new yV(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},vV={kernelName:Gn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;ie(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];ie(rc(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=qu(r.shape,s,a,u,i),[h,p]=function(e,t,n,r){let s=new fz(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new fz(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,p]}},TV={kernelName:jn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=we(a,r.shape);let u=l;const c=ah(u,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=xM(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=$L(r,c,i);d.push(f),u=oh(u.length,o)}sh("sum",u,o);const[m,g]=nh(f.shape,u);let y=m;s&&(y=rh(m,l));const b=function(e,t,n,r){const s=ue(t),a=TL({inputs:{x:e},attrs:{shape:[ue(e.shape)/s,s]},backend:r}),i=_L(a,"float32","mean",r),o=TL({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},kV={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=we(a,s.shape);let u=l;const c=ah(u,o);let h=s;null!=c&&(h=OL({inputs:{x:s},backend:n,attrs:{perm:c}}),u=oh(u.length,s.shape.length)),sh("min",u,o);const[p,d]=nh(h.shape,u),f=TL({inputs:{x:h},backend:n,attrs:{shape:[-1,ue(d)]}}),m=_L(f,f.dtype,"min",n);let g;return g=TL(i?{inputs:{x:m},backend:n,attrs:{shape:rh(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},IV=fL({opSnippet:JM+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+eL+"\n  return result;\n",cpuKernelImpl:qP}),SV={kernelName:qn,backendName:"webgl",kernelFunc:IV};class _V{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=WF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class NV{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=WF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=TM("rc",r),l=TM("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const EV={kernelName:Kn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NV(r.shape,s,a):new _V(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},$V=fL({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+eL+"\n  return result;\n"}),CV={kernelName:Xn,backendName:"webgl",kernelFunc:$V};class AV{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const OV=fL({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),DV={kernelName:Zt,backendName:"webgl",kernelFunc:OV},RV="return a - b;",FV=fL({opSnippet:RV,packedOpSnippet:RV,supportsComplex:!0,cpuKernelImpl:gM}),PV={kernelName:ts,backendName:"webgl",kernelFunc:FV};function MV(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=we([a],s.shape),o=hV({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=rh(o.shape,i),u=TL({inputs:{x:o},backend:n,attrs:{shape:l}}),c=FV({inputs:{a:s,b:u},backend:n}),h=nU({inputs:{x:c},backend:n}),p=CL({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=TL({inputs:{x:p},backend:n,attrs:{shape:l}}),f=OV({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const LV={kernelName:Vr,backendName:"webgl",kernelFunc:MV},zV={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:MV({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new AV(u,c,a),p=[[i]],d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},BV=CM+"\n  return -x;\n",UV={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=XP(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new WM(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new $M(r.shape,BV),n.runWebGLProgram(s,[r],r.dtype)}},VV=ef,WV={kernelName:er,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=VV(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},GV=tf,jV={kernelName:tr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=GV(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},HV=nf,qV={kernelName:nr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=HV(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class KV{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const XV={kernelName:sr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r,u=ue(s.shape),c=new KV(u,i,o,l),h=TL({inputs:{x:s},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const d=TL({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(p),d}};function YV(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Mz({inputs:{input:r},backend:n}),t=YV({inputs:{x:e},backend:n}),s=Jz({inputs:{input:r},backend:n}),a=YV({inputs:{x:s},backend:n}),i=sL({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return dU({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const ZV={kernelName:ps,backendName:"webgl",kernelFunc:YV},JV={kernelName:rr,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=Mz({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Jz({inputs:{input:s},backend:r}),i=YV({inputs:{x:a},backend:r}),o=sL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return dU({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},QV={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return sU({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=tB({inputs:t.map((e=>{const t=sU({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class eW{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=WF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class tW{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=WF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=TM("rc",r),l=TM("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const nW=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===ue(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return dU({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tW(s.shape,a,i):new eW(s.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[s],s.dtype,l)},rW={kernelName:ir,backendName:"webgl",kernelFunc:nW},sW=fL({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+eL+"\n  return result;\n"}),aW={kernelName:lr,backendName:"webgl",kernelFunc:sW},iW={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=we(a,s.shape);let c=u;const h=ah(c,o);let p,d=s;if(null!=h&&(d=OL({inputs:{x:s},backend:n,attrs:{perm:h}}),c=oh(c.length,o),l.push(d)),sh("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:s}=ZP(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=nh(d.shape,c),r=ue(t),a=TL({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),i=_L(a,_a(s.dtype),"prod",n);p=TL({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(p);const e=rh(p.shape,u);p=TL({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},oW={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[p,d,f]=JP(l,u,c,a.shape,a.dtype,h,i.shape,o),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}},lW={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=QP(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}},uW={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),p=o.map((e=>n.readSync(e.dataId))),d=o.map((e=>e.shape)),[f,m]=eM(u,s.shape,c,a.shape,a.dtype,h,i.shape,p,d,l);return n.makeTensorInfo(f,a.dtype,m)}},cW=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=tM(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},hW={kernelName:fr,backendName:"webgl",kernelFunc:cW},pW=dL({opSnippet:"return 1.0 / x;"}),dW={kernelName:gr,backendName:"webgl",kernelFunc:pW},fW=dL({opSnippet:CM+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),mW={kernelName:yr,backendName:"webgl",kernelFunc:fW},gW=dL({opSnippet:CM+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yW={kernelName:kr,backendName:"webgl",kernelFunc:gW};class bW{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class xW{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const wW={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=Xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xW(s.shape,l,u,a,i):new bW(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class vW{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const TW={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new vW(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class kW{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class IW{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const SW={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=Xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new IW(s.shape,l,u,a,i):new kW(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class _W{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const NW={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new _W(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class EW{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=WF(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class $W{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=TM("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=WF(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const CW={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=we(a,s.shape);if(0===i)return nL({inputs:{x:s},backend:n});const l=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $W(s.shape,o):new EW(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class AW{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const OW={kernelName:ms,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new AW(r.shape,a),[u,c]=tm(i,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},DW=dL({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),RW={kernelName:Sr,backendName:"webgl",kernelFunc:DW},FW=dL({opSnippet:"return inversesqrt(x);",cpuKernelImpl:nM}),PW={kernelName:_r,backendName:"webgl",kernelFunc:FW};class MW{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=WF(s.length),u=WF(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const d=`getUpdates(${p})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class LW{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=WF(s.length),u=WF(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const d=`getUpdates(${p})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${d};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const zW={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Jl(0,s,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const d=TL({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=TL({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Xe().getBool("WEBGL_PACK")?new LW(l,o,d.shape.length,f.shape.length,c,p):new MW(l,o,d.shape.length,f.shape.length,c,p);const y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=TL({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class BW{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===Xe().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const UW={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new BW(s.shape[0],s.shape[1],a.shape[1],i),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",l)}};class VW{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=WF(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const WW={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new VW(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],Sa(s.dtype,a.dtype))}},GW=dL({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${om};\n  float scale = ${lm};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),jW={kernelName:Ar,backendName:"webgl",kernelFunc:GW},HW=dL({opSnippet:pL+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:sM}),qW={kernelName:Pr,backendName:"webgl",kernelFunc:HW},KW=dL({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),XW={kernelName:Fr,backendName:"webgl",kernelFunc:KW},YW=dL({opSnippet:pL+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${eL}\n  return result;\n`}),ZW={kernelName:Dr,backendName:"webgl",kernelFunc:YW},JW=dL({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),QW={kernelName:Rr,backendName:"webgl",kernelFunc:JW},eG=dL({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),tG={kernelName:Mr,backendName:"webgl",kernelFunc:eG},nG={kernelName:Br,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;ie(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=nW({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=nm(c.shape,a,o,!1),p=rm(h.length,a.length,!1),d=sm(c.shape,a,o,!1),f=TL({inputs:{x:c},backend:n,attrs:{shape:h}}),m=OL({inputs:{x:f},backend:n,attrs:{perm:p}}),g=TL({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},rG={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=oM(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},sG={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=lM(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},aG={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=uM(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},iG={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=uM(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},oG={kernelName:qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=Jl(0,s,o);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=Js(n.readSync(i.dataId)[0]),d=rM(e,t,o,p,c,u,l,h,r,!1);return n.makeTensorInfo(o,d.dtype,d.values)}const d=new MW(u,l,s.shape.length,a.shape.length,h,[p,1],!1),f=n.runWebGLProgram(d,[a,s,i],a.dtype),m=TL({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},lG={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=we(i,s.shape)[0],l=Dm(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=$z({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},uG="return sqrt(x);",cG=dL({opSnippet:uG,packedOpSnippet:uG,cpuKernelImpl:cM}),hG={kernelName:Lr,backendName:"webgl",kernelFunc:cG},pG=dL({opSnippet:"return x * x;"}),dG={kernelName:Xr,backendName:"webgl",kernelFunc:pG},fG="return (a - b) * (a - b);",mG=fL({opSnippet:fG,packedOpSnippet:fG}),gG={kernelName:Kr,backendName:"webgl",kernelFunc:mG},yG={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=Xm(n.readSync(s.dataId)),i=hM(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}},bG={kernelName:ds,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=CM+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new $M(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class xG{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=WF(n.length),a=WF(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const wG={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=gu(s.shape,a,i,o,l,u,c,h,p);let v;if(m)v=TL({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){ie(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ru(b,x,w),t=$z({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=TL({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=So(s.shape,s.dtype,e),r=pM(d,t,w,b);v=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new xG(b,w,d);v=n.runWebGLProgram(e,[s],s.dtype)}const T=TL({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),T}},vG={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=dM(p,d,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},TG={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=fM(o,l,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},kG={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=mM(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},IG=dL({opSnippet:"return tan(x);"}),SG={kernelName:ns,backendName:"webgl",kernelFunc:IG},_G=dL({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),NG={kernelName:rs,backendName:"webgl",kernelFunc:_G},EG={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Jl(0,a,s.shape),p=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,a.dtype);const d=TL({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=TL({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=TL({inputs:{x:s},backend:n,attrs:{shape:p}}),g=new MW(l,o,d.shape.length,f.shape.length,c,p,!1,!0),y=n.runWebGLProgram(g,[f,d,m],m.dtype),b=TL({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class $G{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=WF(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function CG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Js(e))):e,r=So(s.shape,s.dtype,t),i=yM(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new $G(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const AG={kernelName:ss,backendName:"webgl",kernelFunc:CG};class OG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class DG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function RG(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function FG(e){let t=1;for(;t<e;)t*=2;return t}const PG={kernelName:as,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=Xe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Xe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>l){const e=n.readSync(s.dataId),[t,r]=bM(e,u,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,dU({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(s):s,f=ue(u)/c,m=TL({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&RG(n,d);const g=FG(a),y=FG(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const s=x(),a=new OG(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),RG(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new DG([f,e/2]),s=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(r,t,"int32",s),RG(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=$z({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),RG(n,v);let T=OU({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});RG(n,m);const k=u.slice(0,-1);k.push(a),v=b,b=TL({inputs:{x:b},attrs:{shape:k},backend:n}),RG(n,v);const I=T;return T=TL({inputs:{x:T},attrs:{shape:k},backend:n}),RG(n,I),[T,b]}};class MG{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const LG={kernelName:is,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,p,d]=s.shape,[f,m]=null!=u?u:[h,p],g=new MG(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[s,a],"float32")}},zG={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;_F(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=wM(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},BG={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[a]=e;const t=$z({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=TL({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class UG{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const VG={kernelName:cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=ah([u],o);let h=s;null!=c&&(h=OL({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=oh(1,o)[0]);const p=qm(h.shape,u,i),d=ue([h.shape[u]]),f=TL({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=_a(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=Hm(o,a),c=new UG({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const p=cW({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=CG({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,t,d,s,a)},y=TL({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const e=ih(c);b=OL({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},WG=[PL,LL,BL,VL,jL,KL,XL,YL,nz,rz,az,oz,uz,hz,dz,gz,yz,wz,vz,Tz,Sz,Az,Oz,Dz,Rz,zz,Vz,jz,aL,Kz,nB,cB,mB,yB,bB,xB,wB,TB,IB,_B,OB,DB,RB,PB,zB,VB,WB,jB,qB,KB,YB,ZB,QB,tU,rU,aU,lU,hU,fU,gU,xU,vU,IU,NU,EU,CU,DU,FU,MU,rL,LU,Qz,BU,VU,GU,lL,HU,KU,XU,ZU,QU,tV,rV,aV,lV,cV,pV,fV,mV,gV,xV,wV,vV,TV,kV,SV,EV,CV,zV,vL,UV,WV,jV,qV,Pz,XV,JV,QV,rW,aW,hL,iW,oW,lW,uW,hW,Lz,DV,dW,mW,yW,kL,wW,TW,SW,NW,CW,OW,RW,PW,zW,UW,WW,jW,qW,XW,ZW,QW,Cz,LV,tG,nG,rG,sG,aG,iG,oG,lG,hG,dG,gG,yG,bG,wG,vG,TG,kG,PV,AL,SG,NG,EG,AG,PG,LG,DL,zG,BG,VG,ZV];for(const e of WG)_s(e);const GG={"tfjs-core":Ou,"tfjs-backend-cpu":pC,"tfjs-backend-webgl":XM,"tfjs-data":LN,"tfjs-layers":Dw,"tfjs-converter":A_,tfjs:"4.17.0"}},391:(e,t,n)=>{var r=n(180),s=n(181),a=n(31),i=n(67),o=n(214),l=n(717),u=n(801);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},180:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},717:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},214:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},67:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},31:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(s,a,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,p=l-1;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(i.random=e,t):e})(x,p,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=p&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=p&s+1],n=n*l+i[p&(i[s]=i[a=p&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[p&s]=p&(n^=19*t[p&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=d;try{o=n(234)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},234:()=>{},833:(module,exports,__webpack_require__)=>{"use strict";var __filename="/index.js",__dirname="/",__WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__,__WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__,_d=Object.create,En=Object.defineProperty,Od=Object.getOwnPropertyDescriptor,Id=Object.getOwnPropertyNames,Sd=Object.getPrototypeOf,Ad=Object.prototype.hasOwnProperty,L=(e,t)=>()=>(e&&(t=e(e=0)),t),me=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),ar=(e,t)=>{for(var n in t)En(e,n,{get:t[n],enumerable:!0})},qa=(e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of Id(t))!Ad.call(e,s)&&s!==n&&En(e,s,{get:()=>t[s],enumerable:!(r=Od(t,s))||r.enumerable});return e},Er=(e,t,n)=>(n=null!=e?_d(Sd(e)):{},qa(!t&&e&&e.__esModule?n:En(n,"default",{value:e,enumerable:!0}),e)),jt=e=>qa(En({},"__esModule",{value:!0}),e),Dn,sr,Yt,Ln,Fn=L((()=>{Dn=new Map,sr=[],Yt=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{let r=Dn.get(e);if(void 0===r)Dn.set(e,{backend:t,priority:n});else{if(r.priority>n)return;if(r.priority===n&&r.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){let t=sr.indexOf(e);-1!==t&&sr.splice(t,1);for(let t=0;t<sr.length;t++)if(Dn.get(sr[t]).priority<=n)return void sr.splice(t,0,e);sr.push(e)}}},Ln=async e=>{let t=0===e.length?sr:e,n=[];for(let e of t){let t=Dn.get(e);if(t){if(t.initialized)return t.backend;if(t.aborted)continue;let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(s){r||n.push({name:e,err:s}),t.aborted=!0}finally{delete t.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`)}})),ja=L((()=>{Fn()})),Ya,Xa=L((()=>{Ya="1.17.1"})),Ka,ur,Ho=L((()=>{Xa(),Ka="warning",ur={wasm:{},webgl:{},webgpu:{},versions:{common:Ya},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);Ka=e}},get logLevel(){return Ka}},Object.defineProperty(ur,"logLevel",{enumerable:!0})})),Z,Ja=L((()=>{Ho(),Z=ur})),Za,Qa,es=L((()=>{Za=(e,t)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];let r=n.getContext("2d");if(null!=r){let s,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],a=e.dims[3]):(s=e.dims[3],a=e.dims[2]);let i,o,l=void 0!==t?.format?t.format:"RGB",u=t?.norm;void 0===u||void 0===u.mean?i=[255,255,255,255]:"number"==typeof u.mean?i=[u.mean,u.mean,u.mean,u.mean]:(i=[u.mean[0],u.mean[1],u.mean[2],0],void 0!==u.mean[3]&&(i[3]=u.mean[3])),void 0===u||void 0===u.bias?o=[0,0,0,0]:"number"==typeof u.bias?o=[u.bias,u.bias,u.bias,u.bias]:(o=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(o[3]=u.bias[3]));let c=a*s,h=0,p=c,d=2*c,f=-1;"RGBA"===l?(h=0,p=c,d=2*c,f=3*c):"RGB"===l?(h=0,p=c,d=2*c):"RBG"===l&&(h=0,d=c,p=2*c);for(let t=0;t<a;t++)for(let n=0;n<s;n++){let s=(e.data[h++]-o[0])*i[0],a=(e.data[p++]-o[1])*i[1],l=(e.data[d++]-o[2])*i[2],u=-1===f?255:(e.data[f++]-o[3])*i[3];r.fillStyle="rgba("+s+","+a+","+l+","+u+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},Qa=(e,t)=>{let n,r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null==r)throw new Error("Can not access image data");{let s,a,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],a=e.dims[1],i=e.dims[3]):(s=e.dims[3],a=e.dims[2],i=e.dims[1]);let o,l,u=void 0!==t&&void 0!==t.format?t.format:"RGB",c=t?.norm;void 0===c||void 0===c.mean?o=[255,255,255,255]:"number"==typeof c.mean?o=[c.mean,c.mean,c.mean,c.mean]:(o=[c.mean[0],c.mean[1],c.mean[2],255],void 0!==c.mean[3]&&(o[3]=c.mean[3])),void 0===c||void 0===c.bias?l=[0,0,0,0]:"number"==typeof c.bias?l=[c.bias,c.bias,c.bias,c.bias]:(l=[c.bias[0],c.bias[1],c.bias[2],0],void 0!==c.bias[3]&&(l[3]=c.bias[3]));let h=a*s;if(void 0!==t&&(void 0!==t.format&&4===i&&"RGBA"!==t.format||3===i&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");let p=4,d=0,f=1,m=2,g=3,y=0,b=h,x=2*h,w=-1;"RGBA"===u?(y=0,b=h,x=2*h,w=3*h):"RGB"===u?(y=0,b=h,x=2*h):"RBG"===u&&(y=0,x=h,b=2*h),n=r.createImageData(s,a);for(let t=0;t<a*s;d+=p,f+=p,m+=p,g+=p,t++)n.data[d]=(e.data[y++]-l[0])*o[0],n.data[f]=(e.data[b++]-l[1])*o[1],n.data[m]=(e.data[x++]-l[2])*o[2],n.data[g]=-1===w?255:(e.data[w++]-l[3])*o[3]}return n}})),qo,ts,rs,ns,os,is=L((()=>{$n(),qo=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");let n,r,{height:s,width:a}=t,i=t.norm??{mean:255,bias:0};n="number"==typeof i.mean?[i.mean,i.mean,i.mean,i.mean]:[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],r="number"==typeof i.bias?[i.bias,i.bias,i.bias,i.bias]:[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=s*a,c="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u),h=4,p=0,d=1,f=2,m=3,g=0,y=u,b=2*u,x=-1;"RGB"===o&&(h=3,p=0,d=1,f=2,m=-1),"RGBA"===l?x=3*u:"RBG"===l?(g=0,b=u,y=2*u):"BGR"===l&&(b=0,y=u,g=2*u);for(let t=0;t<u;t++,p+=h,f+=h,d+=h,m+=h)c[g++]=(e[p]+r[0])/n[0],c[y++]=(e[d]+r[1])/n[1],c[b++]=(e[f]+r[2])/n[2],-1!==x&&-1!==m&&(c[x++]=(e[m]+r[3])/n[3]);return new Ye("float32",c,"RGBA"===l?[1,4,s,a]:[1,3,s,a])},ts=async(e,t)=>{let n,r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,a=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,i="string"==typeof e,o=t??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(r){let r=l();r.width=e.width,r.height=e.height;let s=u(r);if(null==s)throw new Error("Can not access image data");{let r=e.height,a=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(r=t.resizedHeight,a=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=r,o.width=a}else o.tensorFormat="RGBA",o.height=r,o.width=a;s.drawImage(e,0,0),n=s.getImageData(0,0,a,r).data}}else{if(!s){if(a){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");let r=l();r.width=e.width,r.height=e.height;let s=u(r);if(null!=s){let t=e.height,r=e.width;return s.drawImage(e,0,0,r,t),n=s.getImageData(0,0,r,t).data,o.height=t,o.width=r,qo(n,o)}throw new Error("Can not access image data")}if(i)return new Promise(((t,n)=>{let r=l(),s=u(r);if(!e||!s)return n();let a=new Image;a.crossOrigin="Anonymous",a.src=e,a.onload=()=>{r.width=a.width,r.height=a.height,s.drawImage(a,0,0,r.width,r.height);let e=s.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(qo(e.data,o))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let r,s;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,s=t.resizedWidth):(r=e.height,s=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=r,o.width=s,void 0!==t){let t=l();t.width=s,t.height=r;let a=u(t);if(null==a)throw new Error("Can not access image data");a.putImageData(e,0,0),n=a.getImageData(0,0,s,r).data}else n=e.data}}if(void 0!==n)return qo(n,o);throw new Error("Input data provided is not supported - aborted tensor creation")},rs=(e,t)=>{let{width:n,height:r,download:s,dispose:a}=t;return new Ye({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:s,dispose:a})},ns=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:a}=t;return new Ye({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:s,dispose:a})},os=(e,t,n)=>new Ye({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})})),Qr,Cn,as,ss,us=L((()=>{Qr=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Cn=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),as=!1,ss=()=>{if(!as){as=!0;let e=typeof BigInt64Array<"u"&&"function"==typeof BigInt64Array.from,t=typeof BigUint64Array<"u"&&"function"==typeof BigUint64Array.from;e&&(Qr.set("int64",BigInt64Array),Cn.set(BigInt64Array,"int64")),t&&(Qr.set("uint64",BigUint64Array),Cn.set(BigUint64Array,"uint64"))}}})),ls,fs,cs=L((()=>{$n(),ls=e=>{let t=1;for(let n=0;n<e.length;n++){let r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},fs=(e,t)=>{switch(e.location){case"cpu":return new Ye(e.type,e.data,t);case"cpu-pinned":return new Ye({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new Ye({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new Ye({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}})),Ye,$n=L((()=>{es(),is(),us(),cs(),Ye=class{constructor(e,t,n){let r,s;if(ss(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{let t=Qr.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,i;if("string"==typeof e)if(r=e,i=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{let n=Qr.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");a="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else{if(!(t instanceof n))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);a=t}}else if(i=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");let t=typeof e[0];if("string"===t)r="string",a=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",a=Uint8Array.from(e)}}else{let t=Cn.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,a=e}if(void 0===i)i=[a.length];else if(!Array.isArray(i))throw new TypeError("A tensor's dims must be a number array");s=i,this.cpuData=a,this.dataLocation="cpu"}let a=ls(s);if(this.cpuData&&a!==this.cpuData.length)throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=a}static async fromImage(e,t){return ts(e,t)}static fromTexture(e,t){return rs(e,t)}static fromGpuBuffer(e,t){return ns(e,t)}static fromPinnedBuffer(e,t,n){return os(e,t,n)}toDataURL(e){return Za(this,e)}toImageData(e){return Qa(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return fs(this,e)}}})),ke,kn=L((()=>{$n(),ke=Ye})),jo,ps,Xt,Kt,Yo=L((()=>{Ho(),jo=(e,t)=>{ur.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},ps=(e,t)=>{let n=(new Error).stack?.split(/\r\n|\r|\n/g)||[],r=!1;for(let s=0;s<n.length;s++){if(r&&!n[s].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[s].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void jo("CPU",r)}n[s].includes("TRACE_FUNC")&&(r=!0)}},Xt=e=>{ur.wasm.trace&&ps("BEGIN",e)},Kt=e=>{ur.wasm.trace&&ps("END",e)}})),Bn,ds=L((()=>{Fn(),kn(),Yo(),Bn=class e{constructor(e){this.handler=e}async run(e,t,n){Xt();let r={},s={};if("object"!=typeof e||null===e||e instanceof ke||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof ke)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(let e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,i=Object.getOwnPropertyNames(t);for(let n of this.outputNames)if(-1!==i.indexOf(n)){let s=t[n];(null===s||s instanceof ke)&&(e=!0,a=!1,r[n]=s)}if(e){if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of this.inputNames)if(typeof e[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(a)for(let e of this.outputNames)r[e]=null;let i=await this.handler.run(e,r,s),o={};for(let e in i)if(Object.hasOwnProperty.call(i,e)){let t=i[e];o[e]=t instanceof ke?t:new ke(t.type,t.data,t.dims)}return Kt(),o}async release(){return this.handler.dispose()}static async create(t,n,r,s){Xt();let a,i={};if("string"==typeof t){if(a=t,"object"==typeof n&&null!==n)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(a=t,"object"==typeof n&&null!==n)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let e=t,o=0,l=t.byteLength;if("object"==typeof n&&null!==n)i=n;else if("number"==typeof n){if(o=n,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(l=t.byteLength-o,"number"==typeof r){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||o+l>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-o}].`);if("object"==typeof s&&null!==s)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");a=new Uint8Array(e,o,l)}}let o=(i.executionProviders||[]).map((e=>"string"==typeof e?e:e.name)),l=await(await Ln(o)).createInferenceSessionHandler(a,i);return Kt(),new e(l)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}})),hs,ms=L((()=>{ds(),hs=Bn})),bs=L((()=>{})),Pd,Nn,gs=L((()=>{Fn(),kn(),Pd="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Nn=class e{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,n){let r=t.evalModel||"",s=t.optimizerModel||"",a=n||{},i=(a.executionProviders||[]).map((e=>"string"==typeof e?e:e.name)),o=await Ln(i);if(o.createTrainingSessionHandler){let n=await o.createTrainingSessionHandler(t.checkpointState,t.trainModel,r,s,a);return new e(n,!!t.optimizerModel,!!t.evalModel)}throw new Error(Pd)}typeNarrowingForRunStep(e,t,n,r,s){let a={},i={};if("object"!=typeof n||null===n||n instanceof ke||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if("object"==typeof r){if(null===r)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof ke)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let e of r){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);a[e]=null}if("object"==typeof s&&null!==s)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,n=Object.getOwnPropertyNames(r);for(let s of t)if(-1!==n.indexOf(s)){let t=r[s];(null===t||t instanceof ke)&&(e=!0,o=!1,a[s]=t)}if(e){if("object"==typeof s&&null!==s)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else i=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of e)if(typeof n[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(o)for(let e of t)a[e]=null;return[a,i]}convertHandlerReturnTypeToMapOfTensors(e){let t={};for(let n in e)if(Object.hasOwnProperty.call(e,n)){let r=e[n];t[n]=r instanceof ke?r:new ke(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){let[r,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),a=await this.handler.runTrainStep(e,r,s);return this.convertHandlerReturnTypeToMapOfTensors(a)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){let[r,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),a=await this.handler.runEvalStep(e,r,s);return this.convertHandlerReturnTypeToMapOfTensors(a)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){let n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}})),ys,Ts=L((()=>{gs(),ys=Nn})),Xo={};ar(Xo,{InferenceSession:()=>hs,TRACE:()=>jo,TRACE_FUNC_BEGIN:()=>Xt,TRACE_FUNC_END:()=>Kt,Tensor:()=>ke,TrainingSession:()=>ys,env:()=>Z,registerBackend:()=>Yt});var vt=L((()=>{ja(),Ja(),ms(),kn(),Yo(),bs(),Ts()}));function Jt(e,t,n,r){if(void 0===t)return Dd(e);if(void 0===n)Rn(e,t,1);else if("number"==typeof n&&void 0===r)Rn(e,t,n);else if("string"==typeof n&&void 0===r)Rn(e,n,1,t);else{if("string"!=typeof n||"number"!=typeof r)throw new TypeError("input is valid");Rn(e,n,r,t)}}function Dd(e){return{verbose:Jt.verbose.bind(null,e),info:Jt.info.bind(null,e),warning:Jt.warning.bind(null,e),error:Jt.error.bind(null,e),fatal:Jt.fatal.bind(null,e)}}function Rn(e,t,n,r){let s=en[r||""]||en[""];vs[e]<vs[s.minimalSeverity]||(s.logDateTime&&(t=`${(new Date).toISOString()}|${t}`),s.logSourceLocation,Ed[s.provider].log(e,t,r))}var Ko,Jo,vs,Ed,ws,en,ce,Gn,Un,zn,Mn,ut=L((()=>{Ko=class{log(e,t,n){}},Jo=class{log(e,t,n){console.log(`${this.color(e)} ${n?"[35m"+n+"[0m ":""}${t}`)}color(e){switch(e){case"verbose":return"[34;40mv[0m";case"info":return"[32mi[0m";case"warning":return"[30;43mw[0m";case"error":return"[31;40me[0m";case"fatal":return"[101mf[0m";default:throw new Error(`unsupported severity: ${e}`)}}},vs={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},Ed={none:new Ko,console:new Jo},en={"":ws={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1}},(e=>{function t(e){en={},n("",e||{})}function n(e,n){if("*"===e)t(n);else{let t=en[e]||ws;en[e]={provider:n.provider||t.provider,minimalSeverity:n.minimalSeverity||t.minimalSeverity,logDateTime:void 0===n.logDateTime?t.logDateTime:n.logDateTime,logSourceLocation:void 0===n.logSourceLocation?t.logSourceLocation:n.logSourceLocation}}}e.verbose=function(t,n){e("verbose",t,n)},e.info=function(t,n){e("info",t,n)},e.warning=function(t,n){e("warning",t,n)},e.error=function(t,n){e("error",t,n)},e.fatal=function(t,n){e("fatal",t,n)},e.reset=t,e.set=n,e.setWithEnv=function(e){let t={};e.logLevel&&(t.minimalSeverity=e.logLevel),n("",t)}})(Jt||={}),ce=Jt,Gn=class{constructor(e,t,n,r,s,a){this.category=e,this.name=t,this.startTime=n,this.endCallback=r,this.timer=s,this.ctx=a}async end(){return this.endCallback(this)}async checkTimer(){if(void 0===this.ctx||void 0===this.timer)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Un=class{constructor(e,t,n,r){this.category=e,this.name=t,this.startTime=n,this.endTime=r}},zn=class{constructor(e,t,n){this._started=!1,this._flushPointer=0,this._started=!1,this._maxNumberEvents=void 0===e?1e4:e,this._flushBatchSize=void 0===t?10:t,this._flushIntervalInMilliseconds=void 0===n?5e3:n}static create(e){return void 0===e?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=Mn(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,t,n,r){let s=this._started?this.begin(e,t,r):void 0,a=!1,i=n();if(i&&"function"==typeof i.then)return a=!0,new Promise(((e,t)=>{i.then((async t=>{s&&await s.end(),e(t)}),(async e=>{s&&await s.end(),t(e)}))}));if(!a&&s){let e=s.end();if(e&&"function"==typeof e.then)return new Promise(((t,n)=>{e.then((()=>{t(i)}),(e=>{n(e)}))}))}return i}begin(e,t,n){if(!this._started)throw new Error("profiler is not started yet");if(void 0===n){let n=Mn();return this.flush(n),new Gn(e,t,n,(e=>this.endSync(e)))}{let r=n.beginTimer();return new Gn(e,t,0,(async e=>this.end(e)),r,n)}}async end(e){let t=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Un(e.category,e.name,e.startTime,t)),this.flush(t))}endSync(e){let t=Mn();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Un(e.category,e.name,e.startTime,t)),this.flush(t))}logOneEvent(e){ce.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let e=this._flushPointer;this._flushPointer<e+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=Mn()}}get started(){return this._started}},Mn=typeof performance<"u"&&performance.now?()=>performance.now():Date.now}));function _s(e,t,n){for(let r of n){let n=r[0],s=r[1],a=r[2],i=r[3],o=r[4];if(e.opType===n)for(let e of t)if((e.domain===s||"ai.onnx"===e.domain&&""===s)&&Ld(e.version,a))return{opImpl:i,opInit:o}}throw new TypeError(`cannot resolve operator '${e.opType}' with opsets: ${t.map((e=>`${e.domain||"ai.onnx"} v${e.version}`)).join(", ")}`)}function Ld(e,t){if(t.endsWith("+")){let n=Number.parseInt(t.substring(0,t.length-1),10);return!isNaN(n)&&n<=e}if(2===t.split("-").length){let n=t.split("-"),r=Number.parseInt(n[0],10),s=Number.parseInt(n[1],10);return!isNaN(r)&&!isNaN(s)&&r<=e&&e<=s}return Number.parseInt(t,10)===e}var Os=L((()=>{})),Is=me((e=>{e.__esModule=!0;var t=function(){function e(t){if(!t)throw new TypeError("Invalid argument; `value` has no value.");this.value=e.EMPTY,t&&e.isGuid(t)&&(this.value=t)}return e.isGuid=function(t){var n=t.toString();return t&&(t instanceof e||e.validator.test(n))},e.create=function(){return new e([e.gen(2),e.gen(1),e.gen(1),e.gen(1),e.gen(3)].join("-"))},e.createEmpty=function(){return new e("emptyguid")},e.parse=function(t){return new e(t)},e.raw=function(){return[e.gen(2),e.gen(1),e.gen(1),e.gen(1),e.gen(3)].join("-")},e.gen=function(e){for(var t="",n=0;n<e;n++)t+=(65536*(1+Math.random())|0).toString(16).substring(1);return t},e.prototype.equals=function(t){return e.isGuid(t)&&this.value===t.toString()},e.prototype.isEmpty=function(){return this.value===e.EMPTY},e.prototype.toString=function(){return this.value},e.prototype.toJSON=function(){return{value:this.value}},e.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),e.EMPTY="00000000-0000-0000-0000-000000000000",e}();e.Guid=t}));function be(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function We(e){return!0===(e&&e.__isLong__)}function Ss(e){var t=Math.clz32(e&-e);return e?31-t:t}function lr(e,t){var n,r,s;return t?(s=0<=(e>>>=0)&&e<256)&&(r=Ps[e])?r:(n=le(e,0,!0),s&&(Ps[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(r=As[e])?r:(n=le(e,e<0?-1:0,!1),s&&(As[e]=n),n)}function ft(e,t){if(isNaN(e))return t?Ut:wt;if(t){if(e<0)return Ut;if(e>=Fs)return ks}else{if(e<=-Ds)return tt;if(e+1>=Ds)return Cs}return e<0?ft(-e,t).neg():le(e%Lr|0,e/Lr|0,t)}function le(e,t,n){return new be(e,t,n)}function ei(e,t,n){if(0===e.length)throw Error("empty string");if("number"==typeof t?(n=t,t=!1):t=!!t,"NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return t?Ut:wt;if((n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return ei(e.substring(1),t,n).neg();for(var s=ft(Vn(n,8)),a=wt,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var u=ft(Vn(n,o));a=a.mul(u).add(ft(l))}else a=(a=a.mul(s)).add(ft(l))}return a.unsigned=t,a}function _t(e,t){return"number"==typeof e?ft(e,t):"string"==typeof e?ei(e,t):le(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}var lt,As,Ps,Vn,Es,$d,Lr,Fs,Ds,Ls,wt,Ut,Dr,$s,Qo,Cs,ks,tt,$,zt,ti=L((()=>{lt=null;try{lt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}be.prototype.__isLong__,Object.defineProperty(be.prototype,"__isLong__",{value:!0}),be.isLong=We,As={},Ps={},be.fromInt=lr,be.fromNumber=ft,be.fromBits=le,Vn=Math.pow,be.fromString=ei,be.fromValue=_t,Ds=(Fs=(Lr=(Es=65536)*Es)*Lr)/2,Ls=lr($d=1<<24),wt=lr(0),be.ZERO=wt,Ut=lr(0,!0),be.UZERO=Ut,Dr=lr(1),be.ONE=Dr,$s=lr(1,!0),be.UONE=$s,Qo=lr(-1),be.NEG_ONE=Qo,Cs=le(-1,2147483647,!1),be.MAX_VALUE=Cs,ks=le(-1,-1,!0),be.MAX_UNSIGNED_VALUE=ks,tt=le(0,-2147483648,!1),be.MIN_VALUE=tt,($=be.prototype).toInt=function(){return this.unsigned?this.low>>>0:this.low},$.toNumber=function(){return this.unsigned?(this.high>>>0)*Lr+(this.low>>>0):this.high*Lr+(this.low>>>0)},$.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(tt)){var t=ft(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=ft(Vn(e,6),this.unsigned),a=this,i="";;){var o=a.div(s),l=(a.sub(o.mul(s)).toInt()>>>0).toString(e);if((a=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},$.getHighBits=function(){return this.high},$.getHighBitsUnsigned=function(){return this.high>>>0},$.getLowBits=function(){return this.low},$.getLowBitsUnsigned=function(){return this.low>>>0},$.getNumBitsAbs=function(){if(this.isNegative())return this.eq(tt)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},$.isZero=function(){return 0===this.high&&0===this.low},$.eqz=$.isZero,$.isNegative=function(){return!this.unsigned&&this.high<0},$.isPositive=function(){return this.unsigned||this.high>=0},$.isOdd=function(){return!(1&~this.low)},$.isEven=function(){return!(1&this.low)},$.equals=function(e){return We(e)||(e=_t(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},$.eq=$.equals,$.notEquals=function(e){return!this.eq(e)},$.neq=$.notEquals,$.ne=$.notEquals,$.lessThan=function(e){return this.comp(e)<0},$.lt=$.lessThan,$.lessThanOrEqual=function(e){return this.comp(e)<=0},$.lte=$.lessThanOrEqual,$.le=$.lessThanOrEqual,$.greaterThan=function(e){return this.comp(e)>0},$.gt=$.greaterThan,$.greaterThanOrEqual=function(e){return this.comp(e)>=0},$.gte=$.greaterThanOrEqual,$.ge=$.greaterThanOrEqual,$.compare=function(e){if(We(e)||(e=_t(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},$.comp=$.compare,$.negate=function(){return!this.unsigned&&this.eq(tt)?tt:this.not().add(Dr)},$.neg=$.negate,$.add=function(e){We(e)||(e=_t(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=e.high>>>16,i=65535&e.high,o=e.low>>>16,l=0,u=0,c=0,h=0;return c+=(h+=s+(65535&e.low))>>>16,u+=(c+=r+o)>>>16,l+=(u+=n+i)>>>16,l+=t+a,le((c&=65535)<<16|(h&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},$.subtract=function(e){return We(e)||(e=_t(e)),this.add(e.neg())},$.sub=$.subtract,$.multiply=function(e){if(this.isZero())return this;if(We(e)||(e=_t(e)),lt)return le(lt.mul(this.low,this.high,e.low,e.high),lt.get_high(),this.unsigned);if(e.isZero())return this.unsigned?Ut:wt;if(this.eq(tt))return e.isOdd()?tt:wt;if(e.eq(tt))return this.isOdd()?tt:wt;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Ls)&&e.lt(Ls))return ft(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=e.high>>>16,i=65535&e.high,o=e.low>>>16,l=65535&e.low,u=0,c=0,h=0,p=0;return h+=(p+=s*l)>>>16,c+=(h+=r*l)>>>16,h&=65535,c+=(h+=s*o)>>>16,u+=(c+=n*l)>>>16,c&=65535,u+=(c+=r*o)>>>16,c&=65535,u+=(c+=s*i)>>>16,u+=t*l+n*o+r*i+s*a,le((h&=65535)<<16|(p&=65535),(u&=65535)<<16|(c&=65535),this.unsigned)},$.mul=$.multiply,$.divide=function(e){if(We(e)||(e=_t(e)),e.isZero())throw Error("division by zero");var t,n,r;if(lt)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?le((this.unsigned?lt.div_u:lt.div_s)(this.low,this.high,e.low,e.high),lt.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?Ut:wt;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Ut;if(e.gt(this.shru(1)))return $s;r=Ut}else{if(this.eq(tt))return e.eq(Dr)||e.eq(Qo)?tt:e.eq(tt)?Dr:(t=this.shr(1).div(e).shl(1)).eq(wt)?e.isNegative()?Dr:Qo:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(tt))return this.unsigned?Ut:wt;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=wt}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(t)/Math.LN2),a=s<=48?1:Vn(2,s-48),i=ft(t),o=i.mul(e);o.isNegative()||o.gt(n);)o=(i=ft(t-=a,this.unsigned)).mul(e);i.isZero()&&(i=Dr),r=r.add(i),n=n.sub(o)}return r},$.div=$.divide,$.modulo=function(e){return We(e)||(e=_t(e)),lt?le((this.unsigned?lt.rem_u:lt.rem_s)(this.low,this.high,e.low,e.high),lt.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},$.mod=$.modulo,$.rem=$.modulo,$.not=function(){return le(~this.low,~this.high,this.unsigned)},$.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32},$.clz=$.countLeadingZeros,$.countTrailingZeros=function(){return this.low?Ss(this.low):Ss(this.high)+32},$.ctz=$.countTrailingZeros,$.and=function(e){return We(e)||(e=_t(e)),le(this.low&e.low,this.high&e.high,this.unsigned)},$.or=function(e){return We(e)||(e=_t(e)),le(this.low|e.low,this.high|e.high,this.unsigned)},$.xor=function(e){return We(e)||(e=_t(e)),le(this.low^e.low,this.high^e.high,this.unsigned)},$.shiftLeft=function(e){return We(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?le(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):le(0,this.low<<e-32,this.unsigned)},$.shl=$.shiftLeft,$.shiftRight=function(e){return We(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?le(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):le(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},$.shr=$.shiftRight,$.shiftRightUnsigned=function(e){return We(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?le(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):le(32===e?this.high:this.high>>>e-32,0,this.unsigned)},$.shru=$.shiftRightUnsigned,$.shr_u=$.shiftRightUnsigned,$.rotateLeft=function(e){var t;return We(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?le(this.high,this.low,this.unsigned):e<32?(t=32-e,le(this.low<<e|this.high>>>t,this.high<<e|this.low>>>t,this.unsigned)):(t=32-(e-=32),le(this.high<<e|this.low>>>t,this.low<<e|this.high>>>t,this.unsigned))},$.rotl=$.rotateLeft,$.rotateRight=function(e){var t;return We(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?le(this.high,this.low,this.unsigned):e<32?(t=32-e,le(this.high<<t|this.low>>>e,this.low<<t|this.high>>>e,this.unsigned)):(t=32-(e-=32),le(this.low<<t|this.high>>>e,this.high<<t|this.low>>>e,this.unsigned))},$.rotr=$.rotateRight,$.toSigned=function(){return this.unsigned?le(this.low,this.high,!1):this},$.toUnsigned=function(){return this.unsigned?this:le(this.low,this.high,!0)},$.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},$.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},$.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},be.fromBytes=function(e,t,n){return n?be.fromBytesLE(e,t):be.fromBytesBE(e,t)},be.fromBytesLE=function(e,t){return new be(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},be.fromBytesBE=function(e,t){return new be(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)},zt=be})),_,Wn=L((()=>{(_={}).Table,_.SIZEOF_SHORT=2,_.SIZEOF_INT=4,_.FILE_IDENTIFIER_LENGTH=4,_.SIZE_PREFIX_LENGTH=4,_.Encoding={UTF8_BYTES:1,UTF16_STRING:2},_.int32=new Int32Array(2),_.float32=new Float32Array(_.int32.buffer),_.float64=new Float64Array(_.int32.buffer),_.isLittleEndian=1===new Uint16Array(new Uint8Array([1,0]).buffer)[0],_.Long=function(e,t){this.low=0|e,this.high=0|t},_.Long.create=function(e,t){return 0==e&&0==t?_.Long.ZERO:new _.Long(e,t)},_.Long.prototype.toFloat64=function(){return(this.low>>>0)+4294967296*this.high},_.Long.prototype.equals=function(e){return this.low==e.low&&this.high==e.high},_.Long.ZERO=new _.Long(0,0),_.Builder=function(e){if(e)var t=e;else t=1024;this.bb=_.ByteBuffer.allocate(t),this.space=t,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},_.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},_.Builder.prototype.forceDefaults=function(e){this.force_defaults=e},_.Builder.prototype.dataBuffer=function(){return this.bb},_.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())},_.Builder.prototype.prep=function(e,t){e>this.minalign&&(this.minalign=e);for(var n=1+~(this.bb.capacity()-this.space+t)&e-1;this.space<n+e+t;){var r=this.bb.capacity();this.bb=_.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-r}this.pad(n)},_.Builder.prototype.pad=function(e){for(var t=0;t<e;t++)this.bb.writeInt8(--this.space,0)},_.Builder.prototype.writeInt8=function(e){this.bb.writeInt8(this.space-=1,e)},_.Builder.prototype.writeInt16=function(e){this.bb.writeInt16(this.space-=2,e)},_.Builder.prototype.writeInt32=function(e){this.bb.writeInt32(this.space-=4,e)},_.Builder.prototype.writeInt64=function(e){this.bb.writeInt64(this.space-=8,e)},_.Builder.prototype.writeFloat32=function(e){this.bb.writeFloat32(this.space-=4,e)},_.Builder.prototype.writeFloat64=function(e){this.bb.writeFloat64(this.space-=8,e)},_.Builder.prototype.addInt8=function(e){this.prep(1,0),this.writeInt8(e)},_.Builder.prototype.addInt16=function(e){this.prep(2,0),this.writeInt16(e)},_.Builder.prototype.addInt32=function(e){this.prep(4,0),this.writeInt32(e)},_.Builder.prototype.addInt64=function(e){this.prep(8,0),this.writeInt64(e)},_.Builder.prototype.addFloat32=function(e){this.prep(4,0),this.writeFloat32(e)},_.Builder.prototype.addFloat64=function(e){this.prep(8,0),this.writeFloat64(e)},_.Builder.prototype.addFieldInt8=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt8(t),this.slot(e))},_.Builder.prototype.addFieldInt16=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt16(t),this.slot(e))},_.Builder.prototype.addFieldInt32=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt32(t),this.slot(e))},_.Builder.prototype.addFieldInt64=function(e,t,n){(this.force_defaults||!t.equals(n))&&(this.addInt64(t),this.slot(e))},_.Builder.prototype.addFieldFloat32=function(e,t,n){(this.force_defaults||t!=n)&&(this.addFloat32(t),this.slot(e))},_.Builder.prototype.addFieldFloat64=function(e,t,n){(this.force_defaults||t!=n)&&(this.addFloat64(t),this.slot(e))},_.Builder.prototype.addFieldOffset=function(e,t,n){(this.force_defaults||t!=n)&&(this.addOffset(t),this.slot(e))},_.Builder.prototype.addFieldStruct=function(e,t,n){t!=n&&(this.nested(t),this.slot(e))},_.Builder.prototype.nested=function(e){if(e!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")},_.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")},_.Builder.prototype.slot=function(e){this.vtable[e]=this.offset()},_.Builder.prototype.offset=function(){return this.bb.capacity()-this.space},_.Builder.growByteBuffer=function(e){var t=e.capacity();if(3221225472&t)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=t<<1,r=_.ByteBuffer.allocate(n);return r.setPosition(n-t),r.bytes().set(e.bytes(),n-t),r},_.Builder.prototype.addOffset=function(e){this.prep(_.SIZEOF_INT,0),this.writeInt32(this.offset()-e+_.SIZEOF_INT)},_.Builder.prototype.startObject=function(e){this.notNested(),null==this.vtable&&(this.vtable=[]),this.vtable_in_use=e;for(var t=0;t<e;t++)this.vtable[t]=0;this.isNested=!0,this.object_start=this.offset()},_.Builder.prototype.endObject=function(){if(null==this.vtable||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var e=this.offset(),t=this.vtable_in_use-1;t>=0&&0==this.vtable[t];t--);for(var n=t+1;t>=0;t--)this.addInt16(0!=this.vtable[t]?e-this.vtable[t]:0);this.addInt16(e-this.object_start);var r=(n+2)*_.SIZEOF_SHORT;this.addInt16(r);var s=0,a=this.space;e:for(t=0;t<this.vtables.length;t++){var i=this.bb.capacity()-this.vtables[t];if(r==this.bb.readInt16(i)){for(var o=_.SIZEOF_SHORT;o<r;o+=_.SIZEOF_SHORT)if(this.bb.readInt16(a+o)!=this.bb.readInt16(i+o))continue e;s=this.vtables[t];break}}return s?(this.space=this.bb.capacity()-e,this.bb.writeInt32(this.space,s-e)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-e,this.offset()-e)),this.isNested=!1,e},_.Builder.prototype.finish=function(e,t,n){var r=n?_.SIZE_PREFIX_LENGTH:0;if(t){var s=t;if(this.prep(this.minalign,_.SIZEOF_INT+_.FILE_IDENTIFIER_LENGTH+r),s.length!=_.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+_.FILE_IDENTIFIER_LENGTH);for(var a=_.FILE_IDENTIFIER_LENGTH-1;a>=0;a--)this.writeInt8(s.charCodeAt(a))}this.prep(this.minalign,_.SIZEOF_INT+r),this.addOffset(e),r&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)},_.Builder.prototype.finishSizePrefixed=function(e,t){this.finish(e,t,!0)},_.Builder.prototype.requiredField=function(e,t){var n=this.bb.capacity()-e,r=n-this.bb.readInt32(n);if(0==this.bb.readInt16(r+t))throw new Error("FlatBuffers: field "+t+" must be set")},_.Builder.prototype.startVector=function(e,t,n){this.notNested(),this.vector_num_elems=t,this.prep(_.SIZEOF_INT,e*t),this.prep(n,e*t)},_.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()},_.Builder.prototype.createString=function(e){if(e instanceof Uint8Array)var t=e;else{t=[];for(var n=0;n<e.length;){var r,s=e.charCodeAt(n++);(r=s<55296||s>=56320?s:(s<<10)+e.charCodeAt(n++)+-56613888)<128?t.push(r):(r<2048?t.push(r>>6&31|192):(r<65536?t.push(r>>12&15|224):t.push(r>>18&7|240,r>>12&63|128),t.push(r>>6&63|128)),t.push(63&r|128))}}this.addInt8(0),this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length),n=0;for(var a=this.space,i=this.bb.bytes();n<t.length;n++)i[a++]=t[n];return this.endVector()},_.Builder.prototype.createLong=function(e,t){return _.Long.create(e,t)},_.ByteBuffer=function(e){this.bytes_=e,this.position_=0},_.ByteBuffer.allocate=function(e){return new _.ByteBuffer(new Uint8Array(e))},_.ByteBuffer.prototype.clear=function(){this.position_=0},_.ByteBuffer.prototype.bytes=function(){return this.bytes_},_.ByteBuffer.prototype.position=function(){return this.position_},_.ByteBuffer.prototype.setPosition=function(e){this.position_=e},_.ByteBuffer.prototype.capacity=function(){return this.bytes_.length},_.ByteBuffer.prototype.readInt8=function(e){return this.readUint8(e)<<24>>24},_.ByteBuffer.prototype.readUint8=function(e){return this.bytes_[e]},_.ByteBuffer.prototype.readInt16=function(e){return this.readUint16(e)<<16>>16},_.ByteBuffer.prototype.readUint16=function(e){return this.bytes_[e]|this.bytes_[e+1]<<8},_.ByteBuffer.prototype.readInt32=function(e){return this.bytes_[e]|this.bytes_[e+1]<<8|this.bytes_[e+2]<<16|this.bytes_[e+3]<<24},_.ByteBuffer.prototype.readUint32=function(e){return this.readInt32(e)>>>0},_.ByteBuffer.prototype.readInt64=function(e){return new _.Long(this.readInt32(e),this.readInt32(e+4))},_.ByteBuffer.prototype.readUint64=function(e){return new _.Long(this.readUint32(e),this.readUint32(e+4))},_.ByteBuffer.prototype.readFloat32=function(e){return _.int32[0]=this.readInt32(e),_.float32[0]},_.ByteBuffer.prototype.readFloat64=function(e){return _.int32[_.isLittleEndian?0:1]=this.readInt32(e),_.int32[_.isLittleEndian?1:0]=this.readInt32(e+4),_.float64[0]},_.ByteBuffer.prototype.writeInt8=function(e,t){this.bytes_[e]=t},_.ByteBuffer.prototype.writeUint8=function(e,t){this.bytes_[e]=t},_.ByteBuffer.prototype.writeInt16=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8},_.ByteBuffer.prototype.writeUint16=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8},_.ByteBuffer.prototype.writeInt32=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24},_.ByteBuffer.prototype.writeUint32=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24},_.ByteBuffer.prototype.writeInt64=function(e,t){this.writeInt32(e,t.low),this.writeInt32(e+4,t.high)},_.ByteBuffer.prototype.writeUint64=function(e,t){this.writeUint32(e,t.low),this.writeUint32(e+4,t.high)},_.ByteBuffer.prototype.writeFloat32=function(e,t){_.float32[0]=t,this.writeInt32(e,_.int32[0])},_.ByteBuffer.prototype.writeFloat64=function(e,t){_.float64[0]=t,this.writeInt32(e,_.int32[_.isLittleEndian?0:1]),this.writeInt32(e+4,_.int32[_.isLittleEndian?1:0])},_.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+_.SIZEOF_INT+_.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var e="",t=0;t<_.FILE_IDENTIFIER_LENGTH;t++)e+=String.fromCharCode(this.readInt8(this.position_+_.SIZEOF_INT+t));return e},_.ByteBuffer.prototype.__offset=function(e,t){var n=e-this.readInt32(e);return t<this.readInt16(n)?this.readInt16(n+t):0},_.ByteBuffer.prototype.__union=function(e,t){return e.bb_pos=t+this.readInt32(t),e.bb=this,e},_.ByteBuffer.prototype.__string=function(e,t){e+=this.readInt32(e);var n=this.readInt32(e),r="",s=0;if(e+=_.SIZEOF_INT,t===_.Encoding.UTF8_BYTES)return this.bytes_.subarray(e,e+n);for(;s<n;){var a,i=this.readUint8(e+s++);if(i<192)a=i;else{var o=this.readUint8(e+s++);if(i<224)a=(31&i)<<6|63&o;else{var l=this.readUint8(e+s++);a=i<240?(15&i)<<12|(63&o)<<6|63&l:(7&i)<<18|(63&o)<<12|(63&l)<<6|63&this.readUint8(e+s++)}}a<65536?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296+(a>>10),56320+(1023&a)))}return r},_.ByteBuffer.prototype.__indirect=function(e){return e+this.readInt32(e)},_.ByteBuffer.prototype.__vector=function(e){return e+this.readInt32(e)+_.SIZEOF_INT},_.ByteBuffer.prototype.__vector_len=function(e){return this.readInt32(e+this.readInt32(e))},_.ByteBuffer.prototype.__has_identifier=function(e){if(e.length!=_.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+_.FILE_IDENTIFIER_LENGTH);for(var t=0;t<_.FILE_IDENTIFIER_LENGTH;t++)if(e.charCodeAt(t)!=this.readInt8(this.position_+_.SIZEOF_INT+t))return!1;return!0},_.ByteBuffer.prototype.createLong=function(e,t){return _.Long.create(e,t)}})),W,tn=L((()=>{Wn(),(e=>{let t;(e=>{let t;(e=>{let t;var n;(n=t=e.AttributeType||={})[n.UNDEFINED=0]="UNDEFINED",n[n.FLOAT=1]="FLOAT",n[n.INT=2]="INT",n[n.STRING=3]="STRING",n[n.TENSOR=4]="TENSOR",n[n.GRAPH=5]="GRAPH",n[n.FLOATS=6]="FLOATS",n[n.INTS=7]="INTS",n[n.STRINGS=8]="STRINGS",n[n.TENSORS=9]="TENSORS",n[n.GRAPHS=10]="GRAPHS",n[n.SPARSE_TENSOR=11]="SPARSE_TENSOR",n[n.SPARSE_TENSORS=12]="SPARSE_TENSORS"})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(e=>{let t;var n;(n=t=e.DimensionValueType||={})[n.UNKNOWN=0]="UNKNOWN",n[n.VALUE=1]="VALUE",n[n.PARAM=2]="PARAM"})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(e=>{let t;var n;(n=t=e.TensorDataType||={})[n.UNDEFINED=0]="UNDEFINED",n[n.FLOAT=1]="FLOAT",n[n.UINT8=2]="UINT8",n[n.INT8=3]="INT8",n[n.UINT16=4]="UINT16",n[n.INT16=5]="INT16",n[n.INT32=6]="INT32",n[n.INT64=7]="INT64",n[n.STRING=8]="STRING",n[n.BOOL=9]="BOOL",n[n.FLOAT16=10]="FLOAT16",n[n.DOUBLE=11]="DOUBLE",n[n.UINT32=12]="UINT32",n[n.UINT64=13]="UINT64",n[n.COMPLEX64=14]="COMPLEX64",n[n.COMPLEX128=15]="COMPLEX128",n[n.BFLOAT16=16]="BFLOAT16",n[n.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",n[n.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",n[n.FLOAT8E5M2=19]="FLOAT8E5M2",n[n.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(e=>{let t;var n;(n=t=e.NodeType||={})[n.Primitive=0]="Primitive",n[n.Fused=1]="Fused"})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(e=>{let t;var n;(n=t=e.TypeInfoValue||={})[n.NONE=0]="NONE",n[n.tensor_type=1]="tensor_type",n[n.sequence_type=2]="sequence_type",n[n.map_type=3]="map_type"})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsShape(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsShape(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}dim(t,n){let r=this.bb.__offset(this.bb_pos,4);return r?(n||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}dimLength(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}static startShape(e){e.startObject(1)}static addDim(e,t){e.addFieldOffset(0,t,0)}static createDimVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startDimVector(e,t){e.startVector(4,t,4)}static endShape(e){return e.endObject()}static createShape(e,t){return n.startShape(e),n.addDim(e,t),n.endShape(e)}}t.Shape=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsDimension(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDimension(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}value(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}denotation(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}static startDimension(e){e.startObject(2)}static addValue(e,t){e.addFieldOffset(0,t,0)}static addDenotation(e,t){e.addFieldOffset(1,t,0)}static endDimension(e){return e.endObject()}static createDimension(e,t,r){return n.startDimension(e),n.addValue(e,t),n.addDenotation(e,r),n.endDimension(e)}}t.Dimension=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(e=>{class t{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsDimensionValue(e,n){return(n||new t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDimensionValue(e,n){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(n||new t).__init(e.readInt32(e.position())+e.position(),e)}dimType(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt8(this.bb_pos+e):0}dimValue(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}dimParam(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null}static startDimensionValue(e){e.startObject(3)}static addDimType(e,t){e.addFieldInt8(0,t,0)}static addDimValue(e,t){e.addFieldInt64(1,t,e.createLong(0,0))}static addDimParam(e,t){e.addFieldOffset(2,t,0)}static endDimensionValue(e){return e.endObject()}static createDimensionValue(e,n,r,s){return t.startDimensionValue(e),t.addDimType(e,n),t.addDimValue(e,r),t.addDimParam(e,s),t.endDimensionValue(e)}}e.DimensionValue=t})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsTensorTypeAndShape(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTensorTypeAndShape(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}elemType(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt32(this.bb_pos+e):0}shape(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startTensorTypeAndShape(e){e.startObject(2)}static addElemType(e,t){e.addFieldInt32(0,t,0)}static addShape(e,t){e.addFieldOffset(1,t,0)}static endTensorTypeAndShape(e){return e.endObject()}static createTensorTypeAndShape(e,t,r){return n.startTensorTypeAndShape(e),n.addElemType(e,t),n.addShape(e,r),n.endTensorTypeAndShape(e)}}t.TensorTypeAndShape=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsMapType(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsMapType(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}keyType(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt32(this.bb_pos+e):0}valueType(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startMapType(e){e.startObject(2)}static addKeyType(e,t){e.addFieldInt32(0,t,0)}static addValueType(e,t){e.addFieldOffset(1,t,0)}static endMapType(e){return e.endObject()}static createMapType(e,t,r){return n.startMapType(e),n.addKeyType(e,t),n.addValueType(e,r),n.endMapType(e)}}t.MapType=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSequenceType(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSequenceType(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}elemType(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startSequenceType(e){e.startObject(1)}static addElemType(e,t){e.addFieldOffset(0,t,0)}static endSequenceType(e){return e.endObject()}static createSequenceType(e,t){return n.startSequenceType(e),n.addElemType(e,t),n.endSequenceType(e)}}t.SequenceType=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(t=e.fbs||={}).EdgeEnd=class{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(e,t,n,r){return e.prep(4,12),e.writeInt32(r),e.writeInt32(n),e.writeInt32(t),e.offset()}}})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsNodeEdge(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsNodeEdge(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}nodeIndex(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readUint32(this.bb_pos+e):0}inputEdges(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+r)+12*t,this.bb):null}inputEdgesLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}outputEdges(t,n){let r=this.bb.__offset(this.bb_pos,8);return r?(n||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+r)+12*t,this.bb):null}outputEdgesLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}static startNodeEdge(e){e.startObject(3)}static addNodeIndex(e,t){e.addFieldInt32(0,t,0)}static addInputEdges(e,t){e.addFieldOffset(1,t,0)}static startInputEdgesVector(e,t){e.startVector(12,t,4)}static addOutputEdges(e,t){e.addFieldOffset(2,t,0)}static startOutputEdgesVector(e,t){e.startVector(12,t,4)}static endNodeEdge(e){return e.endObject()}static createNodeEdge(e,t,r,s){return n.startNodeEdge(e),n.addNodeIndex(e,t),n.addInputEdges(e,r),n.addOutputEdges(e,s),n.endNodeEdge(e)}}t.NodeEdge=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsNode(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsNode(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}domain(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null}sinceVersion(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readInt32(this.bb_pos+e):0}index(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readUint32(this.bb_pos+e):0}opType(e){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__string(this.bb_pos+t,e):null}type(){let e=this.bb.__offset(this.bb_pos,16);return e?this.bb.readInt32(this.bb_pos+e):0}executionProviderType(e){let t=this.bb.__offset(this.bb_pos,18);return t?this.bb.__string(this.bb_pos+t,e):null}inputs(e,t){let n=this.bb.__offset(this.bb_pos,20);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}inputsLength(){let e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}outputs(e,t){let n=this.bb.__offset(this.bb_pos,22);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}outputsLength(){let e=this.bb.__offset(this.bb_pos,22);return e?this.bb.__vector_len(this.bb_pos+e):0}attributes(t,n){let r=this.bb.__offset(this.bb_pos,24);return r?(n||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}attributesLength(){let e=this.bb.__offset(this.bb_pos,24);return e?this.bb.__vector_len(this.bb_pos+e):0}inputArgCounts(e){let t=this.bb.__offset(this.bb_pos,26);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+4*e):0}inputArgCountsLength(){let e=this.bb.__offset(this.bb_pos,26);return e?this.bb.__vector_len(this.bb_pos+e):0}inputArgCountsArray(){let e=this.bb.__offset(this.bb_pos,26);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}implicitInputs(e,t){let n=this.bb.__offset(this.bb_pos,28);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}implicitInputsLength(){let e=this.bb.__offset(this.bb_pos,28);return e?this.bb.__vector_len(this.bb_pos+e):0}static startNode(e){e.startObject(13)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addDomain(e,t){e.addFieldOffset(2,t,0)}static addSinceVersion(e,t){e.addFieldInt32(3,t,0)}static addIndex(e,t){e.addFieldInt32(4,t,0)}static addOpType(e,t){e.addFieldOffset(5,t,0)}static addType(e,t){e.addFieldInt32(6,t,0)}static addExecutionProviderType(e,t){e.addFieldOffset(7,t,0)}static addInputs(e,t){e.addFieldOffset(8,t,0)}static createInputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startInputsVector(e,t){e.startVector(4,t,4)}static addOutputs(e,t){e.addFieldOffset(9,t,0)}static createOutputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startOutputsVector(e,t){e.startVector(4,t,4)}static addAttributes(e,t){e.addFieldOffset(10,t,0)}static createAttributesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startAttributesVector(e,t){e.startVector(4,t,4)}static addInputArgCounts(e,t){e.addFieldOffset(11,t,0)}static createInputArgCountsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addInt32(t[n]);return e.endVector()}static startInputArgCountsVector(e,t){e.startVector(4,t,4)}static addImplicitInputs(e,t){e.addFieldOffset(12,t,0)}static createImplicitInputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startImplicitInputsVector(e,t){e.startVector(4,t,4)}static endNode(e){return e.endObject()}static createNode(e,t,r,s,a,i,o,l,u,c,h,p,d,f){return n.startNode(e),n.addName(e,t),n.addDocString(e,r),n.addDomain(e,s),n.addSinceVersion(e,a),n.addIndex(e,i),n.addOpType(e,o),n.addType(e,l),n.addExecutionProviderType(e,u),n.addInputs(e,c),n.addOutputs(e,h),n.addAttributes(e,p),n.addInputArgCounts(e,d),n.addImplicitInputs(e,f),n.endNode(e)}}t.Node=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsValueInfo(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsValueInfo(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}type(t){let n=this.bb.__offset(this.bb_pos,8);return n?(t||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startValueInfo(e){e.startObject(3)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addType(e,t){e.addFieldOffset(2,t,0)}static endValueInfo(e){return e.endObject()}static createValueInfo(e,t,r,s){return n.startValueInfo(e),n.addName(e,t),n.addDocString(e,r),n.addType(e,s),n.endValueInfo(e)}}t.ValueInfo=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(e=>{class t{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsTypeInfo(e,n){return(n||new t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTypeInfo(e,n){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(n||new t).__init(e.readInt32(e.position())+e.position(),e)}denotation(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}valueType(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readUint8(this.bb_pos+e):0}value(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__union(e,this.bb_pos+t):null}static startTypeInfo(e){e.startObject(3)}static addDenotation(e,t){e.addFieldOffset(0,t,0)}static addValueType(e,t){e.addFieldInt8(1,t,0)}static addValue(e,t){e.addFieldOffset(2,t,0)}static endTypeInfo(e){return e.endObject()}static createTypeInfo(e,n,r,s){return t.startTypeInfo(e),t.addDenotation(e,n),t.addValueType(e,r),t.addValue(e,s),t.endTypeInfo(e)}}e.TypeInfo=t})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(e=>{class t{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsOperatorSetId(e,n){return(n||new t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsOperatorSetId(e,n){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(n||new t).__init(e.readInt32(e.position())+e.position(),e)}domain(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}version(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}static startOperatorSetId(e){e.startObject(2)}static addDomain(e,t){e.addFieldOffset(0,t,0)}static addVersion(e,t){e.addFieldInt64(1,t,e.createLong(0,0))}static endOperatorSetId(e){return e.endObject()}static createOperatorSetId(e,n,r){return t.startOperatorSetId(e),t.addDomain(e,n),t.addVersion(e,r),t.endOperatorSetId(e)}}e.OperatorSetId=t})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(e=>{class t{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsTensor(e,n){return(n||new t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTensor(e,n){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(n||new t).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}dims(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}dimsLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}dataType(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readInt32(this.bb_pos+e):0}rawData(e){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readUint8(this.bb.__vector(this.bb_pos+t)+e):0}rawDataLength(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}rawDataArray(){let e=this.bb.__offset(this.bb_pos,12);return e?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}stringData(e,t){let n=this.bb.__offset(this.bb_pos,14);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}stringDataLength(){let e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}static startTensor(e){e.startObject(6)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addDims(e,t){e.addFieldOffset(2,t,0)}static createDimsVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startDimsVector(e,t){e.startVector(8,t,8)}static addDataType(e,t){e.addFieldInt32(3,t,0)}static addRawData(e,t){e.addFieldOffset(4,t,0)}static createRawDataVector(e,t){e.startVector(1,t.length,1);for(let n=t.length-1;n>=0;n--)e.addInt8(t[n]);return e.endVector()}static startRawDataVector(e,t){e.startVector(1,t,1)}static addStringData(e,t){e.addFieldOffset(5,t,0)}static createStringDataVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startStringDataVector(e,t){e.startVector(4,t,4)}static endTensor(e){return e.endObject()}static createTensor(e,n,r,s,a,i,o){return t.startTensor(e),t.addName(e,n),t.addDocString(e,r),t.addDims(e,s),t.addDataType(e,a),t.addRawData(e,i),t.addStringData(e,o),t.endTensor(e)}}e.Tensor=t})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSparseTensor(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSparseTensor(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}values(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}indices(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}dims(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}dimsLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}static startSparseTensor(e){e.startObject(3)}static addValues(e,t){e.addFieldOffset(0,t,0)}static addIndices(e,t){e.addFieldOffset(1,t,0)}static addDims(e,t){e.addFieldOffset(2,t,0)}static createDimsVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startDimsVector(e,t){e.startVector(8,t,8)}static endSparseTensor(e){return e.endObject()}static createSparseTensor(e,t,r,s){return n.startSparseTensor(e),n.addValues(e,t),n.addIndices(e,r),n.addDims(e,s),n.endSparseTensor(e)}}t.SparseTensor=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsAttribute(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsAttribute(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}type(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readInt32(this.bb_pos+e):0}f(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readFloat32(this.bb_pos+e):0}i(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}s(e){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__string(this.bb_pos+t,e):null}t(t){let n=this.bb.__offset(this.bb_pos,16);return n?(t||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}g(t){let n=this.bb.__offset(this.bb_pos,18);return n?(t||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}floats(e){let t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}floatsLength(){let e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}floatsArray(){let e=this.bb.__offset(this.bb_pos,20);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ints(e){let t=this.bb.__offset(this.bb_pos,22);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}intsLength(){let e=this.bb.__offset(this.bb_pos,22);return e?this.bb.__vector_len(this.bb_pos+e):0}strings(e,t){let n=this.bb.__offset(this.bb_pos,24);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}stringsLength(){let e=this.bb.__offset(this.bb_pos,24);return e?this.bb.__vector_len(this.bb_pos+e):0}tensors(t,n){let r=this.bb.__offset(this.bb_pos,26);return r?(n||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}tensorsLength(){let e=this.bb.__offset(this.bb_pos,26);return e?this.bb.__vector_len(this.bb_pos+e):0}graphs(t,n){let r=this.bb.__offset(this.bb_pos,28);return r?(n||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}graphsLength(){let e=this.bb.__offset(this.bb_pos,28);return e?this.bb.__vector_len(this.bb_pos+e):0}static startAttribute(e){e.startObject(13)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addType(e,t){e.addFieldInt32(2,t,0)}static addF(e,t){e.addFieldFloat32(3,t,0)}static addI(e,t){e.addFieldInt64(4,t,e.createLong(0,0))}static addS(e,t){e.addFieldOffset(5,t,0)}static addT(e,t){e.addFieldOffset(6,t,0)}static addG(e,t){e.addFieldOffset(7,t,0)}static addFloats(e,t){e.addFieldOffset(8,t,0)}static createFloatsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addFloat32(t[n]);return e.endVector()}static startFloatsVector(e,t){e.startVector(4,t,4)}static addInts(e,t){e.addFieldOffset(9,t,0)}static createIntsVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startIntsVector(e,t){e.startVector(8,t,8)}static addStrings(e,t){e.addFieldOffset(10,t,0)}static createStringsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startStringsVector(e,t){e.startVector(4,t,4)}static addTensors(e,t){e.addFieldOffset(11,t,0)}static createTensorsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startTensorsVector(e,t){e.startVector(4,t,4)}static addGraphs(e,t){e.addFieldOffset(12,t,0)}static createGraphsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startGraphsVector(e,t){e.startVector(4,t,4)}static endAttribute(e){return e.endObject()}static createAttribute(e,t,r,s,a,i,o,l,u,c,h,p,d,f){return n.startAttribute(e),n.addName(e,t),n.addDocString(e,r),n.addType(e,s),n.addF(e,a),n.addI(e,i),n.addS(e,o),n.addT(e,l),n.addG(e,u),n.addFloats(e,c),n.addInts(e,h),n.addStrings(e,p),n.addTensors(e,d),n.addGraphs(e,f),n.endAttribute(e)}}t.Attribute=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsGraph(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsGraph(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}initializers(t,n){let r=this.bb.__offset(this.bb_pos,4);return r?(n||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}initializersLength(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}nodeArgs(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}nodeArgsLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}nodes(t,n){let r=this.bb.__offset(this.bb_pos,8);return r?(n||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}nodesLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}maxNodeIndex(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readUint32(this.bb_pos+e):0}nodeEdges(t,n){let r=this.bb.__offset(this.bb_pos,12);return r?(n||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}nodeEdgesLength(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}inputs(e,t){let n=this.bb.__offset(this.bb_pos,14);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}inputsLength(){let e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}outputs(e,t){let n=this.bb.__offset(this.bb_pos,16);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}outputsLength(){let e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}sparseInitializers(t,n){let r=this.bb.__offset(this.bb_pos,18);return r?(n||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}sparseInitializersLength(){let e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}static startGraph(e){e.startObject(8)}static addInitializers(e,t){e.addFieldOffset(0,t,0)}static createInitializersVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startInitializersVector(e,t){e.startVector(4,t,4)}static addNodeArgs(e,t){e.addFieldOffset(1,t,0)}static createNodeArgsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startNodeArgsVector(e,t){e.startVector(4,t,4)}static addNodes(e,t){e.addFieldOffset(2,t,0)}static createNodesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startNodesVector(e,t){e.startVector(4,t,4)}static addMaxNodeIndex(e,t){e.addFieldInt32(3,t,0)}static addNodeEdges(e,t){e.addFieldOffset(4,t,0)}static createNodeEdgesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startNodeEdgesVector(e,t){e.startVector(4,t,4)}static addInputs(e,t){e.addFieldOffset(5,t,0)}static createInputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startInputsVector(e,t){e.startVector(4,t,4)}static addOutputs(e,t){e.addFieldOffset(6,t,0)}static createOutputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startOutputsVector(e,t){e.startVector(4,t,4)}static addSparseInitializers(e,t){e.addFieldOffset(7,t,0)}static createSparseInitializersVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startSparseInitializersVector(e,t){e.startVector(4,t,4)}static endGraph(e){return e.endObject()}static createGraph(e,t,r,s,a,i,o,l,u){return n.startGraph(e),n.addInitializers(e,t),n.addNodeArgs(e,r),n.addNodes(e,s),n.addMaxNodeIndex(e,a),n.addNodeEdges(e,i),n.addInputs(e,o),n.addOutputs(e,l),n.addSparseInitializers(e,u),n.endGraph(e)}}t.Graph=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsModel(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsModel(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}irVersion(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}opsetImport(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}opsetImportLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}producerName(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null}producerVersion(e){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__string(this.bb_pos+t,e):null}domain(e){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__string(this.bb_pos+t,e):null}modelVersion(){let e=this.bb.__offset(this.bb_pos,14);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}docString(e){let t=this.bb.__offset(this.bb_pos,16);return t?this.bb.__string(this.bb_pos+t,e):null}graph(t){let n=this.bb.__offset(this.bb_pos,18);return n?(t||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}graphDocString(e){let t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__string(this.bb_pos+t,e):null}static startModel(e){e.startObject(9)}static addIrVersion(e,t){e.addFieldInt64(0,t,e.createLong(0,0))}static addOpsetImport(e,t){e.addFieldOffset(1,t,0)}static createOpsetImportVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startOpsetImportVector(e,t){e.startVector(4,t,4)}static addProducerName(e,t){e.addFieldOffset(2,t,0)}static addProducerVersion(e,t){e.addFieldOffset(3,t,0)}static addDomain(e,t){e.addFieldOffset(4,t,0)}static addModelVersion(e,t){e.addFieldInt64(5,t,e.createLong(0,0))}static addDocString(e,t){e.addFieldOffset(6,t,0)}static addGraph(e,t){e.addFieldOffset(7,t,0)}static addGraphDocString(e,t){e.addFieldOffset(8,t,0)}static endModel(e){return e.endObject()}static createModel(e,t,r,s,a,i,o,l,u,c){return n.startModel(e),n.addIrVersion(e,t),n.addOpsetImport(e,r),n.addProducerName(e,s),n.addProducerVersion(e,a),n.addDomain(e,i),n.addModelVersion(e,o),n.addDocString(e,l),n.addGraph(e,u),n.addGraphDocString(e,c),n.endModel(e)}}t.Model=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(e=>{let t;(e=>{class t{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsKernelCreateInfos(e,n){return(n||new t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsKernelCreateInfos(e,n){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(n||new t).__init(e.readInt32(e.position())+e.position(),e)}nodeIndices(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}nodeIndicesLength(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}nodeIndicesArray(){let e=this.bb.__offset(this.bb_pos,4);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}kernelDefHashes(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}kernelDefHashesLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}static startKernelCreateInfos(e){e.startObject(2)}static addNodeIndices(e,t){e.addFieldOffset(0,t,0)}static createNodeIndicesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addInt32(t[n]);return e.endVector()}static startNodeIndicesVector(e,t){e.startVector(4,t,4)}static addKernelDefHashes(e,t){e.addFieldOffset(1,t,0)}static createKernelDefHashesVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startKernelDefHashesVector(e,t){e.startVector(8,t,8)}static endKernelCreateInfos(e){return e.endObject()}static createKernelCreateInfos(e,n,r){return t.startKernelCreateInfos(e),t.addNodeIndices(e,n),t.addKernelDefHashes(e,r),t.endKernelCreateInfos(e)}}e.KernelCreateInfos=t})(t=e.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSubGraphSessionState(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSubGraphSessionState(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}graphId(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}sessionState(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startSubGraphSessionState(e){e.startObject(2)}static addGraphId(e,t){e.addFieldOffset(0,t,0)}static addSessionState(e,t){e.addFieldOffset(1,t,0)}static endSubGraphSessionState(e){let t=e.endObject();return e.requiredField(t,4),t}static createSubGraphSessionState(e,t,r){return n.startSubGraphSessionState(e),n.addGraphId(e,t),n.addSessionState(e,r),n.endSubGraphSessionState(e)}}t.SubGraphSessionState=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSessionState(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSessionState(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}kernels(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}subGraphSessionStates(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}subGraphSessionStatesLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}static startSessionState(e){e.startObject(2)}static addKernels(e,t){e.addFieldOffset(0,t,0)}static addSubGraphSessionStates(e,t){e.addFieldOffset(1,t,0)}static createSubGraphSessionStatesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startSubGraphSessionStatesVector(e,t){e.startVector(4,t,4)}static endSessionState(e){return e.endObject()}static createSessionState(e,t,r){return n.startSessionState(e),n.addKernels(e,t),n.addSubGraphSessionStates(e,r),n.endSessionState(e)}}t.SessionState=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={}),(e=>{let t;(t=>{let n;(t=>{class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsInferenceSession(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsInferenceSession(e,t){return e.setPosition(e.position()+_.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static bufferHasIdentifier(e){return e.__has_identifier("ORTM")}ortVersion(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}model(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}sessionState(t){let n=this.bb.__offset(this.bb_pos,8);return n?(t||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startInferenceSession(e){e.startObject(3)}static addOrtVersion(e,t){e.addFieldOffset(0,t,0)}static addModel(e,t){e.addFieldOffset(1,t,0)}static addSessionState(e,t){e.addFieldOffset(2,t,0)}static endInferenceSession(e){return e.endObject()}static finishInferenceSessionBuffer(e,t){e.finish(t,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(e,t){e.finish(t,"ORTM",!0)}static createInferenceSession(e,t,r,s){return n.startInferenceSession(e),n.addOrtVersion(e,t),n.addModel(e,r),n.addSessionState(e,s),n.endInferenceSession(e)}}t.InferenceSession=n})(n=t.fbs||={})})(t=e.experimental||={})})(W||={})})),Ns=me(((e,t)=>{t.exports=function(e,t){for(var n=new Array(arguments.length-1),r=0,s=2,a=!0;s<arguments.length;)n[r++]=arguments[s++];return new Promise((function(s,i){n[r]=function(e){if(a)if(a=!1,e)i(e);else{for(var t=new Array(arguments.length-1),n=0;n<t.length;)t[n++]=arguments[n];s.apply(null,t)}};try{e.apply(t||null,n)}catch(e){a&&(a=!1,i(e))}}))}})),Us=me((e=>{var t=e;t.length=function(e){var t=e.length;if(!t)return 0;for(var n=0;--t%4>1&&"="===e.charAt(t);)++n;return Math.ceil(3*e.length)/4-n};var n,r=new Array(64),s=new Array(123);for(n=0;n<64;)s[r[n]=n<26?n+65:n<52?n+71:n<62?n-4:n-59|43]=n++;t.encode=function(e,t,n){for(var s,a=null,i=[],o=0,l=0;t<n;){var u=e[t++];switch(l){case 0:i[o++]=r[u>>2],s=(3&u)<<4,l=1;break;case 1:i[o++]=r[s|u>>4],s=(15&u)<<2,l=2;break;case 2:i[o++]=r[s|u>>6],i[o++]=r[63&u],l=0}o>8191&&((a||(a=[])).push(String.fromCharCode.apply(String,i)),o=0)}return l&&(i[o++]=r[s],i[o++]=61,1===l&&(i[o++]=61)),a?(o&&a.push(String.fromCharCode.apply(String,i.slice(0,o))),a.join("")):String.fromCharCode.apply(String,i.slice(0,o))};var a="invalid encoding";t.decode=function(e,t,n){for(var r,i=n,o=0,l=0;l<e.length;){var u=e.charCodeAt(l++);if(61===u&&o>1)break;if(void 0===(u=s[u]))throw Error(a);switch(o){case 0:r=u,o=1;break;case 1:t[n++]=r<<2|(48&u)>>4,r=u,o=2;break;case 2:t[n++]=(15&r)<<4|(60&u)>>2,r=u,o=3;break;case 3:t[n++]=(3&r)<<6|u,o=0}}if(1===o)throw Error(a);return n-i},t.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}})),Vs=me(((e,t)=>{function n(){this._listeners={}}t.exports=n,n.prototype.on=function(e,t,n){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:n||this}),this},n.prototype.off=function(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var n=this._listeners[e],r=0;r<n.length;)n[r].fn===t?n.splice(r,1):++r;return this},n.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var n=[],r=1;r<arguments.length;)n.push(arguments[r++]);for(r=0;r<t.length;)t[r].fn.apply(t[r++].ctx,n)}return this}})),Ks=me(((e,t)=>{function n(e){return typeof Float32Array<"u"?function(){var t=new Float32Array([-0]),n=new Uint8Array(t.buffer),r=128===n[3];function s(e,r,s){t[0]=e,r[s]=n[0],r[s+1]=n[1],r[s+2]=n[2],r[s+3]=n[3]}function a(e,r,s){t[0]=e,r[s]=n[3],r[s+1]=n[2],r[s+2]=n[1],r[s+3]=n[0]}function i(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],t[0]}function o(e,r){return n[3]=e[r],n[2]=e[r+1],n[1]=e[r+2],n[0]=e[r+3],t[0]}e.writeFloatLE=r?s:a,e.writeFloatBE=r?a:s,e.readFloatLE=r?i:o,e.readFloatBE=r?o:i}():function(){function t(e,t,n,r){var s=t<0?1:0;if(s&&(t=-t),0===t)e(1/t>0?0:2147483648,n,r);else if(isNaN(t))e(2143289344,n,r);else if(t>34028234663852886e22)e((s<<31|2139095040)>>>0,n,r);else if(t<11754943508222875e-54)e((s<<31|Math.round(t/1401298464324817e-60))>>>0,n,r);else{var a=Math.floor(Math.log(t)/Math.LN2);e((s<<31|a+127<<23|8388607&Math.round(t*Math.pow(2,-a)*8388608))>>>0,n,r)}}function n(e,t,n){var r=e(t,n),s=2*(r>>31)+1,a=r>>>23&255,i=8388607&r;return 255===a?i?NaN:s*(1/0):0===a?1401298464324817e-60*s*i:s*Math.pow(2,a-150)*(i+8388608)}e.writeFloatLE=t.bind(null,r),e.writeFloatBE=t.bind(null,s),e.readFloatLE=n.bind(null,a),e.readFloatBE=n.bind(null,i)}(),typeof Float64Array<"u"?function(){var t=new Float64Array([-0]),n=new Uint8Array(t.buffer),r=128===n[7];function s(e,r,s){t[0]=e,r[s]=n[0],r[s+1]=n[1],r[s+2]=n[2],r[s+3]=n[3],r[s+4]=n[4],r[s+5]=n[5],r[s+6]=n[6],r[s+7]=n[7]}function a(e,r,s){t[0]=e,r[s]=n[7],r[s+1]=n[6],r[s+2]=n[5],r[s+3]=n[4],r[s+4]=n[3],r[s+5]=n[2],r[s+6]=n[1],r[s+7]=n[0]}function i(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],n[4]=e[r+4],n[5]=e[r+5],n[6]=e[r+6],n[7]=e[r+7],t[0]}function o(e,r){return n[7]=e[r],n[6]=e[r+1],n[5]=e[r+2],n[4]=e[r+3],n[3]=e[r+4],n[2]=e[r+5],n[1]=e[r+6],n[0]=e[r+7],t[0]}e.writeDoubleLE=r?s:a,e.writeDoubleBE=r?a:s,e.readDoubleLE=r?i:o,e.readDoubleBE=r?o:i}():function(){function t(e,t,n,r,s,a){var i=r<0?1:0;if(i&&(r=-r),0===r)e(0,s,a+t),e(1/r>0?0:2147483648,s,a+n);else if(isNaN(r))e(0,s,a+t),e(2146959360,s,a+n);else if(r>17976931348623157e292)e(0,s,a+t),e((i<<31|2146435072)>>>0,s,a+n);else{var o;if(r<22250738585072014e-324)e((o=r/5e-324)>>>0,s,a+t),e((i<<31|o/4294967296)>>>0,s,a+n);else{var l=Math.floor(Math.log(r)/Math.LN2);1024===l&&(l=1023),e(4503599627370496*(o=r*Math.pow(2,-l))>>>0,s,a+t),e((i<<31|l+1023<<20|1048576*o&1048575)>>>0,s,a+n)}}}function n(e,t,n,r,s){var a=e(r,s+t),i=e(r,s+n),o=2*(i>>31)+1,l=i>>>20&2047,u=4294967296*(1048575&i)+a;return 2047===l?u?NaN:o*(1/0):0===l?5e-324*o*u:o*Math.pow(2,l-1075)*(u+4503599627370496)}e.writeDoubleLE=t.bind(null,r,0,4),e.writeDoubleBE=t.bind(null,s,4,0),e.readDoubleLE=n.bind(null,a,0,4),e.readDoubleBE=n.bind(null,i,4,0)}(),e}function r(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}function s(e,t,n){t[n]=e>>>24,t[n+1]=e>>>16&255,t[n+2]=e>>>8&255,t[n+3]=255&e}function a(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function i(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}t.exports=n(n)})),Js=me(((exports,module)=>{function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}module.exports=inquire})),Qs=me((e=>{var t=e;t.length=function(e){for(var t=0,n=0,r=0;r<e.length;++r)(n=e.charCodeAt(r))<128?t+=1:n<2048?t+=2:55296==(64512&n)&&56320==(64512&e.charCodeAt(r+1))?(++r,t+=4):t+=3;return t},t.read=function(e,t,n){if(n-t<1)return"";for(var r,s=null,a=[],i=0;t<n;)(r=e[t++])<128?a[i++]=r:r>191&&r<224?a[i++]=(31&r)<<6|63&e[t++]:r>239&&r<365?(r=((7&r)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,a[i++]=55296+(r>>10),a[i++]=56320+(1023&r)):a[i++]=(15&r)<<12|(63&e[t++])<<6|63&e[t++],i>8191&&((s||(s=[])).push(String.fromCharCode.apply(String,a)),i=0);return s?(i&&s.push(String.fromCharCode.apply(String,a.slice(0,i))),s.join("")):String.fromCharCode.apply(String,a.slice(0,i))},t.write=function(e,t,n){for(var r,s,a=n,i=0;i<e.length;++i)(r=e.charCodeAt(i))<128?t[n++]=r:r<2048?(t[n++]=r>>6|192,t[n++]=63&r|128):55296==(64512&r)&&56320==(64512&(s=e.charCodeAt(i+1)))?(r=65536+((1023&r)<<10)+(1023&s),++i,t[n++]=r>>18|240,t[n++]=r>>12&63|128,t[n++]=r>>6&63|128,t[n++]=63&r|128):(t[n++]=r>>12|224,t[n++]=r>>6&63|128,t[n++]=63&r|128);return n-a}})),tu=me(((e,t)=>{t.exports=function(e,t,n){var r=n||8192,s=r>>>1,a=null,i=r;return function(n){if(n<1||n>s)return e(n);i+n>r&&(a=e(r),i=0);var o=t.call(a,i,i+=n);return 7&i&&(i=1+(7|i)),o}}})),nu=me(((e,t)=>{t.exports=r;var n=Qt();function r(e,t){this.lo=e>>>0,this.hi=t>>>0}var s=r.zero=new r(0,0);s.toNumber=function(){return 0},s.zzEncode=s.zzDecode=function(){return this},s.length=function(){return 1};var a=r.zeroHash="\0\0\0\0\0\0\0\0";r.fromNumber=function(e){if(0===e)return s;var t=e<0;t&&(e=-e);var n=e>>>0,a=(e-n)/4294967296>>>0;return t&&(a=~a>>>0,n=~n>>>0,++n>4294967295&&(n=0,++a>4294967295&&(a=0))),new r(n,a)},r.from=function(e){if("number"==typeof e)return r.fromNumber(e);if(n.isString(e)){if(!n.Long)return r.fromNumber(parseInt(e,10));e=n.Long.fromString(e)}return e.low||e.high?new r(e.low>>>0,e.high>>>0):s},r.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,n=~this.hi>>>0;return t||(n=n+1>>>0),-(t+4294967296*n)}return this.lo+4294967296*this.hi},r.prototype.toLong=function(e){return n.Long?new n.Long(0|this.lo,0|this.hi,!!e):{low:0|this.lo,high:0|this.hi,unsigned:!!e}};var i=String.prototype.charCodeAt;r.fromHash=function(e){return e===a?s:new r((i.call(e,0)|i.call(e,1)<<8|i.call(e,2)<<16|i.call(e,3)<<24)>>>0,(i.call(e,4)|i.call(e,5)<<8|i.call(e,6)<<16|i.call(e,7)<<24)>>>0)},r.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},r.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},r.prototype.zzDecode=function(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},r.prototype.length=function(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return 0===n?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:n<128?9:10}})),Qt=me((e=>{var t=e;function n(e,t,n){for(var r=Object.keys(t),s=0;s<r.length;++s)(void 0===e[r[s]]||!n)&&(e[r[s]]=t[r[s]]);return e}function r(e){function t(e,r){if(!(this instanceof t))return new t(e,r);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,t):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),r&&n(this,r)}return t.prototype=Object.create(Error.prototype,{constructor:{value:t,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return e},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),t}t.asPromise=Ns(),t.base64=Us(),t.EventEmitter=Vs(),t.float=Ks(),t.inquire=Js(),t.utf8=Qs(),t.pool=tu(),t.LongBits=nu(),t.isNode=!!(typeof __webpack_require__.g<"u"&&__webpack_require__.g&&__webpack_require__.g.process&&__webpack_require__.g.process.versions&&__webpack_require__.g.process.versions.node),t.global=t.isNode&&__webpack_require__.g||typeof window<"u"&&window||typeof self<"u"&&self||e,t.emptyArray=Object.freeze?Object.freeze([]):[],t.emptyObject=Object.freeze?Object.freeze({}):{},t.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},t.isString=function(e){return"string"==typeof e||e instanceof String},t.isObject=function(e){return e&&"object"==typeof e},t.isset=t.isSet=function(e,t){var n=e[t];return!(null==n||!e.hasOwnProperty(t))&&("object"!=typeof n||(Array.isArray(n)?n.length:Object.keys(n).length)>0)},t.Buffer=function(){try{var e=t.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch{return null}}(),t._Buffer_from=null,t._Buffer_allocUnsafe=null,t.newBuffer=function(e){return"number"==typeof e?t.Buffer?t._Buffer_allocUnsafe(e):new t.Array(e):t.Buffer?t._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)},t.Array=typeof Uint8Array<"u"?Uint8Array:Array,t.Long=t.global.dcodeIO&&t.global.dcodeIO.Long||t.global.Long||t.inquire("long"),t.key2Re=/^true|false|0|1$/,t.key32Re=/^-?(?:0|[1-9][0-9]*)$/,t.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,t.longToHash=function(e){return e?t.LongBits.from(e).toHash():t.LongBits.zeroHash},t.longFromHash=function(e,n){var r=t.LongBits.fromHash(e);return t.Long?t.Long.fromBits(r.lo,r.hi,n):r.toNumber(!!n)},t.merge=n,t.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)},t.newError=r,t.ProtocolError=r("ProtocolError"),t.oneOfGetter=function(e){for(var t={},n=0;n<e.length;++n)t[e[n]]=1;return function(){for(var e=Object.keys(this),n=e.length-1;n>-1;--n)if(1===t[e[n]]&&void 0!==this[e[n]]&&null!==this[e[n]])return e[n]}},t.oneOfSetter=function(e){return function(t){for(var n=0;n<e.length;++n)e[n]!==t&&delete this[e[n]]}},t.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},t._configure=function(){var e=t.Buffer;e?(t._Buffer_from=e.from!==Uint8Array.from&&e.from||function(t,n){return new e(t,n)},t._Buffer_allocUnsafe=e.allocUnsafe||function(t){return new e(t)}):t._Buffer_from=t._Buffer_allocUnsafe=null}})),fi=me(((e,t)=>{t.exports=c;var n,r=Qt(),s=r.LongBits,a=r.base64,i=r.utf8;function o(e,t,n){this.fn=e,this.len=t,this.next=void 0,this.val=n}function l(){}function u(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}function c(){this.len=0,this.head=new o(l,0,0),this.tail=this.head,this.states=null}var h=function(){return r.Buffer?function(){return(c.create=function(){return new n})()}:function(){return new c}};function p(e,t,n){t[n]=255&e}function d(e,t){this.len=e,this.next=void 0,this.val=t}function f(e,t,n){for(;e.hi;)t[n++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[n++]=127&e.lo|128,e.lo=e.lo>>>7;t[n++]=e.lo}function m(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}c.create=h(),c.alloc=function(e){return new r.Array(e)},r.Array!==Array&&(c.alloc=r.pool(c.alloc,r.Array.prototype.subarray)),c.prototype._push=function(e,t,n){return this.tail=this.tail.next=new o(e,t,n),this.len+=t,this},d.prototype=Object.create(o.prototype),d.prototype.fn=function(e,t,n){for(;e>127;)t[n++]=127&e|128,e>>>=7;t[n]=e},c.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new d((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},c.prototype.int32=function(e){return e<0?this._push(f,10,s.fromNumber(e)):this.uint32(e)},c.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)},c.prototype.uint64=function(e){var t=s.from(e);return this._push(f,t.length(),t)},c.prototype.int64=c.prototype.uint64,c.prototype.sint64=function(e){var t=s.from(e).zzEncode();return this._push(f,t.length(),t)},c.prototype.bool=function(e){return this._push(p,1,e?1:0)},c.prototype.fixed32=function(e){return this._push(m,4,e>>>0)},c.prototype.sfixed32=c.prototype.fixed32,c.prototype.fixed64=function(e){var t=s.from(e);return this._push(m,4,t.lo)._push(m,4,t.hi)},c.prototype.sfixed64=c.prototype.fixed64,c.prototype.float=function(e){return this._push(r.float.writeFloatLE,4,e)},c.prototype.double=function(e){return this._push(r.float.writeDoubleLE,8,e)};var g=r.Array.prototype.set?function(e,t,n){t.set(e,n)}:function(e,t,n){for(var r=0;r<e.length;++r)t[n+r]=e[r]};c.prototype.bytes=function(e){var t=e.length>>>0;if(!t)return this._push(p,1,0);if(r.isString(e)){var n=c.alloc(t=a.length(e));a.decode(e,n,0),e=n}return this.uint32(t)._push(g,t,e)},c.prototype.string=function(e){var t=i.length(e);return t?this.uint32(t)._push(i.write,t,e):this._push(p,1,0)},c.prototype.fork=function(){return this.states=new u(this),this.head=this.tail=new o(l,0,0),this.len=0,this},c.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new o(l,0,0),this.len=0),this},c.prototype.ldelim=function(){var e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n&&(this.tail.next=e.next,this.tail=t,this.len+=n),this},c.prototype.finish=function(){for(var e=this.head.next,t=this.constructor.alloc(this.len),n=0;e;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t},c._configure=function(e){n=e,c.create=h(),n._configure()}})),pu=me(((e,t)=>{t.exports=s;var n=fi();(s.prototype=Object.create(n.prototype)).constructor=s;var r=Qt();function s(){n.call(this)}function a(e,t,n){e.length<40?r.utf8.write(e,t,n):t.utf8Write?t.utf8Write(e,n):t.write(e,n)}s._configure=function(){s.alloc=r._Buffer_allocUnsafe,s.writeBytesBuffer=r.Buffer&&r.Buffer.prototype instanceof Uint8Array&&"set"===r.Buffer.prototype.set.name?function(e,t,n){t.set(e,n)}:function(e,t,n){if(e.copy)e.copy(t,n,0,e.length);else for(var r=0;r<e.length;)t[n++]=e[r++]}},s.prototype.bytes=function(e){r.isString(e)&&(e=r._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(s.writeBytesBuffer,t,e),this},s.prototype.string=function(e){var t=r.Buffer.byteLength(e);return this.uint32(t),t&&this._push(a,t,e),this},s._configure()})),di=me(((e,t)=>{t.exports=o;var n,r=Qt(),s=r.LongBits,a=r.utf8;function i(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function o(e){this.buf=e,this.pos=0,this.len=e.length}var l,u=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new o(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new o(e);throw Error("illegal buffer")},c=function(){return r.Buffer?function(e){return(o.create=function(e){return r.Buffer.isBuffer(e)?new n(e):u(e)})(e)}:u};function h(){var e=new s(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw i(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw i(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function p(e,t){return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function d(){if(this.pos+8>this.len)throw i(this,8);return new s(p(this.buf,this.pos+=4),p(this.buf,this.pos+=4))}o.create=c(),o.prototype._slice=r.Array.prototype.subarray||r.Array.prototype.slice,o.prototype.uint32=(l=4294967295,function(){if(l=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128||(l=(l|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)||(l=(l|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)||(l=(l|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)||(l=(l|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128))return l;if((this.pos+=5)>this.len)throw this.pos=this.len,i(this,10);return l}),o.prototype.int32=function(){return 0|this.uint32()},o.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(1&e)},o.prototype.bool=function(){return 0!==this.uint32()},o.prototype.fixed32=function(){if(this.pos+4>this.len)throw i(this,4);return p(this.buf,this.pos+=4)},o.prototype.sfixed32=function(){if(this.pos+4>this.len)throw i(this,4);return 0|p(this.buf,this.pos+=4)},o.prototype.float=function(){if(this.pos+4>this.len)throw i(this,4);var e=r.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},o.prototype.double=function(){if(this.pos+8>this.len)throw i(this,4);var e=r.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},o.prototype.bytes=function(){var e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw i(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,n):t===n?new this.buf.constructor(0):this._slice.call(this.buf,t,n)},o.prototype.string=function(){var e=this.bytes();return a.read(e,0,e.length)},o.prototype.skip=function(e){if("number"==typeof e){if(this.pos+e>this.len)throw i(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw i(this)}while(128&this.buf[this.pos++]);return this},o.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},o._configure=function(e){n=e,o.create=c(),n._configure();var t=r.Long?"toLong":"toNumber";r.merge(o.prototype,{int64:function(){return h.call(this)[t](!1)},uint64:function(){return h.call(this)[t](!0)},sint64:function(){return h.call(this).zzDecode()[t](!1)},fixed64:function(){return d.call(this)[t](!0)},sfixed64:function(){return d.call(this)[t](!1)}})}})),vu=me(((e,t)=>{t.exports=s;var n=di();(s.prototype=Object.create(n.prototype)).constructor=s;var r=Qt();function s(e){n.call(this,e)}s._configure=function(){r.Buffer&&(s.prototype._slice=r.Buffer.prototype.slice)},s.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))},s._configure()})),_u=me(((e,t)=>{t.exports=r;var n=Qt();function r(e,t,r){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");n.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=!!t,this.responseDelimited=!!r}(r.prototype=Object.create(n.EventEmitter.prototype)).constructor=r,r.prototype.rpcCall=function e(t,r,s,a,i){if(!a)throw TypeError("request must be specified");var o=this;if(!i)return n.asPromise(e,o,t,r,s,a);if(o.rpcImpl)try{return o.rpcImpl(t,r[o.requestDelimited?"encodeDelimited":"encode"](a).finish(),(function(e,n){if(e)return o.emit("error",e,t),i(e);if(null!==n){if(!(n instanceof s))try{n=s[o.responseDelimited?"decodeDelimited":"decode"](n)}catch(e){return o.emit("error",e,t),i(e)}return o.emit("data",n,t),i(null,n)}o.end(!0)}))}catch(e){return o.emit("error",e,t),void setTimeout((function(){i(e)}),0)}else setTimeout((function(){i(Error("already ended"))}),0)},r.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}})),Iu=me((e=>{e.Service=_u()})),Au=me(((e,t)=>{t.exports={}})),Du=me((e=>{var t=e;function n(){t.util._configure(),t.Writer._configure(t.BufferWriter),t.Reader._configure(t.BufferReader)}t.build="minimal",t.Writer=fi(),t.BufferWriter=pu(),t.Reader=di(),t.BufferReader=vu(),t.util=Qt(),t.rpc=Iu(),t.roots=Au(),t.configure=n,n()})),Fu=me(((e,t)=>{t.exports=Du()})),$r=me(((e,t)=>{var n,r,s,a=Fu(),i=a.Reader,o=a.Writer,l=a.util,u=a.roots.default||(a.roots.default={});u.onnx=((s={}).Version=(n={},(r=Object.create(n))[n[0]="_START_VERSION"]=0,r[n[1]="IR_VERSION_2017_10_10"]=1,r[n[2]="IR_VERSION_2017_10_30"]=2,r[n[3]="IR_VERSION_2017_11_3"]=3,r[n[4]="IR_VERSION_2019_1_22"]=4,r[n[5]="IR_VERSION_2019_3_18"]=5,r[n[6]="IR_VERSION_2019_9_19"]=6,r[n[7]="IR_VERSION_2020_5_8"]=7,r[n[8]="IR_VERSION_2021_7_30"]=8,r[n[9]="IR_VERSION"]=9,r),s.AttributeProto=function(){function e(e){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=l.Long?l.Long.fromBits(0,0,!1):0,e.prototype.s=l.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=l.emptyArray,e.prototype.ints=l.emptyArray,e.prototype.strings=l.emptyArray,e.prototype.tensors=l.emptyArray,e.prototype.graphs=l.emptyArray,e.prototype.sparseTensors=l.emptyArray,e.prototype.typeProtos=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(10).string(e.name),null!=e.f&&Object.hasOwnProperty.call(e,"f")&&t.uint32(21).float(e.f),null!=e.i&&Object.hasOwnProperty.call(e,"i")&&t.uint32(24).int64(e.i),null!=e.s&&Object.hasOwnProperty.call(e,"s")&&t.uint32(34).bytes(e.s),null!=e.t&&Object.hasOwnProperty.call(e,"t")&&u.onnx.TensorProto.encode(e.t,t.uint32(42).fork()).ldelim(),null!=e.g&&Object.hasOwnProperty.call(e,"g")&&u.onnx.GraphProto.encode(e.g,t.uint32(50).fork()).ldelim(),null!=e.floats&&e.floats.length){t.uint32(58).fork();for(var n=0;n<e.floats.length;++n)t.float(e.floats[n]);t.ldelim()}if(null!=e.ints&&e.ints.length){for(t.uint32(66).fork(),n=0;n<e.ints.length;++n)t.int64(e.ints[n]);t.ldelim()}if(null!=e.strings&&e.strings.length)for(n=0;n<e.strings.length;++n)t.uint32(74).bytes(e.strings[n]);if(null!=e.tensors&&e.tensors.length)for(n=0;n<e.tensors.length;++n)u.onnx.TensorProto.encode(e.tensors[n],t.uint32(82).fork()).ldelim();if(null!=e.graphs&&e.graphs.length)for(n=0;n<e.graphs.length;++n)u.onnx.GraphProto.encode(e.graphs[n],t.uint32(90).fork()).ldelim();if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(106).string(e.docString),null!=e.tp&&Object.hasOwnProperty.call(e,"tp")&&u.onnx.TypeProto.encode(e.tp,t.uint32(114).fork()).ldelim(),null!=e.typeProtos&&e.typeProtos.length)for(n=0;n<e.typeProtos.length;++n)u.onnx.TypeProto.encode(e.typeProtos[n],t.uint32(122).fork()).ldelim();if(null!=e.type&&Object.hasOwnProperty.call(e,"type")&&t.uint32(160).int32(e.type),null!=e.refAttrName&&Object.hasOwnProperty.call(e,"refAttrName")&&t.uint32(170).string(e.refAttrName),null!=e.sparseTensor&&Object.hasOwnProperty.call(e,"sparseTensor")&&u.onnx.SparseTensorProto.encode(e.sparseTensor,t.uint32(178).fork()).ldelim(),null!=e.sparseTensors&&e.sparseTensors.length)for(n=0;n<e.sparseTensors.length;++n)u.onnx.SparseTensorProto.encode(e.sparseTensors[n],t.uint32(186).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.AttributeProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.name=e.string();break;case 21:r.refAttrName=e.string();break;case 13:r.docString=e.string();break;case 20:r.type=e.int32();break;case 2:r.f=e.float();break;case 3:r.i=e.int64();break;case 4:r.s=e.bytes();break;case 5:r.t=u.onnx.TensorProto.decode(e,e.uint32());break;case 6:r.g=u.onnx.GraphProto.decode(e,e.uint32());break;case 22:r.sparseTensor=u.onnx.SparseTensorProto.decode(e,e.uint32());break;case 14:r.tp=u.onnx.TypeProto.decode(e,e.uint32());break;case 7:if(r.floats&&r.floats.length||(r.floats=[]),2==(7&s))for(var a=e.uint32()+e.pos;e.pos<a;)r.floats.push(e.float());else r.floats.push(e.float());break;case 8:if(r.ints&&r.ints.length||(r.ints=[]),2==(7&s))for(a=e.uint32()+e.pos;e.pos<a;)r.ints.push(e.int64());else r.ints.push(e.int64());break;case 9:r.strings&&r.strings.length||(r.strings=[]),r.strings.push(e.bytes());break;case 10:r.tensors&&r.tensors.length||(r.tensors=[]),r.tensors.push(u.onnx.TensorProto.decode(e,e.uint32()));break;case 11:r.graphs&&r.graphs.length||(r.graphs=[]),r.graphs.push(u.onnx.GraphProto.decode(e,e.uint32()));break;case 23:r.sparseTensors&&r.sparseTensors.length||(r.sparseTensors=[]),r.sparseTensors.push(u.onnx.SparseTensorProto.decode(e,e.uint32()));break;case 15:r.typeProtos&&r.typeProtos.length||(r.typeProtos=[]),r.typeProtos.push(u.onnx.TypeProto.decode(e,e.uint32()));break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.refAttrName&&e.hasOwnProperty("refAttrName")&&!l.isString(e.refAttrName))return"refAttrName: string expected";if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.type&&e.hasOwnProperty("type"))switch(e.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:}if(null!=e.f&&e.hasOwnProperty("f")&&"number"!=typeof e.f)return"f: number expected";if(null!=e.i&&e.hasOwnProperty("i")&&!l.isInteger(e.i)&&!(e.i&&l.isInteger(e.i.low)&&l.isInteger(e.i.high)))return"i: integer|Long expected";if(null!=e.s&&e.hasOwnProperty("s")&&!(e.s&&"number"==typeof e.s.length||l.isString(e.s)))return"s: buffer expected";if(null!=e.t&&e.hasOwnProperty("t")&&(n=u.onnx.TensorProto.verify(e.t)))return"t."+n;if(null!=e.g&&e.hasOwnProperty("g")&&(n=u.onnx.GraphProto.verify(e.g)))return"g."+n;if(null!=e.sparseTensor&&e.hasOwnProperty("sparseTensor")&&(n=u.onnx.SparseTensorProto.verify(e.sparseTensor)))return"sparseTensor."+n;if(null!=e.tp&&e.hasOwnProperty("tp")&&(n=u.onnx.TypeProto.verify(e.tp)))return"tp."+n;if(null!=e.floats&&e.hasOwnProperty("floats")){if(!Array.isArray(e.floats))return"floats: array expected";for(var t=0;t<e.floats.length;++t)if("number"!=typeof e.floats[t])return"floats: number[] expected"}if(null!=e.ints&&e.hasOwnProperty("ints")){if(!Array.isArray(e.ints))return"ints: array expected";for(t=0;t<e.ints.length;++t)if(!(l.isInteger(e.ints[t])||e.ints[t]&&l.isInteger(e.ints[t].low)&&l.isInteger(e.ints[t].high)))return"ints: integer|Long[] expected"}if(null!=e.strings&&e.hasOwnProperty("strings")){if(!Array.isArray(e.strings))return"strings: array expected";for(t=0;t<e.strings.length;++t)if(!(e.strings[t]&&"number"==typeof e.strings[t].length||l.isString(e.strings[t])))return"strings: buffer[] expected"}if(null!=e.tensors&&e.hasOwnProperty("tensors")){if(!Array.isArray(e.tensors))return"tensors: array expected";for(t=0;t<e.tensors.length;++t)if(n=u.onnx.TensorProto.verify(e.tensors[t]))return"tensors."+n}if(null!=e.graphs&&e.hasOwnProperty("graphs")){if(!Array.isArray(e.graphs))return"graphs: array expected";for(t=0;t<e.graphs.length;++t)if(n=u.onnx.GraphProto.verify(e.graphs[t]))return"graphs."+n}if(null!=e.sparseTensors&&e.hasOwnProperty("sparseTensors")){if(!Array.isArray(e.sparseTensors))return"sparseTensors: array expected";for(t=0;t<e.sparseTensors.length;++t)if(n=u.onnx.SparseTensorProto.verify(e.sparseTensors[t]))return"sparseTensors."+n}if(null!=e.typeProtos&&e.hasOwnProperty("typeProtos")){if(!Array.isArray(e.typeProtos))return"typeProtos: array expected";for(t=0;t<e.typeProtos.length;++t){var n;if(n=u.onnx.TypeProto.verify(e.typeProtos[t]))return"typeProtos."+n}}return null},e.fromObject=function(e){if(e instanceof u.onnx.AttributeProto)return e;var t=new u.onnx.AttributeProto;switch(null!=e.name&&(t.name=String(e.name)),null!=e.refAttrName&&(t.refAttrName=String(e.refAttrName)),null!=e.docString&&(t.docString=String(e.docString)),e.type){default:if("number"==typeof e.type){t.type=e.type;break}break;case"UNDEFINED":case 0:t.type=0;break;case"FLOAT":case 1:t.type=1;break;case"INT":case 2:t.type=2;break;case"STRING":case 3:t.type=3;break;case"TENSOR":case 4:t.type=4;break;case"GRAPH":case 5:t.type=5;break;case"SPARSE_TENSOR":case 11:t.type=11;break;case"TYPE_PROTO":case 13:t.type=13;break;case"FLOATS":case 6:t.type=6;break;case"INTS":case 7:t.type=7;break;case"STRINGS":case 8:t.type=8;break;case"TENSORS":case 9:t.type=9;break;case"GRAPHS":case 10:t.type=10;break;case"SPARSE_TENSORS":case 12:t.type=12;break;case"TYPE_PROTOS":case 14:t.type=14}if(null!=e.f&&(t.f=Number(e.f)),null!=e.i&&(l.Long?(t.i=l.Long.fromValue(e.i)).unsigned=!1:"string"==typeof e.i?t.i=parseInt(e.i,10):"number"==typeof e.i?t.i=e.i:"object"==typeof e.i&&(t.i=new l.LongBits(e.i.low>>>0,e.i.high>>>0).toNumber())),null!=e.s&&("string"==typeof e.s?l.base64.decode(e.s,t.s=l.newBuffer(l.base64.length(e.s)),0):e.s.length>=0&&(t.s=e.s)),null!=e.t){if("object"!=typeof e.t)throw TypeError(".onnx.AttributeProto.t: object expected");t.t=u.onnx.TensorProto.fromObject(e.t)}if(null!=e.g){if("object"!=typeof e.g)throw TypeError(".onnx.AttributeProto.g: object expected");t.g=u.onnx.GraphProto.fromObject(e.g)}if(null!=e.sparseTensor){if("object"!=typeof e.sparseTensor)throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");t.sparseTensor=u.onnx.SparseTensorProto.fromObject(e.sparseTensor)}if(null!=e.tp){if("object"!=typeof e.tp)throw TypeError(".onnx.AttributeProto.tp: object expected");t.tp=u.onnx.TypeProto.fromObject(e.tp)}if(e.floats){if(!Array.isArray(e.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");t.floats=[];for(var n=0;n<e.floats.length;++n)t.floats[n]=Number(e.floats[n])}if(e.ints){if(!Array.isArray(e.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");for(t.ints=[],n=0;n<e.ints.length;++n)l.Long?(t.ints[n]=l.Long.fromValue(e.ints[n])).unsigned=!1:"string"==typeof e.ints[n]?t.ints[n]=parseInt(e.ints[n],10):"number"==typeof e.ints[n]?t.ints[n]=e.ints[n]:"object"==typeof e.ints[n]&&(t.ints[n]=new l.LongBits(e.ints[n].low>>>0,e.ints[n].high>>>0).toNumber())}if(e.strings){if(!Array.isArray(e.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");for(t.strings=[],n=0;n<e.strings.length;++n)"string"==typeof e.strings[n]?l.base64.decode(e.strings[n],t.strings[n]=l.newBuffer(l.base64.length(e.strings[n])),0):e.strings[n].length>=0&&(t.strings[n]=e.strings[n])}if(e.tensors){if(!Array.isArray(e.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");for(t.tensors=[],n=0;n<e.tensors.length;++n){if("object"!=typeof e.tensors[n])throw TypeError(".onnx.AttributeProto.tensors: object expected");t.tensors[n]=u.onnx.TensorProto.fromObject(e.tensors[n])}}if(e.graphs){if(!Array.isArray(e.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");for(t.graphs=[],n=0;n<e.graphs.length;++n){if("object"!=typeof e.graphs[n])throw TypeError(".onnx.AttributeProto.graphs: object expected");t.graphs[n]=u.onnx.GraphProto.fromObject(e.graphs[n])}}if(e.sparseTensors){if(!Array.isArray(e.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");for(t.sparseTensors=[],n=0;n<e.sparseTensors.length;++n){if("object"!=typeof e.sparseTensors[n])throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");t.sparseTensors[n]=u.onnx.SparseTensorProto.fromObject(e.sparseTensors[n])}}if(e.typeProtos){if(!Array.isArray(e.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");for(t.typeProtos=[],n=0;n<e.typeProtos.length;++n){if("object"!=typeof e.typeProtos[n])throw TypeError(".onnx.AttributeProto.typeProtos: object expected");t.typeProtos[n]=u.onnx.TypeProto.fromObject(e.typeProtos[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.floats=[],n.ints=[],n.strings=[],n.tensors=[],n.graphs=[],n.typeProtos=[],n.sparseTensors=[]),t.defaults){if(n.name="",n.f=0,l.Long){var r=new l.Long(0,0,!1);n.i=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.i=t.longs===String?"0":0;t.bytes===String?n.s="":(n.s=[],t.bytes!==Array&&(n.s=l.newBuffer(n.s))),n.t=null,n.g=null,n.docString="",n.tp=null,n.type=t.enums===String?"UNDEFINED":0,n.refAttrName="",n.sparseTensor=null}if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.f&&e.hasOwnProperty("f")&&(n.f=t.json&&!isFinite(e.f)?String(e.f):e.f),null!=e.i&&e.hasOwnProperty("i")&&("number"==typeof e.i?n.i=t.longs===String?String(e.i):e.i:n.i=t.longs===String?l.Long.prototype.toString.call(e.i):t.longs===Number?new l.LongBits(e.i.low>>>0,e.i.high>>>0).toNumber():e.i),null!=e.s&&e.hasOwnProperty("s")&&(n.s=t.bytes===String?l.base64.encode(e.s,0,e.s.length):t.bytes===Array?Array.prototype.slice.call(e.s):e.s),null!=e.t&&e.hasOwnProperty("t")&&(n.t=u.onnx.TensorProto.toObject(e.t,t)),null!=e.g&&e.hasOwnProperty("g")&&(n.g=u.onnx.GraphProto.toObject(e.g,t)),e.floats&&e.floats.length){n.floats=[];for(var s=0;s<e.floats.length;++s)n.floats[s]=t.json&&!isFinite(e.floats[s])?String(e.floats[s]):e.floats[s]}if(e.ints&&e.ints.length)for(n.ints=[],s=0;s<e.ints.length;++s)"number"==typeof e.ints[s]?n.ints[s]=t.longs===String?String(e.ints[s]):e.ints[s]:n.ints[s]=t.longs===String?l.Long.prototype.toString.call(e.ints[s]):t.longs===Number?new l.LongBits(e.ints[s].low>>>0,e.ints[s].high>>>0).toNumber():e.ints[s];if(e.strings&&e.strings.length)for(n.strings=[],s=0;s<e.strings.length;++s)n.strings[s]=t.bytes===String?l.base64.encode(e.strings[s],0,e.strings[s].length):t.bytes===Array?Array.prototype.slice.call(e.strings[s]):e.strings[s];if(e.tensors&&e.tensors.length)for(n.tensors=[],s=0;s<e.tensors.length;++s)n.tensors[s]=u.onnx.TensorProto.toObject(e.tensors[s],t);if(e.graphs&&e.graphs.length)for(n.graphs=[],s=0;s<e.graphs.length;++s)n.graphs[s]=u.onnx.GraphProto.toObject(e.graphs[s],t);if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),null!=e.tp&&e.hasOwnProperty("tp")&&(n.tp=u.onnx.TypeProto.toObject(e.tp,t)),e.typeProtos&&e.typeProtos.length)for(n.typeProtos=[],s=0;s<e.typeProtos.length;++s)n.typeProtos[s]=u.onnx.TypeProto.toObject(e.typeProtos[s],t);if(null!=e.type&&e.hasOwnProperty("type")&&(n.type=t.enums===String?void 0===u.onnx.AttributeProto.AttributeType[e.type]?e.type:u.onnx.AttributeProto.AttributeType[e.type]:e.type),null!=e.refAttrName&&e.hasOwnProperty("refAttrName")&&(n.refAttrName=e.refAttrName),null!=e.sparseTensor&&e.hasOwnProperty("sparseTensor")&&(n.sparseTensor=u.onnx.SparseTensorProto.toObject(e.sparseTensor,t)),e.sparseTensors&&e.sparseTensors.length)for(n.sparseTensors=[],s=0;s<e.sparseTensors.length;++s)n.sparseTensors[s]=u.onnx.SparseTensorProto.toObject(e.sparseTensors[s],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.AttributeProto"},e.AttributeType=function(){var e={},t=Object.create(e);return t[e[0]="UNDEFINED"]=0,t[e[1]="FLOAT"]=1,t[e[2]="INT"]=2,t[e[3]="STRING"]=3,t[e[4]="TENSOR"]=4,t[e[5]="GRAPH"]=5,t[e[11]="SPARSE_TENSOR"]=11,t[e[13]="TYPE_PROTO"]=13,t[e[6]="FLOATS"]=6,t[e[7]="INTS"]=7,t[e[8]="STRINGS"]=8,t[e[9]="TENSORS"]=9,t[e[10]="GRAPHS"]=10,t[e[12]="SPARSE_TENSORS"]=12,t[e[14]="TYPE_PROTOS"]=14,t}(),e}(),s.ValueInfoProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(10).string(e.name),null!=e.type&&Object.hasOwnProperty.call(e,"type")&&u.onnx.TypeProto.encode(e.type,t.uint32(18).fork()).ldelim(),null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(26).string(e.docString),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.ValueInfoProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.name=e.string();break;case 2:r.type=u.onnx.TypeProto.decode(e,e.uint32());break;case 3:r.docString=e.string();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.type&&e.hasOwnProperty("type")){var t=u.onnx.TypeProto.verify(e.type);if(t)return"type."+t}return null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString)?"docString: string expected":null},e.fromObject=function(e){if(e instanceof u.onnx.ValueInfoProto)return e;var t=new u.onnx.ValueInfoProto;if(null!=e.name&&(t.name=String(e.name)),null!=e.type){if("object"!=typeof e.type)throw TypeError(".onnx.ValueInfoProto.type: object expected");t.type=u.onnx.TypeProto.fromObject(e.type)}return null!=e.docString&&(t.docString=String(e.docString)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.name="",n.type=null,n.docString=""),null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.type&&e.hasOwnProperty("type")&&(n.type=u.onnx.TypeProto.toObject(e.type,t)),null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.ValueInfoProto"},e}(),s.NodeProto=function(){function e(e){if(this.input=[],this.output=[],this.attribute=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.input=l.emptyArray,e.prototype.output=l.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=l.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.input&&e.input.length)for(var n=0;n<e.input.length;++n)t.uint32(10).string(e.input[n]);if(null!=e.output&&e.output.length)for(n=0;n<e.output.length;++n)t.uint32(18).string(e.output[n]);if(null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(26).string(e.name),null!=e.opType&&Object.hasOwnProperty.call(e,"opType")&&t.uint32(34).string(e.opType),null!=e.attribute&&e.attribute.length)for(n=0;n<e.attribute.length;++n)u.onnx.AttributeProto.encode(e.attribute[n],t.uint32(42).fork()).ldelim();return null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(50).string(e.docString),null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(58).string(e.domain),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.NodeProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.input&&r.input.length||(r.input=[]),r.input.push(e.string());break;case 2:r.output&&r.output.length||(r.output=[]),r.output.push(e.string());break;case 3:r.name=e.string();break;case 4:r.opType=e.string();break;case 7:r.domain=e.string();break;case 5:r.attribute&&r.attribute.length||(r.attribute=[]),r.attribute.push(u.onnx.AttributeProto.decode(e,e.uint32()));break;case 6:r.docString=e.string();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.input&&e.hasOwnProperty("input")){if(!Array.isArray(e.input))return"input: array expected";for(var t=0;t<e.input.length;++t)if(!l.isString(e.input[t]))return"input: string[] expected"}if(null!=e.output&&e.hasOwnProperty("output")){if(!Array.isArray(e.output))return"output: array expected";for(t=0;t<e.output.length;++t)if(!l.isString(e.output[t]))return"output: string[] expected"}if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.opType&&e.hasOwnProperty("opType")&&!l.isString(e.opType))return"opType: string expected";if(null!=e.domain&&e.hasOwnProperty("domain")&&!l.isString(e.domain))return"domain: string expected";if(null!=e.attribute&&e.hasOwnProperty("attribute")){if(!Array.isArray(e.attribute))return"attribute: array expected";for(t=0;t<e.attribute.length;++t){var n=u.onnx.AttributeProto.verify(e.attribute[t]);if(n)return"attribute."+n}}return null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString)?"docString: string expected":null},e.fromObject=function(e){if(e instanceof u.onnx.NodeProto)return e;var t=new u.onnx.NodeProto;if(e.input){if(!Array.isArray(e.input))throw TypeError(".onnx.NodeProto.input: array expected");t.input=[];for(var n=0;n<e.input.length;++n)t.input[n]=String(e.input[n])}if(e.output){if(!Array.isArray(e.output))throw TypeError(".onnx.NodeProto.output: array expected");for(t.output=[],n=0;n<e.output.length;++n)t.output[n]=String(e.output[n])}if(null!=e.name&&(t.name=String(e.name)),null!=e.opType&&(t.opType=String(e.opType)),null!=e.domain&&(t.domain=String(e.domain)),e.attribute){if(!Array.isArray(e.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");for(t.attribute=[],n=0;n<e.attribute.length;++n){if("object"!=typeof e.attribute[n])throw TypeError(".onnx.NodeProto.attribute: object expected");t.attribute[n]=u.onnx.AttributeProto.fromObject(e.attribute[n])}}return null!=e.docString&&(t.docString=String(e.docString)),t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.input=[],n.output=[],n.attribute=[]),t.defaults&&(n.name="",n.opType="",n.docString="",n.domain=""),e.input&&e.input.length){n.input=[];for(var r=0;r<e.input.length;++r)n.input[r]=e.input[r]}if(e.output&&e.output.length)for(n.output=[],r=0;r<e.output.length;++r)n.output[r]=e.output[r];if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.opType&&e.hasOwnProperty("opType")&&(n.opType=e.opType),e.attribute&&e.attribute.length)for(n.attribute=[],r=0;r<e.attribute.length;++r)n.attribute[r]=u.onnx.AttributeProto.toObject(e.attribute[r],t);return null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.NodeProto"},e}(),s.TrainingInfoProto=function(){function e(e){if(this.initializationBinding=[],this.updateBinding=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=l.emptyArray,e.prototype.updateBinding=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.initialization&&Object.hasOwnProperty.call(e,"initialization")&&u.onnx.GraphProto.encode(e.initialization,t.uint32(10).fork()).ldelim(),null!=e.algorithm&&Object.hasOwnProperty.call(e,"algorithm")&&u.onnx.GraphProto.encode(e.algorithm,t.uint32(18).fork()).ldelim(),null!=e.initializationBinding&&e.initializationBinding.length)for(var n=0;n<e.initializationBinding.length;++n)u.onnx.StringStringEntryProto.encode(e.initializationBinding[n],t.uint32(26).fork()).ldelim();if(null!=e.updateBinding&&e.updateBinding.length)for(n=0;n<e.updateBinding.length;++n)u.onnx.StringStringEntryProto.encode(e.updateBinding[n],t.uint32(34).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TrainingInfoProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.initialization=u.onnx.GraphProto.decode(e,e.uint32());break;case 2:r.algorithm=u.onnx.GraphProto.decode(e,e.uint32());break;case 3:r.initializationBinding&&r.initializationBinding.length||(r.initializationBinding=[]),r.initializationBinding.push(u.onnx.StringStringEntryProto.decode(e,e.uint32()));break;case 4:r.updateBinding&&r.updateBinding.length||(r.updateBinding=[]),r.updateBinding.push(u.onnx.StringStringEntryProto.decode(e,e.uint32()));break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.initialization&&e.hasOwnProperty("initialization")&&(n=u.onnx.GraphProto.verify(e.initialization)))return"initialization."+n;if(null!=e.algorithm&&e.hasOwnProperty("algorithm")&&(n=u.onnx.GraphProto.verify(e.algorithm)))return"algorithm."+n;if(null!=e.initializationBinding&&e.hasOwnProperty("initializationBinding")){if(!Array.isArray(e.initializationBinding))return"initializationBinding: array expected";for(var t=0;t<e.initializationBinding.length;++t)if(n=u.onnx.StringStringEntryProto.verify(e.initializationBinding[t]))return"initializationBinding."+n}if(null!=e.updateBinding&&e.hasOwnProperty("updateBinding")){if(!Array.isArray(e.updateBinding))return"updateBinding: array expected";for(t=0;t<e.updateBinding.length;++t){var n;if(n=u.onnx.StringStringEntryProto.verify(e.updateBinding[t]))return"updateBinding."+n}}return null},e.fromObject=function(e){if(e instanceof u.onnx.TrainingInfoProto)return e;var t=new u.onnx.TrainingInfoProto;if(null!=e.initialization){if("object"!=typeof e.initialization)throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");t.initialization=u.onnx.GraphProto.fromObject(e.initialization)}if(null!=e.algorithm){if("object"!=typeof e.algorithm)throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");t.algorithm=u.onnx.GraphProto.fromObject(e.algorithm)}if(e.initializationBinding){if(!Array.isArray(e.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");t.initializationBinding=[];for(var n=0;n<e.initializationBinding.length;++n){if("object"!=typeof e.initializationBinding[n])throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");t.initializationBinding[n]=u.onnx.StringStringEntryProto.fromObject(e.initializationBinding[n])}}if(e.updateBinding){if(!Array.isArray(e.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");for(t.updateBinding=[],n=0;n<e.updateBinding.length;++n){if("object"!=typeof e.updateBinding[n])throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");t.updateBinding[n]=u.onnx.StringStringEntryProto.fromObject(e.updateBinding[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.initializationBinding=[],n.updateBinding=[]),t.defaults&&(n.initialization=null,n.algorithm=null),null!=e.initialization&&e.hasOwnProperty("initialization")&&(n.initialization=u.onnx.GraphProto.toObject(e.initialization,t)),null!=e.algorithm&&e.hasOwnProperty("algorithm")&&(n.algorithm=u.onnx.GraphProto.toObject(e.algorithm,t)),e.initializationBinding&&e.initializationBinding.length){n.initializationBinding=[];for(var r=0;r<e.initializationBinding.length;++r)n.initializationBinding[r]=u.onnx.StringStringEntryProto.toObject(e.initializationBinding[r],t)}if(e.updateBinding&&e.updateBinding.length)for(n.updateBinding=[],r=0;r<e.updateBinding.length;++r)n.updateBinding[r]=u.onnx.StringStringEntryProto.toObject(e.updateBinding[r],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TrainingInfoProto"},e}(),s.ModelProto=function(){function e(e){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.irVersion=l.Long?l.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=l.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=l.Long?l.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=l.emptyArray,e.prototype.trainingInfo=l.emptyArray,e.prototype.functions=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.irVersion&&Object.hasOwnProperty.call(e,"irVersion")&&t.uint32(8).int64(e.irVersion),null!=e.producerName&&Object.hasOwnProperty.call(e,"producerName")&&t.uint32(18).string(e.producerName),null!=e.producerVersion&&Object.hasOwnProperty.call(e,"producerVersion")&&t.uint32(26).string(e.producerVersion),null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(34).string(e.domain),null!=e.modelVersion&&Object.hasOwnProperty.call(e,"modelVersion")&&t.uint32(40).int64(e.modelVersion),null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(50).string(e.docString),null!=e.graph&&Object.hasOwnProperty.call(e,"graph")&&u.onnx.GraphProto.encode(e.graph,t.uint32(58).fork()).ldelim(),null!=e.opsetImport&&e.opsetImport.length)for(var n=0;n<e.opsetImport.length;++n)u.onnx.OperatorSetIdProto.encode(e.opsetImport[n],t.uint32(66).fork()).ldelim();if(null!=e.metadataProps&&e.metadataProps.length)for(n=0;n<e.metadataProps.length;++n)u.onnx.StringStringEntryProto.encode(e.metadataProps[n],t.uint32(114).fork()).ldelim();if(null!=e.trainingInfo&&e.trainingInfo.length)for(n=0;n<e.trainingInfo.length;++n)u.onnx.TrainingInfoProto.encode(e.trainingInfo[n],t.uint32(162).fork()).ldelim();if(null!=e.functions&&e.functions.length)for(n=0;n<e.functions.length;++n)u.onnx.FunctionProto.encode(e.functions[n],t.uint32(202).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.ModelProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.irVersion=e.int64();break;case 8:r.opsetImport&&r.opsetImport.length||(r.opsetImport=[]),r.opsetImport.push(u.onnx.OperatorSetIdProto.decode(e,e.uint32()));break;case 2:r.producerName=e.string();break;case 3:r.producerVersion=e.string();break;case 4:r.domain=e.string();break;case 5:r.modelVersion=e.int64();break;case 6:r.docString=e.string();break;case 7:r.graph=u.onnx.GraphProto.decode(e,e.uint32());break;case 14:r.metadataProps&&r.metadataProps.length||(r.metadataProps=[]),r.metadataProps.push(u.onnx.StringStringEntryProto.decode(e,e.uint32()));break;case 20:r.trainingInfo&&r.trainingInfo.length||(r.trainingInfo=[]),r.trainingInfo.push(u.onnx.TrainingInfoProto.decode(e,e.uint32()));break;case 25:r.functions&&r.functions.length||(r.functions=[]),r.functions.push(u.onnx.FunctionProto.decode(e,e.uint32()));break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.irVersion&&e.hasOwnProperty("irVersion")&&!l.isInteger(e.irVersion)&&!(e.irVersion&&l.isInteger(e.irVersion.low)&&l.isInteger(e.irVersion.high)))return"irVersion: integer|Long expected";if(null!=e.opsetImport&&e.hasOwnProperty("opsetImport")){if(!Array.isArray(e.opsetImport))return"opsetImport: array expected";for(var t=0;t<e.opsetImport.length;++t)if(n=u.onnx.OperatorSetIdProto.verify(e.opsetImport[t]))return"opsetImport."+n}if(null!=e.producerName&&e.hasOwnProperty("producerName")&&!l.isString(e.producerName))return"producerName: string expected";if(null!=e.producerVersion&&e.hasOwnProperty("producerVersion")&&!l.isString(e.producerVersion))return"producerVersion: string expected";if(null!=e.domain&&e.hasOwnProperty("domain")&&!l.isString(e.domain))return"domain: string expected";if(null!=e.modelVersion&&e.hasOwnProperty("modelVersion")&&!l.isInteger(e.modelVersion)&&!(e.modelVersion&&l.isInteger(e.modelVersion.low)&&l.isInteger(e.modelVersion.high)))return"modelVersion: integer|Long expected";if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.graph&&e.hasOwnProperty("graph")&&(n=u.onnx.GraphProto.verify(e.graph)))return"graph."+n;if(null!=e.metadataProps&&e.hasOwnProperty("metadataProps")){if(!Array.isArray(e.metadataProps))return"metadataProps: array expected";for(t=0;t<e.metadataProps.length;++t)if(n=u.onnx.StringStringEntryProto.verify(e.metadataProps[t]))return"metadataProps."+n}if(null!=e.trainingInfo&&e.hasOwnProperty("trainingInfo")){if(!Array.isArray(e.trainingInfo))return"trainingInfo: array expected";for(t=0;t<e.trainingInfo.length;++t)if(n=u.onnx.TrainingInfoProto.verify(e.trainingInfo[t]))return"trainingInfo."+n}if(null!=e.functions&&e.hasOwnProperty("functions")){if(!Array.isArray(e.functions))return"functions: array expected";for(t=0;t<e.functions.length;++t){var n;if(n=u.onnx.FunctionProto.verify(e.functions[t]))return"functions."+n}}return null},e.fromObject=function(e){if(e instanceof u.onnx.ModelProto)return e;var t=new u.onnx.ModelProto;if(null!=e.irVersion&&(l.Long?(t.irVersion=l.Long.fromValue(e.irVersion)).unsigned=!1:"string"==typeof e.irVersion?t.irVersion=parseInt(e.irVersion,10):"number"==typeof e.irVersion?t.irVersion=e.irVersion:"object"==typeof e.irVersion&&(t.irVersion=new l.LongBits(e.irVersion.low>>>0,e.irVersion.high>>>0).toNumber())),e.opsetImport){if(!Array.isArray(e.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");t.opsetImport=[];for(var n=0;n<e.opsetImport.length;++n){if("object"!=typeof e.opsetImport[n])throw TypeError(".onnx.ModelProto.opsetImport: object expected");t.opsetImport[n]=u.onnx.OperatorSetIdProto.fromObject(e.opsetImport[n])}}if(null!=e.producerName&&(t.producerName=String(e.producerName)),null!=e.producerVersion&&(t.producerVersion=String(e.producerVersion)),null!=e.domain&&(t.domain=String(e.domain)),null!=e.modelVersion&&(l.Long?(t.modelVersion=l.Long.fromValue(e.modelVersion)).unsigned=!1:"string"==typeof e.modelVersion?t.modelVersion=parseInt(e.modelVersion,10):"number"==typeof e.modelVersion?t.modelVersion=e.modelVersion:"object"==typeof e.modelVersion&&(t.modelVersion=new l.LongBits(e.modelVersion.low>>>0,e.modelVersion.high>>>0).toNumber())),null!=e.docString&&(t.docString=String(e.docString)),null!=e.graph){if("object"!=typeof e.graph)throw TypeError(".onnx.ModelProto.graph: object expected");t.graph=u.onnx.GraphProto.fromObject(e.graph)}if(e.metadataProps){if(!Array.isArray(e.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");for(t.metadataProps=[],n=0;n<e.metadataProps.length;++n){if("object"!=typeof e.metadataProps[n])throw TypeError(".onnx.ModelProto.metadataProps: object expected");t.metadataProps[n]=u.onnx.StringStringEntryProto.fromObject(e.metadataProps[n])}}if(e.trainingInfo){if(!Array.isArray(e.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");for(t.trainingInfo=[],n=0;n<e.trainingInfo.length;++n){if("object"!=typeof e.trainingInfo[n])throw TypeError(".onnx.ModelProto.trainingInfo: object expected");t.trainingInfo[n]=u.onnx.TrainingInfoProto.fromObject(e.trainingInfo[n])}}if(e.functions){if(!Array.isArray(e.functions))throw TypeError(".onnx.ModelProto.functions: array expected");for(t.functions=[],n=0;n<e.functions.length;++n){if("object"!=typeof e.functions[n])throw TypeError(".onnx.ModelProto.functions: object expected");t.functions[n]=u.onnx.FunctionProto.fromObject(e.functions[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.opsetImport=[],n.metadataProps=[],n.trainingInfo=[],n.functions=[]),t.defaults){if(l.Long){var r=new l.Long(0,0,!1);n.irVersion=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.irVersion=t.longs===String?"0":0;n.producerName="",n.producerVersion="",n.domain="",l.Long?(r=new l.Long(0,0,!1),n.modelVersion=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.modelVersion=t.longs===String?"0":0,n.docString="",n.graph=null}if(null!=e.irVersion&&e.hasOwnProperty("irVersion")&&("number"==typeof e.irVersion?n.irVersion=t.longs===String?String(e.irVersion):e.irVersion:n.irVersion=t.longs===String?l.Long.prototype.toString.call(e.irVersion):t.longs===Number?new l.LongBits(e.irVersion.low>>>0,e.irVersion.high>>>0).toNumber():e.irVersion),null!=e.producerName&&e.hasOwnProperty("producerName")&&(n.producerName=e.producerName),null!=e.producerVersion&&e.hasOwnProperty("producerVersion")&&(n.producerVersion=e.producerVersion),null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),null!=e.modelVersion&&e.hasOwnProperty("modelVersion")&&("number"==typeof e.modelVersion?n.modelVersion=t.longs===String?String(e.modelVersion):e.modelVersion:n.modelVersion=t.longs===String?l.Long.prototype.toString.call(e.modelVersion):t.longs===Number?new l.LongBits(e.modelVersion.low>>>0,e.modelVersion.high>>>0).toNumber():e.modelVersion),null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),null!=e.graph&&e.hasOwnProperty("graph")&&(n.graph=u.onnx.GraphProto.toObject(e.graph,t)),e.opsetImport&&e.opsetImport.length){n.opsetImport=[];for(var s=0;s<e.opsetImport.length;++s)n.opsetImport[s]=u.onnx.OperatorSetIdProto.toObject(e.opsetImport[s],t)}if(e.metadataProps&&e.metadataProps.length)for(n.metadataProps=[],s=0;s<e.metadataProps.length;++s)n.metadataProps[s]=u.onnx.StringStringEntryProto.toObject(e.metadataProps[s],t);if(e.trainingInfo&&e.trainingInfo.length)for(n.trainingInfo=[],s=0;s<e.trainingInfo.length;++s)n.trainingInfo[s]=u.onnx.TrainingInfoProto.toObject(e.trainingInfo[s],t);if(e.functions&&e.functions.length)for(n.functions=[],s=0;s<e.functions.length;++s)n.functions[s]=u.onnx.FunctionProto.toObject(e.functions[s],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.ModelProto"},e}(),s.StringStringEntryProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.key&&Object.hasOwnProperty.call(e,"key")&&t.uint32(10).string(e.key),null!=e.value&&Object.hasOwnProperty.call(e,"value")&&t.uint32(18).string(e.value),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.StringStringEntryProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.key=e.string();break;case 2:r.value=e.string();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!l.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!l.isString(e.value)?"value: string expected":null},e.fromObject=function(e){if(e instanceof u.onnx.StringStringEntryProto)return e;var t=new u.onnx.StringStringEntryProto;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.key="",n.value=""),null!=e.key&&e.hasOwnProperty("key")&&(n.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(n.value=e.value),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.StringStringEntryProto"},e}(),s.TensorAnnotation=function(){function e(e){if(this.quantParameterTensorNames=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.tensorName&&Object.hasOwnProperty.call(e,"tensorName")&&t.uint32(10).string(e.tensorName),null!=e.quantParameterTensorNames&&e.quantParameterTensorNames.length)for(var n=0;n<e.quantParameterTensorNames.length;++n)u.onnx.StringStringEntryProto.encode(e.quantParameterTensorNames[n],t.uint32(18).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TensorAnnotation;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.tensorName=e.string();break;case 2:r.quantParameterTensorNames&&r.quantParameterTensorNames.length||(r.quantParameterTensorNames=[]),r.quantParameterTensorNames.push(u.onnx.StringStringEntryProto.decode(e,e.uint32()));break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.tensorName&&e.hasOwnProperty("tensorName")&&!l.isString(e.tensorName))return"tensorName: string expected";if(null!=e.quantParameterTensorNames&&e.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(e.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var t=0;t<e.quantParameterTensorNames.length;++t){var n=u.onnx.StringStringEntryProto.verify(e.quantParameterTensorNames[t]);if(n)return"quantParameterTensorNames."+n}}return null},e.fromObject=function(e){if(e instanceof u.onnx.TensorAnnotation)return e;var t=new u.onnx.TensorAnnotation;if(null!=e.tensorName&&(t.tensorName=String(e.tensorName)),e.quantParameterTensorNames){if(!Array.isArray(e.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");t.quantParameterTensorNames=[];for(var n=0;n<e.quantParameterTensorNames.length;++n){if("object"!=typeof e.quantParameterTensorNames[n])throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");t.quantParameterTensorNames[n]=u.onnx.StringStringEntryProto.fromObject(e.quantParameterTensorNames[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.quantParameterTensorNames=[]),t.defaults&&(n.tensorName=""),null!=e.tensorName&&e.hasOwnProperty("tensorName")&&(n.tensorName=e.tensorName),e.quantParameterTensorNames&&e.quantParameterTensorNames.length){n.quantParameterTensorNames=[];for(var r=0;r<e.quantParameterTensorNames.length;++r)n.quantParameterTensorNames[r]=u.onnx.StringStringEntryProto.toObject(e.quantParameterTensorNames[r],t)}return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorAnnotation"},e}(),s.GraphProto=function(){function e(e){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.node=l.emptyArray,e.prototype.name="",e.prototype.initializer=l.emptyArray,e.prototype.sparseInitializer=l.emptyArray,e.prototype.docString="",e.prototype.input=l.emptyArray,e.prototype.output=l.emptyArray,e.prototype.valueInfo=l.emptyArray,e.prototype.quantizationAnnotation=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.node&&e.node.length)for(var n=0;n<e.node.length;++n)u.onnx.NodeProto.encode(e.node[n],t.uint32(10).fork()).ldelim();if(null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(18).string(e.name),null!=e.initializer&&e.initializer.length)for(n=0;n<e.initializer.length;++n)u.onnx.TensorProto.encode(e.initializer[n],t.uint32(42).fork()).ldelim();if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(82).string(e.docString),null!=e.input&&e.input.length)for(n=0;n<e.input.length;++n)u.onnx.ValueInfoProto.encode(e.input[n],t.uint32(90).fork()).ldelim();if(null!=e.output&&e.output.length)for(n=0;n<e.output.length;++n)u.onnx.ValueInfoProto.encode(e.output[n],t.uint32(98).fork()).ldelim();if(null!=e.valueInfo&&e.valueInfo.length)for(n=0;n<e.valueInfo.length;++n)u.onnx.ValueInfoProto.encode(e.valueInfo[n],t.uint32(106).fork()).ldelim();if(null!=e.quantizationAnnotation&&e.quantizationAnnotation.length)for(n=0;n<e.quantizationAnnotation.length;++n)u.onnx.TensorAnnotation.encode(e.quantizationAnnotation[n],t.uint32(114).fork()).ldelim();if(null!=e.sparseInitializer&&e.sparseInitializer.length)for(n=0;n<e.sparseInitializer.length;++n)u.onnx.SparseTensorProto.encode(e.sparseInitializer[n],t.uint32(122).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.GraphProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.node&&r.node.length||(r.node=[]),r.node.push(u.onnx.NodeProto.decode(e,e.uint32()));break;case 2:r.name=e.string();break;case 5:r.initializer&&r.initializer.length||(r.initializer=[]),r.initializer.push(u.onnx.TensorProto.decode(e,e.uint32()));break;case 15:r.sparseInitializer&&r.sparseInitializer.length||(r.sparseInitializer=[]),r.sparseInitializer.push(u.onnx.SparseTensorProto.decode(e,e.uint32()));break;case 10:r.docString=e.string();break;case 11:r.input&&r.input.length||(r.input=[]),r.input.push(u.onnx.ValueInfoProto.decode(e,e.uint32()));break;case 12:r.output&&r.output.length||(r.output=[]),r.output.push(u.onnx.ValueInfoProto.decode(e,e.uint32()));break;case 13:r.valueInfo&&r.valueInfo.length||(r.valueInfo=[]),r.valueInfo.push(u.onnx.ValueInfoProto.decode(e,e.uint32()));break;case 14:r.quantizationAnnotation&&r.quantizationAnnotation.length||(r.quantizationAnnotation=[]),r.quantizationAnnotation.push(u.onnx.TensorAnnotation.decode(e,e.uint32()));break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.node&&e.hasOwnProperty("node")){if(!Array.isArray(e.node))return"node: array expected";for(var t=0;t<e.node.length;++t)if(n=u.onnx.NodeProto.verify(e.node[t]))return"node."+n}if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.initializer&&e.hasOwnProperty("initializer")){if(!Array.isArray(e.initializer))return"initializer: array expected";for(t=0;t<e.initializer.length;++t)if(n=u.onnx.TensorProto.verify(e.initializer[t]))return"initializer."+n}if(null!=e.sparseInitializer&&e.hasOwnProperty("sparseInitializer")){if(!Array.isArray(e.sparseInitializer))return"sparseInitializer: array expected";for(t=0;t<e.sparseInitializer.length;++t)if(n=u.onnx.SparseTensorProto.verify(e.sparseInitializer[t]))return"sparseInitializer."+n}if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.input&&e.hasOwnProperty("input")){if(!Array.isArray(e.input))return"input: array expected";for(t=0;t<e.input.length;++t)if(n=u.onnx.ValueInfoProto.verify(e.input[t]))return"input."+n}if(null!=e.output&&e.hasOwnProperty("output")){if(!Array.isArray(e.output))return"output: array expected";for(t=0;t<e.output.length;++t)if(n=u.onnx.ValueInfoProto.verify(e.output[t]))return"output."+n}if(null!=e.valueInfo&&e.hasOwnProperty("valueInfo")){if(!Array.isArray(e.valueInfo))return"valueInfo: array expected";for(t=0;t<e.valueInfo.length;++t)if(n=u.onnx.ValueInfoProto.verify(e.valueInfo[t]))return"valueInfo."+n}if(null!=e.quantizationAnnotation&&e.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(e.quantizationAnnotation))return"quantizationAnnotation: array expected";for(t=0;t<e.quantizationAnnotation.length;++t){var n;if(n=u.onnx.TensorAnnotation.verify(e.quantizationAnnotation[t]))return"quantizationAnnotation."+n}}return null},e.fromObject=function(e){if(e instanceof u.onnx.GraphProto)return e;var t=new u.onnx.GraphProto;if(e.node){if(!Array.isArray(e.node))throw TypeError(".onnx.GraphProto.node: array expected");t.node=[];for(var n=0;n<e.node.length;++n){if("object"!=typeof e.node[n])throw TypeError(".onnx.GraphProto.node: object expected");t.node[n]=u.onnx.NodeProto.fromObject(e.node[n])}}if(null!=e.name&&(t.name=String(e.name)),e.initializer){if(!Array.isArray(e.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");for(t.initializer=[],n=0;n<e.initializer.length;++n){if("object"!=typeof e.initializer[n])throw TypeError(".onnx.GraphProto.initializer: object expected");t.initializer[n]=u.onnx.TensorProto.fromObject(e.initializer[n])}}if(e.sparseInitializer){if(!Array.isArray(e.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");for(t.sparseInitializer=[],n=0;n<e.sparseInitializer.length;++n){if("object"!=typeof e.sparseInitializer[n])throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");t.sparseInitializer[n]=u.onnx.SparseTensorProto.fromObject(e.sparseInitializer[n])}}if(null!=e.docString&&(t.docString=String(e.docString)),e.input){if(!Array.isArray(e.input))throw TypeError(".onnx.GraphProto.input: array expected");for(t.input=[],n=0;n<e.input.length;++n){if("object"!=typeof e.input[n])throw TypeError(".onnx.GraphProto.input: object expected");t.input[n]=u.onnx.ValueInfoProto.fromObject(e.input[n])}}if(e.output){if(!Array.isArray(e.output))throw TypeError(".onnx.GraphProto.output: array expected");for(t.output=[],n=0;n<e.output.length;++n){if("object"!=typeof e.output[n])throw TypeError(".onnx.GraphProto.output: object expected");t.output[n]=u.onnx.ValueInfoProto.fromObject(e.output[n])}}if(e.valueInfo){if(!Array.isArray(e.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");for(t.valueInfo=[],n=0;n<e.valueInfo.length;++n){if("object"!=typeof e.valueInfo[n])throw TypeError(".onnx.GraphProto.valueInfo: object expected");t.valueInfo[n]=u.onnx.ValueInfoProto.fromObject(e.valueInfo[n])}}if(e.quantizationAnnotation){if(!Array.isArray(e.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");for(t.quantizationAnnotation=[],n=0;n<e.quantizationAnnotation.length;++n){if("object"!=typeof e.quantizationAnnotation[n])throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");t.quantizationAnnotation[n]=u.onnx.TensorAnnotation.fromObject(e.quantizationAnnotation[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.node=[],n.initializer=[],n.input=[],n.output=[],n.valueInfo=[],n.quantizationAnnotation=[],n.sparseInitializer=[]),t.defaults&&(n.name="",n.docString=""),e.node&&e.node.length){n.node=[];for(var r=0;r<e.node.length;++r)n.node[r]=u.onnx.NodeProto.toObject(e.node[r],t)}if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),e.initializer&&e.initializer.length)for(n.initializer=[],r=0;r<e.initializer.length;++r)n.initializer[r]=u.onnx.TensorProto.toObject(e.initializer[r],t);if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),e.input&&e.input.length)for(n.input=[],r=0;r<e.input.length;++r)n.input[r]=u.onnx.ValueInfoProto.toObject(e.input[r],t);if(e.output&&e.output.length)for(n.output=[],r=0;r<e.output.length;++r)n.output[r]=u.onnx.ValueInfoProto.toObject(e.output[r],t);if(e.valueInfo&&e.valueInfo.length)for(n.valueInfo=[],r=0;r<e.valueInfo.length;++r)n.valueInfo[r]=u.onnx.ValueInfoProto.toObject(e.valueInfo[r],t);if(e.quantizationAnnotation&&e.quantizationAnnotation.length)for(n.quantizationAnnotation=[],r=0;r<e.quantizationAnnotation.length;++r)n.quantizationAnnotation[r]=u.onnx.TensorAnnotation.toObject(e.quantizationAnnotation[r],t);if(e.sparseInitializer&&e.sparseInitializer.length)for(n.sparseInitializer=[],r=0;r<e.sparseInitializer.length;++r)n.sparseInitializer[r]=u.onnx.SparseTensorProto.toObject(e.sparseInitializer[r],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.GraphProto"},e}(),s.TensorProto=function(){function e(e){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.dims=l.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=l.emptyArray,e.prototype.int32Data=l.emptyArray,e.prototype.stringData=l.emptyArray,e.prototype.int64Data=l.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=l.newBuffer([]),e.prototype.externalData=l.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=l.emptyArray,e.prototype.uint64Data=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.dims&&e.dims.length){t.uint32(10).fork();for(var n=0;n<e.dims.length;++n)t.int64(e.dims[n]);t.ldelim()}if(null!=e.dataType&&Object.hasOwnProperty.call(e,"dataType")&&t.uint32(16).int32(e.dataType),null!=e.segment&&Object.hasOwnProperty.call(e,"segment")&&u.onnx.TensorProto.Segment.encode(e.segment,t.uint32(26).fork()).ldelim(),null!=e.floatData&&e.floatData.length){for(t.uint32(34).fork(),n=0;n<e.floatData.length;++n)t.float(e.floatData[n]);t.ldelim()}if(null!=e.int32Data&&e.int32Data.length){for(t.uint32(42).fork(),n=0;n<e.int32Data.length;++n)t.int32(e.int32Data[n]);t.ldelim()}if(null!=e.stringData&&e.stringData.length)for(n=0;n<e.stringData.length;++n)t.uint32(50).bytes(e.stringData[n]);if(null!=e.int64Data&&e.int64Data.length){for(t.uint32(58).fork(),n=0;n<e.int64Data.length;++n)t.int64(e.int64Data[n]);t.ldelim()}if(null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(66).string(e.name),null!=e.rawData&&Object.hasOwnProperty.call(e,"rawData")&&t.uint32(74).bytes(e.rawData),null!=e.doubleData&&e.doubleData.length){for(t.uint32(82).fork(),n=0;n<e.doubleData.length;++n)t.double(e.doubleData[n]);t.ldelim()}if(null!=e.uint64Data&&e.uint64Data.length){for(t.uint32(90).fork(),n=0;n<e.uint64Data.length;++n)t.uint64(e.uint64Data[n]);t.ldelim()}if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(98).string(e.docString),null!=e.externalData&&e.externalData.length)for(n=0;n<e.externalData.length;++n)u.onnx.StringStringEntryProto.encode(e.externalData[n],t.uint32(106).fork()).ldelim();return null!=e.dataLocation&&Object.hasOwnProperty.call(e,"dataLocation")&&t.uint32(112).int32(e.dataLocation),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TensorProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:if(r.dims&&r.dims.length||(r.dims=[]),2==(7&s))for(var a=e.uint32()+e.pos;e.pos<a;)r.dims.push(e.int64());else r.dims.push(e.int64());break;case 2:r.dataType=e.int32();break;case 3:r.segment=u.onnx.TensorProto.Segment.decode(e,e.uint32());break;case 4:if(r.floatData&&r.floatData.length||(r.floatData=[]),2==(7&s))for(a=e.uint32()+e.pos;e.pos<a;)r.floatData.push(e.float());else r.floatData.push(e.float());break;case 5:if(r.int32Data&&r.int32Data.length||(r.int32Data=[]),2==(7&s))for(a=e.uint32()+e.pos;e.pos<a;)r.int32Data.push(e.int32());else r.int32Data.push(e.int32());break;case 6:r.stringData&&r.stringData.length||(r.stringData=[]),r.stringData.push(e.bytes());break;case 7:if(r.int64Data&&r.int64Data.length||(r.int64Data=[]),2==(7&s))for(a=e.uint32()+e.pos;e.pos<a;)r.int64Data.push(e.int64());else r.int64Data.push(e.int64());break;case 8:r.name=e.string();break;case 12:r.docString=e.string();break;case 9:r.rawData=e.bytes();break;case 13:r.externalData&&r.externalData.length||(r.externalData=[]),r.externalData.push(u.onnx.StringStringEntryProto.decode(e,e.uint32()));break;case 14:r.dataLocation=e.int32();break;case 10:if(r.doubleData&&r.doubleData.length||(r.doubleData=[]),2==(7&s))for(a=e.uint32()+e.pos;e.pos<a;)r.doubleData.push(e.double());else r.doubleData.push(e.double());break;case 11:if(r.uint64Data&&r.uint64Data.length||(r.uint64Data=[]),2==(7&s))for(a=e.uint32()+e.pos;e.pos<a;)r.uint64Data.push(e.uint64());else r.uint64Data.push(e.uint64());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.dims&&e.hasOwnProperty("dims")){if(!Array.isArray(e.dims))return"dims: array expected";for(var t=0;t<e.dims.length;++t)if(!(l.isInteger(e.dims[t])||e.dims[t]&&l.isInteger(e.dims[t].low)&&l.isInteger(e.dims[t].high)))return"dims: integer|Long[] expected"}if(null!=e.dataType&&e.hasOwnProperty("dataType")&&!l.isInteger(e.dataType))return"dataType: integer expected";if(null!=e.segment&&e.hasOwnProperty("segment")&&(n=u.onnx.TensorProto.Segment.verify(e.segment)))return"segment."+n;if(null!=e.floatData&&e.hasOwnProperty("floatData")){if(!Array.isArray(e.floatData))return"floatData: array expected";for(t=0;t<e.floatData.length;++t)if("number"!=typeof e.floatData[t])return"floatData: number[] expected"}if(null!=e.int32Data&&e.hasOwnProperty("int32Data")){if(!Array.isArray(e.int32Data))return"int32Data: array expected";for(t=0;t<e.int32Data.length;++t)if(!l.isInteger(e.int32Data[t]))return"int32Data: integer[] expected"}if(null!=e.stringData&&e.hasOwnProperty("stringData")){if(!Array.isArray(e.stringData))return"stringData: array expected";for(t=0;t<e.stringData.length;++t)if(!(e.stringData[t]&&"number"==typeof e.stringData[t].length||l.isString(e.stringData[t])))return"stringData: buffer[] expected"}if(null!=e.int64Data&&e.hasOwnProperty("int64Data")){if(!Array.isArray(e.int64Data))return"int64Data: array expected";for(t=0;t<e.int64Data.length;++t)if(!(l.isInteger(e.int64Data[t])||e.int64Data[t]&&l.isInteger(e.int64Data[t].low)&&l.isInteger(e.int64Data[t].high)))return"int64Data: integer|Long[] expected"}if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.rawData&&e.hasOwnProperty("rawData")&&!(e.rawData&&"number"==typeof e.rawData.length||l.isString(e.rawData)))return"rawData: buffer expected";if(null!=e.externalData&&e.hasOwnProperty("externalData")){if(!Array.isArray(e.externalData))return"externalData: array expected";for(t=0;t<e.externalData.length;++t){var n;if(n=u.onnx.StringStringEntryProto.verify(e.externalData[t]))return"externalData."+n}}if(null!=e.dataLocation&&e.hasOwnProperty("dataLocation"))switch(e.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:}if(null!=e.doubleData&&e.hasOwnProperty("doubleData")){if(!Array.isArray(e.doubleData))return"doubleData: array expected";for(t=0;t<e.doubleData.length;++t)if("number"!=typeof e.doubleData[t])return"doubleData: number[] expected"}if(null!=e.uint64Data&&e.hasOwnProperty("uint64Data")){if(!Array.isArray(e.uint64Data))return"uint64Data: array expected";for(t=0;t<e.uint64Data.length;++t)if(!(l.isInteger(e.uint64Data[t])||e.uint64Data[t]&&l.isInteger(e.uint64Data[t].low)&&l.isInteger(e.uint64Data[t].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(e){if(e instanceof u.onnx.TensorProto)return e;var t=new u.onnx.TensorProto;if(e.dims){if(!Array.isArray(e.dims))throw TypeError(".onnx.TensorProto.dims: array expected");t.dims=[];for(var n=0;n<e.dims.length;++n)l.Long?(t.dims[n]=l.Long.fromValue(e.dims[n])).unsigned=!1:"string"==typeof e.dims[n]?t.dims[n]=parseInt(e.dims[n],10):"number"==typeof e.dims[n]?t.dims[n]=e.dims[n]:"object"==typeof e.dims[n]&&(t.dims[n]=new l.LongBits(e.dims[n].low>>>0,e.dims[n].high>>>0).toNumber())}if(null!=e.dataType&&(t.dataType=0|e.dataType),null!=e.segment){if("object"!=typeof e.segment)throw TypeError(".onnx.TensorProto.segment: object expected");t.segment=u.onnx.TensorProto.Segment.fromObject(e.segment)}if(e.floatData){if(!Array.isArray(e.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");for(t.floatData=[],n=0;n<e.floatData.length;++n)t.floatData[n]=Number(e.floatData[n])}if(e.int32Data){if(!Array.isArray(e.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");for(t.int32Data=[],n=0;n<e.int32Data.length;++n)t.int32Data[n]=0|e.int32Data[n]}if(e.stringData){if(!Array.isArray(e.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");for(t.stringData=[],n=0;n<e.stringData.length;++n)"string"==typeof e.stringData[n]?l.base64.decode(e.stringData[n],t.stringData[n]=l.newBuffer(l.base64.length(e.stringData[n])),0):e.stringData[n].length>=0&&(t.stringData[n]=e.stringData[n])}if(e.int64Data){if(!Array.isArray(e.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");for(t.int64Data=[],n=0;n<e.int64Data.length;++n)l.Long?(t.int64Data[n]=l.Long.fromValue(e.int64Data[n])).unsigned=!1:"string"==typeof e.int64Data[n]?t.int64Data[n]=parseInt(e.int64Data[n],10):"number"==typeof e.int64Data[n]?t.int64Data[n]=e.int64Data[n]:"object"==typeof e.int64Data[n]&&(t.int64Data[n]=new l.LongBits(e.int64Data[n].low>>>0,e.int64Data[n].high>>>0).toNumber())}if(null!=e.name&&(t.name=String(e.name)),null!=e.docString&&(t.docString=String(e.docString)),null!=e.rawData&&("string"==typeof e.rawData?l.base64.decode(e.rawData,t.rawData=l.newBuffer(l.base64.length(e.rawData)),0):e.rawData.length>=0&&(t.rawData=e.rawData)),e.externalData){if(!Array.isArray(e.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");for(t.externalData=[],n=0;n<e.externalData.length;++n){if("object"!=typeof e.externalData[n])throw TypeError(".onnx.TensorProto.externalData: object expected");t.externalData[n]=u.onnx.StringStringEntryProto.fromObject(e.externalData[n])}}switch(e.dataLocation){default:if("number"==typeof e.dataLocation){t.dataLocation=e.dataLocation;break}break;case"DEFAULT":case 0:t.dataLocation=0;break;case"EXTERNAL":case 1:t.dataLocation=1}if(e.doubleData){if(!Array.isArray(e.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");for(t.doubleData=[],n=0;n<e.doubleData.length;++n)t.doubleData[n]=Number(e.doubleData[n])}if(e.uint64Data){if(!Array.isArray(e.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");for(t.uint64Data=[],n=0;n<e.uint64Data.length;++n)l.Long?(t.uint64Data[n]=l.Long.fromValue(e.uint64Data[n])).unsigned=!0:"string"==typeof e.uint64Data[n]?t.uint64Data[n]=parseInt(e.uint64Data[n],10):"number"==typeof e.uint64Data[n]?t.uint64Data[n]=e.uint64Data[n]:"object"==typeof e.uint64Data[n]&&(t.uint64Data[n]=new l.LongBits(e.uint64Data[n].low>>>0,e.uint64Data[n].high>>>0).toNumber(!0))}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.dims=[],n.floatData=[],n.int32Data=[],n.stringData=[],n.int64Data=[],n.doubleData=[],n.uint64Data=[],n.externalData=[]),t.defaults&&(n.dataType=0,n.segment=null,n.name="",t.bytes===String?n.rawData="":(n.rawData=[],t.bytes!==Array&&(n.rawData=l.newBuffer(n.rawData))),n.docString="",n.dataLocation=t.enums===String?"DEFAULT":0),e.dims&&e.dims.length){n.dims=[];for(var r=0;r<e.dims.length;++r)"number"==typeof e.dims[r]?n.dims[r]=t.longs===String?String(e.dims[r]):e.dims[r]:n.dims[r]=t.longs===String?l.Long.prototype.toString.call(e.dims[r]):t.longs===Number?new l.LongBits(e.dims[r].low>>>0,e.dims[r].high>>>0).toNumber():e.dims[r]}if(null!=e.dataType&&e.hasOwnProperty("dataType")&&(n.dataType=e.dataType),null!=e.segment&&e.hasOwnProperty("segment")&&(n.segment=u.onnx.TensorProto.Segment.toObject(e.segment,t)),e.floatData&&e.floatData.length)for(n.floatData=[],r=0;r<e.floatData.length;++r)n.floatData[r]=t.json&&!isFinite(e.floatData[r])?String(e.floatData[r]):e.floatData[r];if(e.int32Data&&e.int32Data.length)for(n.int32Data=[],r=0;r<e.int32Data.length;++r)n.int32Data[r]=e.int32Data[r];if(e.stringData&&e.stringData.length)for(n.stringData=[],r=0;r<e.stringData.length;++r)n.stringData[r]=t.bytes===String?l.base64.encode(e.stringData[r],0,e.stringData[r].length):t.bytes===Array?Array.prototype.slice.call(e.stringData[r]):e.stringData[r];if(e.int64Data&&e.int64Data.length)for(n.int64Data=[],r=0;r<e.int64Data.length;++r)"number"==typeof e.int64Data[r]?n.int64Data[r]=t.longs===String?String(e.int64Data[r]):e.int64Data[r]:n.int64Data[r]=t.longs===String?l.Long.prototype.toString.call(e.int64Data[r]):t.longs===Number?new l.LongBits(e.int64Data[r].low>>>0,e.int64Data[r].high>>>0).toNumber():e.int64Data[r];if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.rawData&&e.hasOwnProperty("rawData")&&(n.rawData=t.bytes===String?l.base64.encode(e.rawData,0,e.rawData.length):t.bytes===Array?Array.prototype.slice.call(e.rawData):e.rawData),e.doubleData&&e.doubleData.length)for(n.doubleData=[],r=0;r<e.doubleData.length;++r)n.doubleData[r]=t.json&&!isFinite(e.doubleData[r])?String(e.doubleData[r]):e.doubleData[r];if(e.uint64Data&&e.uint64Data.length)for(n.uint64Data=[],r=0;r<e.uint64Data.length;++r)"number"==typeof e.uint64Data[r]?n.uint64Data[r]=t.longs===String?String(e.uint64Data[r]):e.uint64Data[r]:n.uint64Data[r]=t.longs===String?l.Long.prototype.toString.call(e.uint64Data[r]):t.longs===Number?new l.LongBits(e.uint64Data[r].low>>>0,e.uint64Data[r].high>>>0).toNumber(!0):e.uint64Data[r];if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),e.externalData&&e.externalData.length)for(n.externalData=[],r=0;r<e.externalData.length;++r)n.externalData[r]=u.onnx.StringStringEntryProto.toObject(e.externalData[r],t);return null!=e.dataLocation&&e.hasOwnProperty("dataLocation")&&(n.dataLocation=t.enums===String?void 0===u.onnx.TensorProto.DataLocation[e.dataLocation]?e.dataLocation:u.onnx.TensorProto.DataLocation[e.dataLocation]:e.dataLocation),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorProto"},e.DataType=function(){var e={},t=Object.create(e);return t[e[0]="UNDEFINED"]=0,t[e[1]="FLOAT"]=1,t[e[2]="UINT8"]=2,t[e[3]="INT8"]=3,t[e[4]="UINT16"]=4,t[e[5]="INT16"]=5,t[e[6]="INT32"]=6,t[e[7]="INT64"]=7,t[e[8]="STRING"]=8,t[e[9]="BOOL"]=9,t[e[10]="FLOAT16"]=10,t[e[11]="DOUBLE"]=11,t[e[12]="UINT32"]=12,t[e[13]="UINT64"]=13,t[e[14]="COMPLEX64"]=14,t[e[15]="COMPLEX128"]=15,t[e[16]="BFLOAT16"]=16,t[e[17]="FLOAT8E4M3FN"]=17,t[e[18]="FLOAT8E4M3FNUZ"]=18,t[e[19]="FLOAT8E5M2"]=19,t[e[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.begin=l.Long?l.Long.fromBits(0,0,!1):0,e.prototype.end=l.Long?l.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.begin&&Object.hasOwnProperty.call(e,"begin")&&t.uint32(8).int64(e.begin),null!=e.end&&Object.hasOwnProperty.call(e,"end")&&t.uint32(16).int64(e.end),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TensorProto.Segment;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.begin=e.int64();break;case 2:r.end=e.int64();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null==e.begin||!e.hasOwnProperty("begin")||l.isInteger(e.begin)||e.begin&&l.isInteger(e.begin.low)&&l.isInteger(e.begin.high)?null==e.end||!e.hasOwnProperty("end")||l.isInteger(e.end)||e.end&&l.isInteger(e.end.low)&&l.isInteger(e.end.high)?null:"end: integer|Long expected":"begin: integer|Long expected"},e.fromObject=function(e){if(e instanceof u.onnx.TensorProto.Segment)return e;var t=new u.onnx.TensorProto.Segment;return null!=e.begin&&(l.Long?(t.begin=l.Long.fromValue(e.begin)).unsigned=!1:"string"==typeof e.begin?t.begin=parseInt(e.begin,10):"number"==typeof e.begin?t.begin=e.begin:"object"==typeof e.begin&&(t.begin=new l.LongBits(e.begin.low>>>0,e.begin.high>>>0).toNumber())),null!=e.end&&(l.Long?(t.end=l.Long.fromValue(e.end)).unsigned=!1:"string"==typeof e.end?t.end=parseInt(e.end,10):"number"==typeof e.end?t.end=e.end:"object"==typeof e.end&&(t.end=new l.LongBits(e.end.low>>>0,e.end.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults){if(l.Long){var r=new l.Long(0,0,!1);n.begin=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.begin=t.longs===String?"0":0;l.Long?(r=new l.Long(0,0,!1),n.end=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.end=t.longs===String?"0":0}return null!=e.begin&&e.hasOwnProperty("begin")&&("number"==typeof e.begin?n.begin=t.longs===String?String(e.begin):e.begin:n.begin=t.longs===String?l.Long.prototype.toString.call(e.begin):t.longs===Number?new l.LongBits(e.begin.low>>>0,e.begin.high>>>0).toNumber():e.begin),null!=e.end&&e.hasOwnProperty("end")&&("number"==typeof e.end?n.end=t.longs===String?String(e.end):e.end:n.end=t.longs===String?l.Long.prototype.toString.call(e.end):t.longs===Number?new l.LongBits(e.end.low>>>0,e.end.high>>>0).toNumber():e.end),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorProto.Segment"},e}(),e.DataLocation=function(){var e={},t=Object.create(e);return t[e[0]="DEFAULT"]=0,t[e[1]="EXTERNAL"]=1,t}(),e}(),s.SparseTensorProto=function(){function e(e){if(this.dims=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.values&&Object.hasOwnProperty.call(e,"values")&&u.onnx.TensorProto.encode(e.values,t.uint32(10).fork()).ldelim(),null!=e.indices&&Object.hasOwnProperty.call(e,"indices")&&u.onnx.TensorProto.encode(e.indices,t.uint32(18).fork()).ldelim(),null!=e.dims&&e.dims.length){t.uint32(26).fork();for(var n=0;n<e.dims.length;++n)t.int64(e.dims[n]);t.ldelim()}return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.SparseTensorProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.values=u.onnx.TensorProto.decode(e,e.uint32());break;case 2:r.indices=u.onnx.TensorProto.decode(e,e.uint32());break;case 3:if(r.dims&&r.dims.length||(r.dims=[]),2==(7&s))for(var a=e.uint32()+e.pos;e.pos<a;)r.dims.push(e.int64());else r.dims.push(e.int64());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t;if(null!=e.values&&e.hasOwnProperty("values")&&(t=u.onnx.TensorProto.verify(e.values)))return"values."+t;if(null!=e.indices&&e.hasOwnProperty("indices")&&(t=u.onnx.TensorProto.verify(e.indices)))return"indices."+t;if(null!=e.dims&&e.hasOwnProperty("dims")){if(!Array.isArray(e.dims))return"dims: array expected";for(var n=0;n<e.dims.length;++n)if(!(l.isInteger(e.dims[n])||e.dims[n]&&l.isInteger(e.dims[n].low)&&l.isInteger(e.dims[n].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(e){if(e instanceof u.onnx.SparseTensorProto)return e;var t=new u.onnx.SparseTensorProto;if(null!=e.values){if("object"!=typeof e.values)throw TypeError(".onnx.SparseTensorProto.values: object expected");t.values=u.onnx.TensorProto.fromObject(e.values)}if(null!=e.indices){if("object"!=typeof e.indices)throw TypeError(".onnx.SparseTensorProto.indices: object expected");t.indices=u.onnx.TensorProto.fromObject(e.indices)}if(e.dims){if(!Array.isArray(e.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");t.dims=[];for(var n=0;n<e.dims.length;++n)l.Long?(t.dims[n]=l.Long.fromValue(e.dims[n])).unsigned=!1:"string"==typeof e.dims[n]?t.dims[n]=parseInt(e.dims[n],10):"number"==typeof e.dims[n]?t.dims[n]=e.dims[n]:"object"==typeof e.dims[n]&&(t.dims[n]=new l.LongBits(e.dims[n].low>>>0,e.dims[n].high>>>0).toNumber())}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.dims=[]),t.defaults&&(n.values=null,n.indices=null),null!=e.values&&e.hasOwnProperty("values")&&(n.values=u.onnx.TensorProto.toObject(e.values,t)),null!=e.indices&&e.hasOwnProperty("indices")&&(n.indices=u.onnx.TensorProto.toObject(e.indices,t)),e.dims&&e.dims.length){n.dims=[];for(var r=0;r<e.dims.length;++r)"number"==typeof e.dims[r]?n.dims[r]=t.longs===String?String(e.dims[r]):e.dims[r]:n.dims[r]=t.longs===String?l.Long.prototype.toString.call(e.dims[r]):t.longs===Number?new l.LongBits(e.dims[r].low>>>0,e.dims[r].high>>>0).toNumber():e.dims[r]}return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.SparseTensorProto"},e}(),s.TensorShapeProto=function(){function e(e){if(this.dim=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.dim=l.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.dim&&e.dim.length)for(var n=0;n<e.dim.length;++n)u.onnx.TensorShapeProto.Dimension.encode(e.dim[n],t.uint32(10).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TensorShapeProto;e.pos<n;){var s=e.uint32();s>>>3==1?(r.dim&&r.dim.length||(r.dim=[]),r.dim.push(u.onnx.TensorShapeProto.Dimension.decode(e,e.uint32()))):e.skipType(7&s)}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.dim&&e.hasOwnProperty("dim")){if(!Array.isArray(e.dim))return"dim: array expected";for(var t=0;t<e.dim.length;++t){var n=u.onnx.TensorShapeProto.Dimension.verify(e.dim[t]);if(n)return"dim."+n}}return null},e.fromObject=function(e){if(e instanceof u.onnx.TensorShapeProto)return e;var t=new u.onnx.TensorShapeProto;if(e.dim){if(!Array.isArray(e.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");t.dim=[];for(var n=0;n<e.dim.length;++n){if("object"!=typeof e.dim[n])throw TypeError(".onnx.TensorShapeProto.dim: object expected");t.dim[n]=u.onnx.TensorShapeProto.Dimension.fromObject(e.dim[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.dim=[]),e.dim&&e.dim.length){n.dim=[];for(var r=0;r<e.dim.length;++r)n.dim[r]=u.onnx.TensorShapeProto.Dimension.toObject(e.dim[r],t)}return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorShapeProto"},e.Dimension=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.dimValue=null,e.prototype.dimParam=null,e.prototype.denotation="",Object.defineProperty(e.prototype,"value",{get:l.oneOfGetter(t=["dimValue","dimParam"]),set:l.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.dimValue&&Object.hasOwnProperty.call(e,"dimValue")&&t.uint32(8).int64(e.dimValue),null!=e.dimParam&&Object.hasOwnProperty.call(e,"dimParam")&&t.uint32(18).string(e.dimParam),null!=e.denotation&&Object.hasOwnProperty.call(e,"denotation")&&t.uint32(26).string(e.denotation),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TensorShapeProto.Dimension;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.dimValue=e.int64();break;case 2:r.dimParam=e.string();break;case 3:r.denotation=e.string();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.dimValue&&e.hasOwnProperty("dimValue")&&(t.value=1,!(l.isInteger(e.dimValue)||e.dimValue&&l.isInteger(e.dimValue.low)&&l.isInteger(e.dimValue.high))))return"dimValue: integer|Long expected";if(null!=e.dimParam&&e.hasOwnProperty("dimParam")){if(1===t.value)return"value: multiple values";if(t.value=1,!l.isString(e.dimParam))return"dimParam: string expected"}return null!=e.denotation&&e.hasOwnProperty("denotation")&&!l.isString(e.denotation)?"denotation: string expected":null},e.fromObject=function(e){if(e instanceof u.onnx.TensorShapeProto.Dimension)return e;var t=new u.onnx.TensorShapeProto.Dimension;return null!=e.dimValue&&(l.Long?(t.dimValue=l.Long.fromValue(e.dimValue)).unsigned=!1:"string"==typeof e.dimValue?t.dimValue=parseInt(e.dimValue,10):"number"==typeof e.dimValue?t.dimValue=e.dimValue:"object"==typeof e.dimValue&&(t.dimValue=new l.LongBits(e.dimValue.low>>>0,e.dimValue.high>>>0).toNumber())),null!=e.dimParam&&(t.dimParam=String(e.dimParam)),null!=e.denotation&&(t.denotation=String(e.denotation)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.denotation=""),null!=e.dimValue&&e.hasOwnProperty("dimValue")&&("number"==typeof e.dimValue?n.dimValue=t.longs===String?String(e.dimValue):e.dimValue:n.dimValue=t.longs===String?l.Long.prototype.toString.call(e.dimValue):t.longs===Number?new l.LongBits(e.dimValue.low>>>0,e.dimValue.high>>>0).toNumber():e.dimValue,t.oneofs&&(n.value="dimValue")),null!=e.dimParam&&e.hasOwnProperty("dimParam")&&(n.dimParam=e.dimParam,t.oneofs&&(n.value="dimParam")),null!=e.denotation&&e.hasOwnProperty("denotation")&&(n.denotation=e.denotation),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorShapeProto.Dimension"},e}(),e}(),s.TypeProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="",Object.defineProperty(e.prototype,"value",{get:l.oneOfGetter(t=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:l.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.tensorType&&Object.hasOwnProperty.call(e,"tensorType")&&u.onnx.TypeProto.Tensor.encode(e.tensorType,t.uint32(10).fork()).ldelim(),null!=e.sequenceType&&Object.hasOwnProperty.call(e,"sequenceType")&&u.onnx.TypeProto.Sequence.encode(e.sequenceType,t.uint32(34).fork()).ldelim(),null!=e.mapType&&Object.hasOwnProperty.call(e,"mapType")&&u.onnx.TypeProto.Map.encode(e.mapType,t.uint32(42).fork()).ldelim(),null!=e.denotation&&Object.hasOwnProperty.call(e,"denotation")&&t.uint32(50).string(e.denotation),null!=e.sparseTensorType&&Object.hasOwnProperty.call(e,"sparseTensorType")&&u.onnx.TypeProto.SparseTensor.encode(e.sparseTensorType,t.uint32(66).fork()).ldelim(),null!=e.optionalType&&Object.hasOwnProperty.call(e,"optionalType")&&u.onnx.TypeProto.Optional.encode(e.optionalType,t.uint32(74).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TypeProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.tensorType=u.onnx.TypeProto.Tensor.decode(e,e.uint32());break;case 4:r.sequenceType=u.onnx.TypeProto.Sequence.decode(e,e.uint32());break;case 5:r.mapType=u.onnx.TypeProto.Map.decode(e,e.uint32());break;case 9:r.optionalType=u.onnx.TypeProto.Optional.decode(e,e.uint32());break;case 8:r.sparseTensorType=u.onnx.TypeProto.SparseTensor.decode(e,e.uint32());break;case 6:r.denotation=e.string();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.tensorType&&e.hasOwnProperty("tensorType")&&(t.value=1,n=u.onnx.TypeProto.Tensor.verify(e.tensorType)))return"tensorType."+n;if(null!=e.sequenceType&&e.hasOwnProperty("sequenceType")){if(1===t.value)return"value: multiple values";if(t.value=1,n=u.onnx.TypeProto.Sequence.verify(e.sequenceType))return"sequenceType."+n}if(null!=e.mapType&&e.hasOwnProperty("mapType")){if(1===t.value)return"value: multiple values";if(t.value=1,n=u.onnx.TypeProto.Map.verify(e.mapType))return"mapType."+n}if(null!=e.optionalType&&e.hasOwnProperty("optionalType")){if(1===t.value)return"value: multiple values";if(t.value=1,n=u.onnx.TypeProto.Optional.verify(e.optionalType))return"optionalType."+n}if(null!=e.sparseTensorType&&e.hasOwnProperty("sparseTensorType")){if(1===t.value)return"value: multiple values";var n;if(t.value=1,n=u.onnx.TypeProto.SparseTensor.verify(e.sparseTensorType))return"sparseTensorType."+n}return null!=e.denotation&&e.hasOwnProperty("denotation")&&!l.isString(e.denotation)?"denotation: string expected":null},e.fromObject=function(e){if(e instanceof u.onnx.TypeProto)return e;var t=new u.onnx.TypeProto;if(null!=e.tensorType){if("object"!=typeof e.tensorType)throw TypeError(".onnx.TypeProto.tensorType: object expected");t.tensorType=u.onnx.TypeProto.Tensor.fromObject(e.tensorType)}if(null!=e.sequenceType){if("object"!=typeof e.sequenceType)throw TypeError(".onnx.TypeProto.sequenceType: object expected");t.sequenceType=u.onnx.TypeProto.Sequence.fromObject(e.sequenceType)}if(null!=e.mapType){if("object"!=typeof e.mapType)throw TypeError(".onnx.TypeProto.mapType: object expected");t.mapType=u.onnx.TypeProto.Map.fromObject(e.mapType)}if(null!=e.optionalType){if("object"!=typeof e.optionalType)throw TypeError(".onnx.TypeProto.optionalType: object expected");t.optionalType=u.onnx.TypeProto.Optional.fromObject(e.optionalType)}if(null!=e.sparseTensorType){if("object"!=typeof e.sparseTensorType)throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");t.sparseTensorType=u.onnx.TypeProto.SparseTensor.fromObject(e.sparseTensorType)}return null!=e.denotation&&(t.denotation=String(e.denotation)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.denotation=""),null!=e.tensorType&&e.hasOwnProperty("tensorType")&&(n.tensorType=u.onnx.TypeProto.Tensor.toObject(e.tensorType,t),t.oneofs&&(n.value="tensorType")),null!=e.sequenceType&&e.hasOwnProperty("sequenceType")&&(n.sequenceType=u.onnx.TypeProto.Sequence.toObject(e.sequenceType,t),t.oneofs&&(n.value="sequenceType")),null!=e.mapType&&e.hasOwnProperty("mapType")&&(n.mapType=u.onnx.TypeProto.Map.toObject(e.mapType,t),t.oneofs&&(n.value="mapType")),null!=e.denotation&&e.hasOwnProperty("denotation")&&(n.denotation=e.denotation),null!=e.sparseTensorType&&e.hasOwnProperty("sparseTensorType")&&(n.sparseTensorType=u.onnx.TypeProto.SparseTensor.toObject(e.sparseTensorType,t),t.oneofs&&(n.value="sparseTensorType")),null!=e.optionalType&&e.hasOwnProperty("optionalType")&&(n.optionalType=u.onnx.TypeProto.Optional.toObject(e.optionalType,t),t.oneofs&&(n.value="optionalType")),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto"},e.Tensor=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=0,e.prototype.shape=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&t.uint32(8).int32(e.elemType),null!=e.shape&&Object.hasOwnProperty.call(e,"shape")&&u.onnx.TensorShapeProto.encode(e.shape,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TypeProto.Tensor;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.elemType=e.int32();break;case 2:r.shape=u.onnx.TensorShapeProto.decode(e,e.uint32());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")&&!l.isInteger(e.elemType))return"elemType: integer expected";if(null!=e.shape&&e.hasOwnProperty("shape")){var t=u.onnx.TensorShapeProto.verify(e.shape);if(t)return"shape."+t}return null},e.fromObject=function(e){if(e instanceof u.onnx.TypeProto.Tensor)return e;var t=new u.onnx.TypeProto.Tensor;if(null!=e.elemType&&(t.elemType=0|e.elemType),null!=e.shape){if("object"!=typeof e.shape)throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");t.shape=u.onnx.TensorShapeProto.fromObject(e.shape)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=0,n.shape=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=e.elemType),null!=e.shape&&e.hasOwnProperty("shape")&&(n.shape=u.onnx.TensorShapeProto.toObject(e.shape,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Tensor"},e}(),e.Sequence=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&u.onnx.TypeProto.encode(e.elemType,t.uint32(10).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TypeProto.Sequence;e.pos<n;){var s=e.uint32();s>>>3==1?r.elemType=u.onnx.TypeProto.decode(e,e.uint32()):e.skipType(7&s)}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")){var t=u.onnx.TypeProto.verify(e.elemType);if(t)return"elemType."+t}return null},e.fromObject=function(e){if(e instanceof u.onnx.TypeProto.Sequence)return e;var t=new u.onnx.TypeProto.Sequence;if(null!=e.elemType){if("object"!=typeof e.elemType)throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");t.elemType=u.onnx.TypeProto.fromObject(e.elemType)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=u.onnx.TypeProto.toObject(e.elemType,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Sequence"},e}(),e.Map=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.keyType=0,e.prototype.valueType=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.keyType&&Object.hasOwnProperty.call(e,"keyType")&&t.uint32(8).int32(e.keyType),null!=e.valueType&&Object.hasOwnProperty.call(e,"valueType")&&u.onnx.TypeProto.encode(e.valueType,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TypeProto.Map;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.keyType=e.int32();break;case 2:r.valueType=u.onnx.TypeProto.decode(e,e.uint32());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.keyType&&e.hasOwnProperty("keyType")&&!l.isInteger(e.keyType))return"keyType: integer expected";if(null!=e.valueType&&e.hasOwnProperty("valueType")){var t=u.onnx.TypeProto.verify(e.valueType);if(t)return"valueType."+t}return null},e.fromObject=function(e){if(e instanceof u.onnx.TypeProto.Map)return e;var t=new u.onnx.TypeProto.Map;if(null!=e.keyType&&(t.keyType=0|e.keyType),null!=e.valueType){if("object"!=typeof e.valueType)throw TypeError(".onnx.TypeProto.Map.valueType: object expected");t.valueType=u.onnx.TypeProto.fromObject(e.valueType)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.keyType=0,n.valueType=null),null!=e.keyType&&e.hasOwnProperty("keyType")&&(n.keyType=e.keyType),null!=e.valueType&&e.hasOwnProperty("valueType")&&(n.valueType=u.onnx.TypeProto.toObject(e.valueType,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Map"},e}(),e.Optional=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&u.onnx.TypeProto.encode(e.elemType,t.uint32(10).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TypeProto.Optional;e.pos<n;){var s=e.uint32();s>>>3==1?r.elemType=u.onnx.TypeProto.decode(e,e.uint32()):e.skipType(7&s)}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")){var t=u.onnx.TypeProto.verify(e.elemType);if(t)return"elemType."+t}return null},e.fromObject=function(e){if(e instanceof u.onnx.TypeProto.Optional)return e;var t=new u.onnx.TypeProto.Optional;if(null!=e.elemType){if("object"!=typeof e.elemType)throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");t.elemType=u.onnx.TypeProto.fromObject(e.elemType)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=u.onnx.TypeProto.toObject(e.elemType,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Optional"},e}(),e.SparseTensor=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=0,e.prototype.shape=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&t.uint32(8).int32(e.elemType),null!=e.shape&&Object.hasOwnProperty.call(e,"shape")&&u.onnx.TensorShapeProto.encode(e.shape,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.TypeProto.SparseTensor;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.elemType=e.int32();break;case 2:r.shape=u.onnx.TensorShapeProto.decode(e,e.uint32());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")&&!l.isInteger(e.elemType))return"elemType: integer expected";if(null!=e.shape&&e.hasOwnProperty("shape")){var t=u.onnx.TensorShapeProto.verify(e.shape);if(t)return"shape."+t}return null},e.fromObject=function(e){if(e instanceof u.onnx.TypeProto.SparseTensor)return e;var t=new u.onnx.TypeProto.SparseTensor;if(null!=e.elemType&&(t.elemType=0|e.elemType),null!=e.shape){if("object"!=typeof e.shape)throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");t.shape=u.onnx.TensorShapeProto.fromObject(e.shape)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=0,n.shape=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=e.elemType),null!=e.shape&&e.hasOwnProperty("shape")&&(n.shape=u.onnx.TensorShapeProto.toObject(e.shape,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.SparseTensor"},e}(),e}(),s.OperatorSetIdProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.domain="",e.prototype.version=l.Long?l.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=o.create()),null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(10).string(e.domain),null!=e.version&&Object.hasOwnProperty.call(e,"version")&&t.uint32(16).int64(e.version),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.OperatorSetIdProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.domain=e.string();break;case 2:r.version=e.int64();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.domain&&e.hasOwnProperty("domain")&&!l.isString(e.domain)?"domain: string expected":null==e.version||!e.hasOwnProperty("version")||l.isInteger(e.version)||e.version&&l.isInteger(e.version.low)&&l.isInteger(e.version.high)?null:"version: integer|Long expected"},e.fromObject=function(e){if(e instanceof u.onnx.OperatorSetIdProto)return e;var t=new u.onnx.OperatorSetIdProto;return null!=e.domain&&(t.domain=String(e.domain)),null!=e.version&&(l.Long?(t.version=l.Long.fromValue(e.version)).unsigned=!1:"string"==typeof e.version?t.version=parseInt(e.version,10):"number"==typeof e.version?t.version=e.version:"object"==typeof e.version&&(t.version=new l.LongBits(e.version.low>>>0,e.version.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults)if(n.domain="",l.Long){var r=new l.Long(0,0,!1);n.version=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.version=t.longs===String?"0":0;return null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),null!=e.version&&e.hasOwnProperty("version")&&("number"==typeof e.version?n.version=t.longs===String?String(e.version):e.version:n.version=t.longs===String?l.Long.prototype.toString.call(e.version):t.longs===Number?new l.LongBits(e.version.low>>>0,e.version.high>>>0).toNumber():e.version),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.OperatorSetIdProto"},e}(),s.OperatorStatus=function(){var e={},t=Object.create(e);return t[e[0]="EXPERIMENTAL"]=0,t[e[1]="STABLE"]=1,t}(),s.FunctionProto=function(){function e(e){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.name="",e.prototype.input=l.emptyArray,e.prototype.output=l.emptyArray,e.prototype.attribute=l.emptyArray,e.prototype.attributeProto=l.emptyArray,e.prototype.node=l.emptyArray,e.prototype.docString="",e.prototype.opsetImport=l.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=o.create()),null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(10).string(e.name),null!=e.input&&e.input.length)for(var n=0;n<e.input.length;++n)t.uint32(34).string(e.input[n]);if(null!=e.output&&e.output.length)for(n=0;n<e.output.length;++n)t.uint32(42).string(e.output[n]);if(null!=e.attribute&&e.attribute.length)for(n=0;n<e.attribute.length;++n)t.uint32(50).string(e.attribute[n]);if(null!=e.node&&e.node.length)for(n=0;n<e.node.length;++n)u.onnx.NodeProto.encode(e.node[n],t.uint32(58).fork()).ldelim();if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(66).string(e.docString),null!=e.opsetImport&&e.opsetImport.length)for(n=0;n<e.opsetImport.length;++n)u.onnx.OperatorSetIdProto.encode(e.opsetImport[n],t.uint32(74).fork()).ldelim();if(null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(82).string(e.domain),null!=e.attributeProto&&e.attributeProto.length)for(n=0;n<e.attributeProto.length;++n)u.onnx.AttributeProto.encode(e.attributeProto[n],t.uint32(90).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof i||(e=i.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new u.onnx.FunctionProto;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.name=e.string();break;case 4:r.input&&r.input.length||(r.input=[]),r.input.push(e.string());break;case 5:r.output&&r.output.length||(r.output=[]),r.output.push(e.string());break;case 6:r.attribute&&r.attribute.length||(r.attribute=[]),r.attribute.push(e.string());break;case 11:r.attributeProto&&r.attributeProto.length||(r.attributeProto=[]),r.attributeProto.push(u.onnx.AttributeProto.decode(e,e.uint32()));break;case 7:r.node&&r.node.length||(r.node=[]),r.node.push(u.onnx.NodeProto.decode(e,e.uint32()));break;case 8:r.docString=e.string();break;case 9:r.opsetImport&&r.opsetImport.length||(r.opsetImport=[]),r.opsetImport.push(u.onnx.OperatorSetIdProto.decode(e,e.uint32()));break;case 10:r.domain=e.string();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof i||(e=new i(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.name&&e.hasOwnProperty("name")&&!l.isString(e.name))return"name: string expected";if(null!=e.input&&e.hasOwnProperty("input")){if(!Array.isArray(e.input))return"input: array expected";for(var t=0;t<e.input.length;++t)if(!l.isString(e.input[t]))return"input: string[] expected"}if(null!=e.output&&e.hasOwnProperty("output")){if(!Array.isArray(e.output))return"output: array expected";for(t=0;t<e.output.length;++t)if(!l.isString(e.output[t]))return"output: string[] expected"}if(null!=e.attribute&&e.hasOwnProperty("attribute")){if(!Array.isArray(e.attribute))return"attribute: array expected";for(t=0;t<e.attribute.length;++t)if(!l.isString(e.attribute[t]))return"attribute: string[] expected"}if(null!=e.attributeProto&&e.hasOwnProperty("attributeProto")){if(!Array.isArray(e.attributeProto))return"attributeProto: array expected";for(t=0;t<e.attributeProto.length;++t)if(n=u.onnx.AttributeProto.verify(e.attributeProto[t]))return"attributeProto."+n}if(null!=e.node&&e.hasOwnProperty("node")){if(!Array.isArray(e.node))return"node: array expected";for(t=0;t<e.node.length;++t)if(n=u.onnx.NodeProto.verify(e.node[t]))return"node."+n}if(null!=e.docString&&e.hasOwnProperty("docString")&&!l.isString(e.docString))return"docString: string expected";if(null!=e.opsetImport&&e.hasOwnProperty("opsetImport")){if(!Array.isArray(e.opsetImport))return"opsetImport: array expected";for(t=0;t<e.opsetImport.length;++t){var n;if(n=u.onnx.OperatorSetIdProto.verify(e.opsetImport[t]))return"opsetImport."+n}}return null!=e.domain&&e.hasOwnProperty("domain")&&!l.isString(e.domain)?"domain: string expected":null},e.fromObject=function(e){if(e instanceof u.onnx.FunctionProto)return e;var t=new u.onnx.FunctionProto;if(null!=e.name&&(t.name=String(e.name)),e.input){if(!Array.isArray(e.input))throw TypeError(".onnx.FunctionProto.input: array expected");t.input=[];for(var n=0;n<e.input.length;++n)t.input[n]=String(e.input[n])}if(e.output){if(!Array.isArray(e.output))throw TypeError(".onnx.FunctionProto.output: array expected");for(t.output=[],n=0;n<e.output.length;++n)t.output[n]=String(e.output[n])}if(e.attribute){if(!Array.isArray(e.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");for(t.attribute=[],n=0;n<e.attribute.length;++n)t.attribute[n]=String(e.attribute[n])}if(e.attributeProto){if(!Array.isArray(e.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");for(t.attributeProto=[],n=0;n<e.attributeProto.length;++n){if("object"!=typeof e.attributeProto[n])throw TypeError(".onnx.FunctionProto.attributeProto: object expected");t.attributeProto[n]=u.onnx.AttributeProto.fromObject(e.attributeProto[n])}}if(e.node){if(!Array.isArray(e.node))throw TypeError(".onnx.FunctionProto.node: array expected");for(t.node=[],n=0;n<e.node.length;++n){if("object"!=typeof e.node[n])throw TypeError(".onnx.FunctionProto.node: object expected");t.node[n]=u.onnx.NodeProto.fromObject(e.node[n])}}if(null!=e.docString&&(t.docString=String(e.docString)),e.opsetImport){if(!Array.isArray(e.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");for(t.opsetImport=[],n=0;n<e.opsetImport.length;++n){if("object"!=typeof e.opsetImport[n])throw TypeError(".onnx.FunctionProto.opsetImport: object expected");t.opsetImport[n]=u.onnx.OperatorSetIdProto.fromObject(e.opsetImport[n])}}return null!=e.domain&&(t.domain=String(e.domain)),t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.input=[],n.output=[],n.attribute=[],n.node=[],n.opsetImport=[],n.attributeProto=[]),t.defaults&&(n.name="",n.docString="",n.domain=""),null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),e.input&&e.input.length){n.input=[];for(var r=0;r<e.input.length;++r)n.input[r]=e.input[r]}if(e.output&&e.output.length)for(n.output=[],r=0;r<e.output.length;++r)n.output[r]=e.output[r];if(e.attribute&&e.attribute.length)for(n.attribute=[],r=0;r<e.attribute.length;++r)n.attribute[r]=e.attribute[r];if(e.node&&e.node.length)for(n.node=[],r=0;r<e.node.length;++r)n.node[r]=u.onnx.NodeProto.toObject(e.node[r],t);if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),e.opsetImport&&e.opsetImport.length)for(n.opsetImport=[],r=0;r<e.opsetImport.length;++r)n.opsetImport[r]=u.onnx.OperatorSetIdProto.toObject(e.opsetImport[r],t);if(null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),e.attributeProto&&e.attributeProto.length)for(n.attributeProto=[],r=0;r<e.attributeProto.length;++r)n.attributeProto[r]=u.onnx.AttributeProto.toObject(e.attributeProto[r],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.FunctionProto"},e}(),s),t.exports=u}));function Cr(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function sn(e){return(new TextDecoder).decode(e)}var ye,pr,mi,Xe,Xn,Ve,nt,U,an,dr,hr,mr,fe=L((()=>{Wn(),ti(),ye=Er($r()),br(),pr=class{static arraysEqual(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}},mi=class{static preprocessInputShapes(e,t){return[1===e.length?[1,e[0]]:e,1===t.length?[t[0],1]:t]}static postprocessOutputShape(e,t,n){1===t&&e.splice(e.length-2,1),1===n&&e.pop()}static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Xe=class e{static calcShape(e,t,n=!1){let r=e.length,s=t.length;if(0===r)return t;if(0===s)return e;let a=Math.max(e.length,t.length),i=new Array(a);if(n){if(r<2||s<2)return;let n=mi.calcMatMulShape([e[r-2],e[r-1]],[t[s-2],t[s-1]]);if(void 0===n)return;[i[a-2],i[a-1]]=n}for(let o=n?3:1;o<=a;o++){let n=r-o<0?1:e[r-o],l=s-o<0?1:t[s-o];if(n!==l&&n>1&&l>1)return;i[a-o]=Math.max(n,l)}return i}static index(t,n){let r=new Array(n.length);return e.fillIndex(t,n,r),r}static fillIndex(e,t,n){let r=e.length-t.length;for(let s=0;s<t.length;s++)n[s]=e[r+s]%t[s]}static calc(t,n,r,s,a){let i=e.calcShape(t.dims,n.dims);if(i){if(s&&!U.areEqual(i,t.dims))return;let o=U.size(i),l=s?t:new Fe(i,a||t.type);if(0===i.length)l.set([],r(t.get([]),n.get([])));else{let s,a=new Array(i.length),u=new Array(t.dims.length),c=new Array(n.dims.length),h=0,p=0,d=!1,f=!1;0===t.dims.length&&(h=t.get([]),d=!0),0===n.dims.length&&(p=n.get([]),f=!0);for(let m=0;m<o;m++){s=m;for(let e=i.length-1;e>=0;e--)a[e]=s%i[e],s=Math.floor(s/i[e]);d||(e.fillIndex(a,t.dims,u),h=t.get(u)),f||(e.fillIndex(a,n.dims,c),p=n.get(c)),l.set(a,r(h,p))}}return l}}static isValidBroadcast(e,t){let n=e.length,r=t.length;if(n>r)return!1;for(let s=1;s<=n;s++)if(1!==e[n-s]&&e[n-s]!==t[r-s])return!1;return!0}static getBroadcastDims(e,t){let n=e.length,r=[];for(let s=0;s<n;s++){let a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}},Xn=class{static getShapeOfGemmResult(e,t,n,r,s){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let a,i,o;t?(a=e[1],i=e[0]):(a=e[0],i=e[1]);let l=-1;if(r?(o=n[0],l=1):(o=n[1],l=0),n[l]!==i)throw new Error("dimension mismatch");if(a<=0||o<=0||i<=0)throw new Error("invalid shape specified");if(s&&!Xe.isValidBroadcast(s,[a,o]))throw new Error("gemm: invalid bias shape for broadcast");return[a,o,i]}},Ve=class e{static tensorDataTypeFromProto(e){switch(e){case ye.onnx.TensorProto.DataType.INT8:return"int8";case ye.onnx.TensorProto.DataType.UINT8:return"uint8";case ye.onnx.TensorProto.DataType.BOOL:return"bool";case ye.onnx.TensorProto.DataType.INT16:return"int16";case ye.onnx.TensorProto.DataType.UINT16:return"uint16";case ye.onnx.TensorProto.DataType.INT32:return"int32";case ye.onnx.TensorProto.DataType.UINT32:return"uint32";case ye.onnx.TensorProto.DataType.FLOAT:return"float32";case ye.onnx.TensorProto.DataType.DOUBLE:return"float64";case ye.onnx.TensorProto.DataType.STRING:return"string";case ye.onnx.TensorProto.DataType.INT64:return"int32";case ye.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${ye.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return ye.onnx.TensorProto.DataType.INT8;case"uint8":return ye.onnx.TensorProto.DataType.UINT8;case"bool":return ye.onnx.TensorProto.DataType.BOOL;case"int16":return ye.onnx.TensorProto.DataType.INT16;case"uint16":return ye.onnx.TensorProto.DataType.UINT16;case"int32":return ye.onnx.TensorProto.DataType.INT32;case"uint32":return ye.onnx.TensorProto.DataType.UINT32;case"float32":return ye.onnx.TensorProto.DataType.FLOAT;case"float64":return ye.onnx.TensorProto.DataType.DOUBLE;case"string":return ye.onnx.TensorProto.DataType.STRING;case"int64":return ye.onnx.TensorProto.DataType.INT64;case"uint64":return ye.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map((e=>zt.isLong(e)?e.toNumber():e))}static tensorValueTypeFromProto(t){return{tensorType:e.tensorDataTypeFromProto(t.elemType),shape:{dims:e.tensorDimsFromProto(t.shape.dim.map((e=>e.dimValue)))}}}static tensorDimsFromORTFormat(e){let t=[];for(let n=0;n<e.dimsLength();n++)t.push(nt.longToNumber(e.dims(n)));return t}static tensorAttributesFromORTFormat(e){let t=[];for(let n=0;n<e.attributesLength();n++)t.push(e.attributes(n));return t}},nt=class{static longToNumber(e,t){return zt.isLong(e)?e.toNumber():e instanceof _.Long?zt.fromValue({low:e.low,high:e.high,unsigned:t??!1}).toNumber():e}static isLong(e){return zt.isLong(e)||e instanceof _.Long}},U=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let s=t;s<n;s++){if(e[s]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");r*=e[s]}return r}static computeStrides(e){let t=e.length;if(0===t)return[];if(1===t)return[1];let n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,t,n){void 0===n&&(n=e.length);let r=0;for(let s=0;s<n;++s)r+=t[s]*e[s];return r}static offsetToIndices(e,t){let n=t.length;if(0===n)return[];if(1===n)return[e*t[0]];let r=new Array(t.length);for(let n=0;n<r.length-1;++n)r[n]=Math.floor(e/t[n]),e-=r[n]*t[n];return r[r.length-1]=e,r}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((e=>this.normalizeAxis(e,t)))}static incrementIndex(e,t,n){if(0===t.length||0===e.length)throw new Error("Index incrementing unsupported for scalar Tensor");if(void 0===n)n=t.length;else if(n<=0||n>t.length)throw new Error("Incorrect axis to increment on");for(let r=n-1;r>=0&&(e[r]++,!(e[r]<t[r]));--r)e[r]=0}static calculateReshapedDims(t,n){if(0===n.length){if(0===t.length||1===e.size(t))return[];throw new Error("cannot reshape to a scalar Tensor")}let r=n.length,s=new Array(r),a=-1,i=1;for(let e=0;e<r;e++){if(n[e]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(-1===n[e]){if(-1!==a)throw new Error("at most one dimension in shape hints can be -1");a=e}else{if(0===n[e]){if(e>=t.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");s[e]=t[e]}else s[e]=n[e];i*=s[e]}}let o=e.size(t);if(-1!==a){if(o%i!=0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${t}] Output shape: [${n}]`);s[a]=o/i}else if(i!==o)throw new Error("reshapedDims and originalDims don't have matching sizes");return s}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){let n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let t=1;for(let n of e){if(!Number.isInteger(n))throw new TypeError(`Invalid shape: ${n} is not an integer`);if(n<0||n>2147483647)throw new TypeError(`Invalid shape: length ${n} is not allowed`);t*=n}return t}static flattenShape(e,t){t<0&&(t+=e.length);let n=e.reduce(((e,t)=>e*t),1),r=e.slice(t).reduce(((e,t)=>e*t),1);return[n/r,r]}static squeezeShape(t,n){let r=new Array;n=e.normalizeAxes(n,t.length);for(let e=0;e<t.length;e++){let s=n.indexOf(e)>=0;if(s&&1!==t[e])throw new Error("squeeze an axis of size different than 1");(0===n.length&&t[e]>1||n.length>0&&!s)&&r.push(t[e])}return r}static unsqueezeShape(t,n){let r=new Array(t.length+n.length);r.fill(0);for(let t=0;t<n.length;t++){let s=e.normalizeAxis(n[t],r.length);if(s>=r.length)throw new Error("'axes' has an out of range axis");if(0!==r[s])throw new Error("'axes' has a duplicate axis");r[s]=1}let s=0;for(let e=0;e<r.length;e++)0===r[e]&&(r[e]=t[s++]);if(s!==t.length)throw new Error("the unsqueezed dimension could not be established");return r}},an=class e{static splitShape(t,n,r,s){if(0===r.length){if(!s)throw new Error("need to know number of outputs when the 'split' attribute is not specified");e.determineSplit(t[n],s,r)}let a=[],i=[0];for(let e=0;e<r.length;++e){0!==e&&i.push(i[e-1]+r[e-1]);let s=t.slice();s[n]=r[e],a.push(s)}return[a,i]}static determineSplit(e,t,n){if(e%t!=0)throw new Error("cannot split tensor to equal sized parts");for(let r=0;r<t;++r)n.push(e/t)}},dr=class e{static adjustPoolAttributes(e,t,n,r,s,a){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<s.length){if(s[e]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let e=0;e<2*n.length;e++)if(e<a.length){if(a[e]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[e]>=n[e]||a[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,n,r,s,a,i){if(i){if(a.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let o=0;o<t.length-2;o++)e.adjustPadAndReturnShape(t[o+2],n[o],r[o],s[o],a,o,o+t.length-2,i)}}static computePoolOutputShape(t,n,r,s,a,i,o){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let l=[n[0],n[1]];return e.computeShapeHelper(t,n,l,r,s,a,i,o),l}static computeConvOutputShape(t,n,r,s,a,i,o){if(t.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[t[0],n[0]];return e.computeShapeHelper(!1,t,l,r,s,a,i,o),l}static computeShapeHelper(t,n,r,s,a,i,o,l){if(t)for(let e=0;e<n.length-2;e++)r.push(1);else for(let t=0;t<n.length-2;t++)r.push(e.adjustPadAndReturnShape(n[t+2],s[t],a[t],i[t],o,t,t+n.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,s,a,i,o){let l=n*(r-1)+1;if(!o||"NOTSET"===o)return Math.floor((e+s[a]+s[i]-l)/t+1);switch(o){case"VALID":return s[a]=0,s[i]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let n=((e+t-1)/t-1)*t+r-e;return s[a]=Math.floor("SAME_LOWER"===o?(n+1)/2:n/2),s[i]=n-s[a],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}},hr=-34028234663852886e22,mr=34028234663852886e22}));function Vd(e){switch(e){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${e}`)}}function Cu(e){switch(e){case te.onnx.TensorProto.DataType.UINT8:case te.onnx.TensorProto.DataType.INT8:case te.onnx.TensorProto.DataType.BOOL:return 1;case te.onnx.TensorProto.DataType.UINT16:case te.onnx.TensorProto.DataType.INT16:return 2;case te.onnx.TensorProto.DataType.FLOAT:case te.onnx.TensorProto.DataType.INT32:case te.onnx.TensorProto.DataType.UINT32:return 4;case te.onnx.TensorProto.DataType.INT64:case te.onnx.TensorProto.DataType.DOUBLE:case te.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${te.onnx.TensorProto.DataType[e]}`)}}function Wd(e,t){return new(Nu(t))(e)}function Nu(e){switch(e){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function gi(e,t){if(t===te.onnx.TensorProto.DataType.INT64||t===bi.TensorDataType.INT64){if(e.greaterThanOrEqual(2147483648)||e.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else{if(t!==te.onnx.TensorProto.DataType.UINT32&&t!==bi.TensorDataType.UINT32&&t!==te.onnx.TensorProto.DataType.UINT64&&t!==bi.TensorDataType.UINT64)throw new TypeError(`not a LONG type: ${te.onnx.TensorProto.DataType[t]}`);if(e.greaterThanOrEqual(4294967296)||e.lessThan(0))throw new TypeError("uint64 is not supported")}return e.toNumber()}function ku(e,t,n){switch(t){case te.onnx.TensorProto.DataType.BOOL:case te.onnx.TensorProto.DataType.UINT8:return e.getUint8(n);case te.onnx.TensorProto.DataType.INT8:return e.getInt8(n);case te.onnx.TensorProto.DataType.UINT16:return e.getUint16(n,!0);case te.onnx.TensorProto.DataType.INT16:return e.getInt16(n,!0);case te.onnx.TensorProto.DataType.FLOAT:return e.getFloat32(n,!0);case te.onnx.TensorProto.DataType.INT32:return e.getInt32(n,!0);case te.onnx.TensorProto.DataType.UINT32:return e.getUint32(n,!0);case te.onnx.TensorProto.DataType.INT64:return gi(zt.fromBits(e.getUint32(n,!0),e.getUint32(n+4,!0),!1),t);case te.onnx.TensorProto.DataType.DOUBLE:return e.getFloat64(n,!0);case te.onnx.TensorProto.DataType.UINT64:return gi(zt.fromBits(e.getUint32(n,!0),e.getUint32(n+4,!0),!0),t);default:throw new Error(`cannot read from DataView for type ${te.onnx.TensorProto.DataType[t]}`)}}var Bu,te,bi,Fe,br=L((()=>{Bu=Er(Is()),ti(),tn(),te=Er($r()),fe(),bi=W.experimental.fbs,Fe=class e{constructor(e,t,n,r,s,a=Bu.Guid.create()){this.dims=e,this.type=t,this.dataProvider=n,this.asyncDataProvider=r,this.cache=s,this.dataId=a,this.size=U.validateDimsAndCalcSize(e);let i=this.size,o=void 0===n&&void 0===r&&void 0===s;if(void 0!==s&&s.length!==i)throw new RangeError("Input dims doesn't match data length.");if("string"===t){if(!(void 0===s||Array.isArray(s)&&s.every((e=>"string"==typeof e))))throw new TypeError("cache should be a string array");o&&(this.cache=new Array(i))}else{if(void 0!==s){let e=Nu(t);if(!(s instanceof e))throw new TypeError(`cache should be type ${e.name}`)}if(o){let e=new ArrayBuffer(i*Vd(t));this.cache=Wd(e,t)}}}get data(){if(void 0===this.cache){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if("string"!==this.type)throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if("string"!==this.type)return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[U.indicesToOffset(e,this.strides)]}set(e,t){this.data[U.indicesToOffset(e,this.strides)]=t}async getData(){return void 0===this.cache&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=U.computeStrides(this.dims)),this._strides}static fromProto(t){if(!t)throw new Error("cannot construct Value from an empty tensor");let n=Ve.tensorDataTypeFromProto(t.dataType),r=Ve.tensorDimsFromProto(t.dims),s=new e(r,n);if("string"===n)t.stringData.forEach(((e,t)=>{s.data[t]=sn(e)}));else if(t.rawData&&"number"==typeof t.rawData.byteLength&&t.rawData.byteLength>0){let e=s.data,n=new DataView(t.rawData.buffer,t.rawData.byteOffset,t.rawData.byteLength),r=Cu(t.dataType),a=t.rawData.byteLength/r;if(t.rawData.byteLength%r!=0)throw new Error("invalid buffer length");if(e.length!==a)throw new Error("buffer length mismatch");for(let s=0;s<a;s++){let a=ku(n,t.dataType,s*r);e[s]=a}}else{let e;switch(t.dataType){case te.onnx.TensorProto.DataType.FLOAT:e=t.floatData;break;case te.onnx.TensorProto.DataType.INT32:case te.onnx.TensorProto.DataType.INT16:case te.onnx.TensorProto.DataType.UINT16:case te.onnx.TensorProto.DataType.INT8:case te.onnx.TensorProto.DataType.UINT8:case te.onnx.TensorProto.DataType.BOOL:e=t.int32Data;break;case te.onnx.TensorProto.DataType.INT64:e=t.int64Data;break;case te.onnx.TensorProto.DataType.DOUBLE:e=t.doubleData;break;case te.onnx.TensorProto.DataType.UINT32:case te.onnx.TensorProto.DataType.UINT64:e=t.uint64Data;break;default:throw new Error("unspecific error")}if(null==e)throw new Error("failed to populate data from a tensorproto value");let n=s.data;if(n.length!==e.length)throw new Error("array length mismatch");for(let r=0;r<e.length;r++){let s=e[r];zt.isLong(s)?n[r]=gi(s,t.dataType):n[r]=s}}return s}static fromData(t,n,r){return new e(n,r,void 0,void 0,t)}static fromOrtTensor(t){if(!t)throw new Error("cannot construct Value from an empty tensor");let n=Ve.tensorDimsFromORTFormat(t),r=Ve.tensorDataTypeFromProto(t.dataType()),s=new e(n,r);if("string"===r)for(let e=0;e<t.stringDataLength();e++)s.data[e]=t.stringData(e);else if(t.rawDataArray()&&"number"==typeof t.rawDataLength()&&t.rawDataLength()>0){let e=s.data,n=new DataView(t.rawDataArray().buffer,t.rawDataArray().byteOffset,t.rawDataLength()),r=Cu(t.dataType()),a=t.rawDataLength()/r;if(t.rawDataLength()%r!=0)throw new Error("invalid buffer length");if(e.length!==a)throw new Error("buffer length mismatch");for(let s=0;s<a;s++){let a=ku(n,t.dataType(),s*r);e[s]=a}}return s}}}));function q(e){return 1===e?Hd:qd}function Ru(e){let t=q(e);return`${t.version}\n      precision highp float;\n      ${t.attribute} vec3 position;\n      ${t.attribute} vec2 textureCoord;\n\n      ${t.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`}function Mu(e){let t=q(e);return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFrag} vec2 TexCoords;\n    ${t.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `}function Gu(e,t){return`\n  void main() {\n    int indices[${t}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${q(e).output} = result;\n  }\n  `}var Hd,qd,xe=L((()=>{Hd={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},qd={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}})),ae=L((()=>{}));async function yi(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0,i=()=>{if(e())return void r();a++;let o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function Kn(e){return Cr(typeof e<"u"&&0!==e.length,(()=>"empty string found for sampler name")),"get"+e.charAt(0).toUpperCase()+e.slice(1)}function Uu(e){return Cr(typeof e<"u"&&0!==e.length,(()=>"empty string found for sampler name")),"get"+e.charAt(0).toUpperCase()+e.slice(1)+"AtOutCoords"}function kr(e,t){let n=JSON.parse(JSON.stringify(e));return n=t,n}function Br(e,t){return t.map((t=>e[t])).join(", ")}function Ke(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function St(e=6){return["x","y","z","w","u","v"].slice(0,e)}var Ft=L((()=>{fe()}));function jd(e,t){return St(t).map((t=>`${e}.${t}`))}function Nr(e,t){return 1===t?[e]:jd(e,t)}function $t(){return"\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  "}var gr=L((()=>{Ft()}));function Xd(e,t,n){if(0===e)return"false";if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s-e+2]}`,s<e-1&&(r+="||");return r}function Kd(e,t){let n=e.length;if(0===n)return"getA(), 0, 0, 0";if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;let r="";if(n>2)for(let e=0;e<n-2;++e)r+=`${t[e]},`;return`getA(${r}r, c),\n          rEdge ? 0. : getA(${r}rp1, c),\n          cEdge ? 0. : getA(${r}r, cp1),\n          rEdge || cEdge ? 0. : getA(${r}rp1, cp1)`}function Jd(e,t,n,r){return 0===e||1===e?"":`\n    int r = ${t[e-2]};\n    int c = ${t[e-1]};\n    int rp1 = ${t[e-2]} + 1;\n    int cp1 = ${t[e-1]} + 1;\n    bool rEdge = rp1 >= ${r};\n    bool cEdge = cp1 >= ${n};\n    `}var zu,Yd,Vu,Wu=L((()=>{xe(),ae(),Ft(),gr(),zu={name:"pack",inputNames:["A"],inputTypes:[1]},Yd=(e,t)=>{let n,r=q(e.session.backend.glContext.version),s=t.dims,a=s.length,i=t.dims.length,o=Ke(i),l=Nr("rc",i),u=Jd(i,l,s[s.length-2],s[s.length-1]);n=0===a?[1,1]:1===a?[s[0],1]:[s[i-1],s[i-2]];let c=Xd(i,n,l),h=Kd(s,l),p=`\n        void main() {\n          ${o} rc = getOutputCoords();\n\n          if(${c}) {\n            ${r.output} = vec4(0);\n          } else {\n            ${u}\n\n            ${r.output} = vec4(${h});\n          }\n        }\n      `;return{...zu,hasMain:!0,output:{dims:t.dims,type:t.type,textureType:2},shaderSource:p}},Vu=(e,t)=>({...zu,get:()=>Yd(e,t)})}));function Ti(e){if(0===e.length)return[1,1,1];let t=1;for(let n=0;n<e.length-2;++n)t*=e[n];return[t,e.length>1?e[e.length-2]:1,e[e.length-1]]}function qu(e,t){let n=!1;return n=0===e.length||0===t.length||(e.length<2||t.length<2?e[e.length-1]===t[t.length-1]:e[e.length-1]===t[t.length-1]&&e[e.length-2]===t[t.length-2]),n}function eh(e){let t=U.computeStrides(e),n=["b","r","c"],r="index";return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t.map(((e,s)=>`int ${n[s]} = ${r} / ${e}; ${s===t.length-1?`int ${n[s+1]} = ${r} - ${n[s]} * ${e}`:`index -= ${n[s]} * ${e}`};`)).join("")}\n      return ivec3(b, r, c);\n    }\n  `}function th(e){let t=U.computeStrides(e);return`\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${t[0]} + coords.z * ${t[1]} + coords.y;\n  }\n`}var Zd,Qd,Hu,ju=L((()=>{fe(),xe(),ae(),gr(),Zd=e=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${e}`}),Qd=(e,t,n,r)=>{let s=t.dims,a=r,i="";for(let e=0;e<4;e++){let t="";switch(e){case 0:t="outputCoords = rc;";break;case 1:t="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:t="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:t="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}i+=`\n        ${t}\n        ${e>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${e>0?"}":""}\n      `}let o=q(e.session.backend.glContext.version),l=`\n      ${eh(s)}\n      ${th(a)}\n      ${$t()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${a[2]};\n        int cols = ${a[1]};\n\n        ${i}\n        ${o.output} = result;\n      }\n    `;return{...n,output:{dims:a,type:t.type,textureType:2},shaderSource:l,hasMain:!0}},Hu=(e,t,n)=>{let r=Zd(n);return{...r,get:()=>Qd(e,t,r,n)}}})),xi,Yu=L((()=>{xe(),ae(),xi=(e,t)=>{let n=t.shape,r=q(e.session.backend.glContext.version),s=`\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${r.texture2D}(X,TexCoords).r;\n      ${r.output} = encodeAsUint8(value);\n    }`,a={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:t.tensor.type,textureType:3},shaderSource:s,hasMain:!0};return e.executeProgram(a,[t.tensor])}}));function nh(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var Xu,rh,Ku,Ju=L((()=>{xe(),ae(),Ft(),gr(),Xu={name:"unpack",inputNames:["A"],inputTypes:[2]},rh=(e,t)=>{let n=t.dims.length,r=Nr("rc",n),s=r.slice(-2),a=Ke(n),i=$t(),o=0===t.dims.length?"":nh(n,r),l=n<=1?"rc":`vec2(${s.join(",")})`,u=`\n    ${i}\n    void main() {\n      ${a} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${o});\n\n       ${q(e.session.backend.glContext.version).output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);\n     }\n   `;return{...Xu,hasMain:!0,output:{dims:t.dims,type:t.type,textureType:0},shaderSource:u}},Ku=(e,t)=>({...Xu,get:()=>rh(e,t)})})),Jn,un,Zn,ln=L((()=>{ut(),Jn=class{constructor(e,t=1){if(1===t)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=t;else{if(4!==t)throw new Error(`Invalid number of channels: ${t}`);this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=t}}encode(e,t){let n,r;return e.constructor!==Float32Array&&(ce.warning("Encoder","data was not of type Float32; creating new Float32Array"),r=new Float32Array(e)),t*this.channelSize>e.length?(ce.warning("Encoder","Source data too small. Allocating larger array"),r=e,n=this.allocate(t*this.channelSize),r.forEach(((e,t)=>n[t]=e))):(r=e,n=r),n}allocate(e){return new Float32Array(4*e)}decode(e,t){return 1===this.channelSize?e.filter(((e,t)=>t%4==0)).subarray(0,t):e.subarray(0,t)}},un=class{constructor(e,t=1,n){if(1!==t&&4!==t)throw new Error(`Invalid number of channels: ${t}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=t,this.textureType=n||e.FLOAT}encode(e,t){let n=e;return 1===this.channelSize&&(ce.verbose("Encoder","Exploding into a larger array"),n=this.allocate(t),e.forEach(((e,t)=>n[4*t]=e))),n}allocate(e){return new Float32Array(4*e)}decode(e,t){return 1===this.channelSize?e.filter(((e,t)=>t%4==0)).subarray(0,t):e.subarray(0,t)}},Zn=class{constructor(e,t=1){if(this.channelSize=4,1===t)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=t;else{if(4!==t)throw new Error(`Invalid number of channels: ${t}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=t}}encode(e,t){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,t){if(e instanceof Uint8Array)return e.subarray(0,t);throw new Error(`Invalid array type: ${e.constructor}`)}}})),fn,Zu,vi,Qu=L((()=>{fe(),ae(),fn=(e,t,n)=>{let r=0===n||1===n?1:4,s=2===n,a=1===n||2===n,i=4===n?t.length-1:void 0,o=4===n?t.map(((e,n)=>n===t.length-1?4*e:e)):void 0;return vi(e,t,r,o,{isPacked:s,reverseWH:a,breakAxis:i})},Zu=(e,t,n)=>{let r=fn(e,t,n);return[r.width,r.height]},vi=(e,t,n=1,r,s)=>{let a=!(!s||!s.isPacked),[i,o]=e.computeTextureWH(a&&r||t,s),l=t.length,u=t.slice(0);if(0===l&&(u=[1]),1===n)r=t;else if(a){if(4!==n)throw new Error("a packed texture must be 4-channel");r=t,l>0&&(u[l-1]=Math.ceil(u[l-1]/2)),l>1&&(u[l-2]=Math.ceil(u[l-2]/2))}else if(!r)throw new Error("Unpacked shape is needed when using channels > 1");return{width:i,height:o,channels:n,isPacked:a,shape:u,strides:U.computeStrides(u),unpackedShape:r,reversedWH:s&&s.reverseWH}}})),ih,Qn,tl=L((()=>{ut(),br(),fe(),Wu(),ju(),Yu(),Ju(),ln(),Qu(),ae(),ih=(e,t)=>{let n=t.map((e=>`${e.unpackedShape.join(",")};${e.width}x${e.height}`)).join("_"),r=e.name;return e.cacheHint&&(r+="["+e.cacheHint+"]"),r+=":"+n,r},Qn=class{constructor(e){this.session=e,this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,t){return Zu(this.session.layoutStrategy,e,t)}executeProgram(e,t){if(t.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let n=[];for(let r=0;r<e.inputNames.length;++r)n[r]=this.getOrCreateTextureData(t[r],e.inputTypes[r]);let r=ih(e,n),s=this.session.programManager.getArtifact(r),a=s?s.programInfo:"function"==typeof e.get?e.get():e,i=fn(this.session.layoutStrategy,a.output.dims,a.output.textureType),o=this.createTextureData(i,a.output.type);return s||(s=this.session.programManager.build(a,n,o),this.session.programManager.setArtifact(r,s)),this.runProgram(s,n,o),o}run(e,t){return this.executeProgram(e,t).tensor}runProgram(e,t,n){for(let n=0;n<t.length;++n)if(!!t[n].isPacked!=(2===e.programInfo.inputTypes[n]))throw new Error(`input[${n}] property packed inconsistent`);if(!!n.isPacked!=(2===e.programInfo.output.textureType))throw new Error("output property packed inconsistent");this.session.programManager.run(e,t,n)}getOrCreateTextureData(e,t){let n=this.getTextureData(e.dataId,2===t);if(!n&&(n=this.getTextureData(e.dataId,2!==t),n))return 2===t?this.pack(n):this.unpack(n);if(!n){let r=fn(this.session.layoutStrategy,e.dims,t);if(4===t){let n=e.dims;if(4===n.length){let r=[n[0],Math.ceil(n[1]*n[2]*n[3]/4)],s=fn(this.session.layoutStrategy,r,t),a=e.numberData;if(n[1]*n[2]*n[3]%4!=0){let t=n[0],r=n[1]*n[2]*n[3],s=4*Math.ceil(1*r/4);a=new Float32Array(t*s);for(let n=0;n<t;++n){let t=n*r,i=n*s+n%1*r;a.set(e.numberData.subarray(t,t+r),i)}}return this.createTextureData(s,e.type,a,e,1)}}if(2===t){let t=vi(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),r=this.createTextureData(t,e.type,e.numberData,e,1);n=this.pack(r)}else n=this.createTextureData(r,e.type,e.numberData,e,1)}return n}createTextureDataFromLayoutBindTensor(e,t,n,r){return this.createTextureData(e,t,n,r,1)}createTextureData(e,t,n,r,s){ce.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let a=this.session.textureManager.createTextureFromLayout(t,e,n,s);return this.createTextureDataFromTexture(e,t,a,r)}reshapeUnpacked(e,t){let n=this.getOrCreateTextureData(e,0),r={channels:n.channels,height:n.height,width:n.width,shape:0!==t.length?t:[1],strides:U.computeStrides(t),unpackedShape:t};return this.createTextureDataFromTexture(r,e.type,n.texture).tensor}reshapePacked(e,t){let n=this.getOrCreateTextureData(e,2);if(qu(e.dims,t)){let r={channels:n.channels,height:n.height,width:n.width,shape:0!==t.length?t:[1],strides:U.computeStrides(t),unpackedShape:t,isPacked:!0};return this.createTextureDataFromTexture(r,e.type,n.texture).tensor}let r=Ti(e.dims),s=Ti(t),a=this.reshapePacked(e,r),i=this.run(Hu(this,a,s),[a]);return this.reshapePacked(i,t)}cast(e,t){let n=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(n,t,n.texture).tensor}createTextureDataFromTexture(e,t,n,r,s){let a={...e,tensor:r||new Fe(e.unpackedShape,t,(e=>this.readTexture(a)),(async e=>this.readTextureAsync(a)),void 0,s),texture:n};return this.setTextureData(a.tensor.dataId,a,e.isPacked),a}getTextureData(e,t=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,t):t?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,t,n=!1){this.session.isInitializer(e)?this.session.setTextureData(e,t,n):(n?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,t)}isTextureLayoutCached(e,t=!1){return!!this.getTextureData(e.dataId,t)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach((e=>this.session.textureManager.releaseTexture(e))),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach((e=>this.session.textureManager.releaseTexture(e))),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(xi(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(xi(this,e))}pack(e){return this.executeProgram(Vu(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(Ku(this,e.tensor),[e.tensor])}}})),wi,ee,Ge=L((()=>{wi=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this.key}},ee=e=>new wi(e)})),rl,nl,ol,ah,sh,il=L((()=>{Ge(),xe(),ae(),rl={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},nl=(e,t,n)=>(sh(t),[e.run({...rl,cacheHint:n.cacheKey,get:()=>ah(e,t,n)},t)]),ol=e=>{let t=e.attributes.getFloat("epsilon",1e-5),n=e.attributes.getFloat("momentum",.9),r=e.attributes.getInt("spatial",1);return ee({epsilon:t,momentum:n,spatial:r})},ah=(e,t,n)=>{let r=q(e.session.backend.glContext.version),s=t[0].dims.length,[a,i]=e.calculateTextureWidthAndHeight(t[1].dims,0),o=`\n  float process(int[${s}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${a}, ${i});\n    float scale = getColorAsFloat(${r.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${r.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${r.texture2D}(Variance, position));\n    float b = getColorAsFloat(${r.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;\n  }`;return{...rl,output:{dims:t[0].dims,type:t[0].type,textureType:0},shaderSource:o}},sh=e=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs.");let t=e[0],n=e[1],r=e[2],s=e[3],a=e[4];if(t.dims.length<3||1!==n.dims.length||1!==r.dims.length||1!==s.dims.length||1!==a.dims.length)throw new Error("invalid input shape.");if(n.dims[0]!==t.dims[1]||r.dims[0]!==t.dims[1]||s.dims[0]!==t.dims[1]||a.dims[0]!==t.dims[1])throw new Error("invalid input shape.");if("float32"!==t.type&&"float64"!==t.type||"float32"!==n.type&&"float64"!==n.type||"float32"!==r.type&&"float64"!==r.type||"float32"!==s.type&&"float64"!==s.type||"float32"!==a.type&&"float64"!==a.type)throw new Error("invalid input tensor types.")}})),eo,pt,R,cn,to,Vt=L((()=>{eo=class{constructor(e,t,n,r){this.glContext=e,this.programInfo=t,this.inputTextureLayouts=n,this.outputTextureLayout=r}},pt=class{constructor(e){this.context=e}},R=class{constructor(e,t){this.routineBody=e,this.dependencies=t}},cn=class{constructor(e,t,n){this.name=e,this.dependencies=n||[],t&&(this.routineBody=t)}addDependency(e){e&&this.dependencies.push(e)}},to=class{static returnOrderedNodes(e){if(!e||0===e.length)return[];if(1===e.length)return e;let t=new Set,n=new Set,r=new Array;return this.createOrderedNodes(e,t,n,r),r}static createOrderedNodes(e,t,n,r){for(let s=0;s<e.length;++s)this.dfsTraverse(e[s],t,n,r)}static dfsTraverse(e,t,n,r){if(!e||n.has(e.name))return;if(t.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");t.add(e.name);let s=e.dependencies;if(s&&s.length>0)for(let e=0;e<s.length;++e)this.dfsTraverse(s[e],t,n,r);r.push(e),n.add(e.name),t.delete(e.name)}}}));function lh(){let e="add_";return{body:`\n  float ${e}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `,name:e,type:0}}function fh(){let e="div_";return{body:`\n  float ${e}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `,name:e,type:0}}function ch(){let e="mul_";return{body:`\n  float ${e}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `,name:e,type:0}}function ph(){let e="sub_";return{body:`\n  float ${e}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `,name:e,type:0}}function dh(){let e="equal_";return{body:`\n  float ${e}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `,name:e,type:0}}function hh(){let e="greater_";return{body:`\n  float ${e}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `,name:e,type:0}}function mh(){let e="less_";return{body:`\n  float ${e}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `,name:e,type:0}}function bh(){let e="and_";return{body:`\n  float ${e}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `,name:e,type:0}}function gh(){let e="or_";return{body:`\n  float ${e}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `,name:e,type:0}}function yh(){let e="xor_";return{body:`\n  float ${e}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `,name:e,type:0}}function Th(){return vh("pow")}function xh(){let e="prelu_";return{body:`\n  float ${e}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `,name:e,type:0}}function vh(e){let t=`${e}_`;return{body:`\n  float ${t}(float a, float b) {\n    return ${e}(a, b);\n  }\n  vec4 ${t}(vec4 v1, vec4 v2) {\n    return ${e}(v1, v2);\n  }\n  `,name:t,type:0}}var dt,wh,al,sl,ul,ll,fl,cl,pl,dl,hl,ml,bl,gl,yl=L((()=>{fe(),Vt(),xe(),ae(),dt=(e,t,n,r=t[0].type,s)=>{let a=e.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[a,a],cacheHint:s,get:()=>wh(e,t,n,r)}},wh=(e,t,n,r=t[0].type)=>{let s=e.session.pack?2:0,a=!U.areEqual(t[0].dims,t[1].dims),i=t[0].dims,o=e.session.pack;if(a){let a=Xe.calcShape(t[0].dims,t[1].dims,!1);if(!a)throw new Error("Can't perform binary op on the given tensors");i=a;let l=i.length,u=0!==t[0].dims.length?t[0].dims.length:1,c=0!==t[1].dims.length?t[1].dims.length:1,h=0!==t[0].dims.length?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",p=0!==t[1].dims.length?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",d=q(e.session.backend.glContext.version),f=o?`\n      ${n.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${n.name}(a, b);\n        ${d.output} = result;\n      }`:`\n      ${n.body}\n      float process(int indices[${l}]) {\n        int aindices[${u}];\n        int bindices[${c}];\n        ${h}\n        ${p}\n        return ${n.name}(_A(aindices), _B(bindices));\n      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[s,s],output:{dims:i,type:r,textureType:s},shaderSource:f,hasMain:o}}let l=q(e.session.backend.glContext.version),u=`\n    ${n.body}\n    void main() {\n      vec4 v1 = ${l.texture2D}(A, TexCoords);\n      vec4 v2 = ${l.texture2D}(B, TexCoords);\n      vec4 result = ${n.name}(v1, v2);\n      ${l.output} = result;\n    }\n    `;return{name:n.name,inputNames:["A","B"],inputTypes:[s,s],output:{dims:t[0].dims,type:r,textureType:s},shaderSource:u,hasMain:!0}},al=(e,t)=>[e.run(dt(e,t,lh()),t)],sl=(e,t)=>[e.run(dt(e,t,bh(),"bool"),t)],ul=(e,t)=>[e.run(dt(e,t,fh()),t)],ll=(e,t)=>[e.run(dt(e,t,dh(),"bool"),t)],fl=(e,t)=>[e.run(dt(e,t,hh(),"bool"),t)],cl=(e,t)=>[e.run(dt(e,t,mh(),"bool"),t)],pl=(e,t)=>[e.run(dt(e,t,ch()),t)],dl=(e,t)=>[e.run(dt(e,t,gh(),"bool"),t)],hl=(e,t)=>[e.run(dt(e,t,Th()),t)],ml=(e,t)=>[e.run(dt(e,t,xh()),t)],bl=(e,t)=>[e.run(dt(e,t,ph()),t)],gl=(e,t)=>[e.run(dt(e,t,yh(),"bool"),t)]})),Tl,xl,Oh,vl=L((()=>{fe(),Tl=(e,t,n)=>(Oh(t),[e.cast(t[0],n)]),xl=e=>Ve.tensorDataTypeFromProto(e.attributes.getInt("to")),Oh=e=>{if(!e||1!==e.length)throw new Error("Cast requires 1 input.");if("string"===e[0].type)throw new Error("Invalid input type.")}})),Ih,Sh,wl,ro,_l=L((()=>{xe(),ae(),Ft(),gr(),Ih=(e,t)=>({name:"Concat (packed)",inputNames:Array.from({length:e},((e,t)=>`X${t}`)),inputTypes:Array(e).fill(2),cacheHint:t}),Sh=(e,t,n,r)=>{let s=n[0].dims.slice();if(r>=s.length||r<-1*s.length)throw new Error("axis specified for concat doesn't match input dimensionality");r<0&&(r=s.length+r);let a=s.slice(0);for(let e=1;e<n.length;e++){let t=n[e].dims.slice();for(let e=0;e<s.length;e++)if(e===r)a[r]+=t[e];else if(s[e]!==t[e])throw new Error("non concat dimensions must match")}let i=a.length,o=Nr("coords",i),l=Ke(i),u=$t(),c=n.map((e=>e.dims)),h=St(i),p=new Array(c.length-1);p[0]=c[0][r];for(let e=1;e<p.length;e++)p[e]=p[e-1]+c[e][r];let d=h[r],f=h.slice(-2),m=h.join(),g=`if (${d} < ${p[0]}) {\n        return getChannel(\n            getX0(${m}), vec2(${f.join()}));\n        }`;for(let e=1;e<p.length;e++){let t=p[e-1];g+=`\n            if (${d} < ${p[e]}  && ${d} >= ${p[e-1]}) {\n              return getChannel(\n                getX${e}(${ro(h,d,t)}),\n                vec2(${ro(f,d,t)}));\n            }`}let y=p.length,b=p[p.length-1];g+=`\n            return getChannel(\n              getX${y}(${ro(h,d,b)}),\n              vec2(${ro(f,d,b)}));`;let x=q(e.session.backend.glContext.version),w=`\n          ${u}\n          float getValue(${h.map((e=>"int "+e))}) {\n            ${g}\n          }\n\n          void main() {\n            ${l} coords = getOutputCoords();\n            int lastDim = coords.${h[i-1]};\n            coords.${h[i-1]} = coords.${h[i-2]};\n            coords.${h[i-2]} = lastDim;\n\n            vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n            ${o[i-1]} = ${o[i-1]} + 1;\n            if (${o[i-1]} < ${a[i-1]}) {\n              result.g = getValue(${o});\n            }\n\n            ${o[i-2]} = ${o[i-2]} + 1;\n            if (${o[i-2]} < ${a[i-2]}) {\n              result.a = getValue(${o});\n            }\n\n            ${o[i-1]} = ${o[i-1]} - 1;\n            if (${o[i-2]} < ${a[i-2]} &&\n                ${o[i-1]} < ${a[i-1]}) {\n              result.b = getValue(${o});\n            }\n            ${x.output} = result;\n          }\n        `;return{...t,output:{dims:a,type:n[0].type,textureType:2},shaderSource:w,hasMain:!0}},wl=(e,t,n)=>{let r=Ih(t.length,n.cacheKey);return{...r,get:()=>Sh(e,r,t,n.axis)}},ro=(e,t,n)=>{let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}})),Ol,Ah,Ph,Eh,Il,Dh,Lh,Fh,Sl,$h,Al=L((()=>{Ge(),ae(),_l(),Ol=(e,t,n)=>($h(t),e.session.pack&&t[0].dims.length>1?[e.run(wl(e,t,n),t)]:[e.run(Eh(e,t,n),t)]),Ah=(e,t)=>({name:"Concat",inputNames:Array.from({length:e},((e,t)=>`X${t}`)),inputTypes:Array(e).fill(0),cacheHint:t}),Ph=(e,t,n,r)=>{let s=n[0].dims.slice();if(r>=s.length||r<-1*s.length)throw new Error("axis specified for concat doesn't match input dimensionality");r<0&&(r=s.length+r);let a=s.slice(0);for(let e=1;e<n.length;e++){let t=n[e].dims.slice();for(let e=0;e<s.length;e++)if(e===r)a[r]+=t[e];else if(s[e]!==t[e])throw new Error("non concat dimensions must match")}let i=a.length,o=new Array(n.length),l=0;for(let e=0;e<o.length;++e)l+=n[e].dims[r],o[e]=l;let u="";u=n.length<5?Il(o):Dh(o);let c=`\n        ${Lh(n.length,i)}\n        ${Fh(o)}\n        ${u}\n        float process(int indices[${i}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${r}]);\n\n          if(textureIndex != 0) {\n            indices[${r}] = indices[${r}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;return{...t,output:{dims:a,type:n[0].type,textureType:0},shaderSource:c}},Eh=(e,t,n)=>{let r=Ah(t.length,n.cacheKey);return{...r,get:()=>Ph(e,r,t,n.axis)}},Il=e=>`int getTextureWhereDataResides(int index) {\n      ${e.map(((e,t)=>`if(index<${e}) {return ${t};}\n`)).join("")}\n    }`,Dh=e=>Il(e),Lh=(e,t)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${t}]) {`];for(let t=0;t<e;++t)0===t?n.push(`\tif (textureIndex == ${t}) { return _X${t}(indices); }`):t===e-1?n.push(`\telse { return _X${t}(indices); }`):n.push(`\telse if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("\t}"),n.join("\n")},Fh=e=>{let t=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<e.length;++n)0===n?t.push(`\tif (index == ${n}) { return ${e[n]}; }`):n===e.length-1?t.push(`\telse { return ${e[n]}; }`):t.push(`\telse if (index == ${n}) { return ${e[n]}; }`);return t.push("\t}"),t.join("\n")},Sl=e=>ee({axis:e.attributes.getInt("axis")}),$h=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].type,n=e[0].dims.length;if("string"===t)throw new Error("string tensor is not supported yet");for(let r of e){if(r.type!==t)throw new Error("input tensors should be one type");if(r.dims.length!==n)throw new Error("input tensors should have the same shape")}}}));function Ch(){return ht("abs")}function kh(){return ht("acos")}function Bh(){return ht("asin")}function Nh(){return ht("atan")}function Rh(){return ht("ceil")}function Mh(){return ht("cos")}function Gh(e){let t="elu";return{body:`\n  const float alpha = float(${e});\n\n  float ${t}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${t}_(vec4 v) {\n    return vec4(${t}_(v.x), ${t}_(v.y), ${t}_(v.z), ${t}_(v.w));\n  }\n  `,name:t,type:0}}function Uh(){return ht("exp")}function zh(){return ht("floor")}function _i(e,t){let n="clip";return{body:`\n  const float min = float(${e});\n  const float max = float(${t});\n\n  float ${n}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${n}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `,name:n,type:0}}function Vh(){let e="indentity";return{body:`\n  float ${e}_(float a) {\n    return a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return v;\n  }\n  `,name:e,type:0}}function Wh(e){let t="leakyRelu";return{body:`\n  const float alpha = float(${e});\n\n  float ${t}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${t}_(vec4 v) {\n    return vec4(${t}_(v.x), ${t}_(v.y), ${t}_(v.z), ${t}_(v.w));\n  }\n  `,name:t,type:0}}function Hh(){return ht("log")}function qh(){let e="neg";return{body:`\n  float ${e}_(float a) {\n    return -a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return -v;\n  }\n  `,name:e,type:0}}function jh(){let e="not";return{body:`\n  float ${e}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${e}_(bool a) {\n    return !a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${e}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `,name:e,type:0}}function Yh(){return ht("sin")}function Oi(){let e="relu";return{body:`\n  float ${e}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${e}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `,name:e,type:0}}function Ii(){let e="sigmoid";return{body:`\n  float ${e}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${e}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `,name:e,type:0}}function Xh(){return ht("sqrt")}function Kh(){return ht("tan")}function Jh(){let e="tanh";return{body:`\n  float ${e}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${e}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `,name:e,type:0}}function ht(e){return{body:`\n  float ${e}_(float a) {\n    return ${e}(a);\n  }\n  vec4 ${e}_(vec4 v) {\n    return ${e}(v);\n  }\n  `,name:e,type:0}}var Zh,Pe,Pl,El,Dl,Ll,Si,Fl,$l,Qh,Cl,kl,Bl,Nl,Rl,Ml,Ai,Gl,Ul,zl,Vl,Wl,Hl,ql,jl,Yl,Xl,Kl,Pi=L((()=>{Ge(),fe(),Vt(),xe(),ae(),Zh=(e,t,n,r)=>{let s=e.session.pack?2:0,a=q(e.session.backend.glContext.version);return{...t,output:{dims:n.dims,type:n.type,textureType:s},shaderSource:`\n     ${r.body}\n     void main() {\n       vec4 v = ${a.texture2D}(A, TexCoords);\n       v = ${r.name}_(v);\n       ${a.output} = v;\n     }\n     `,hasMain:!0}},Pe=(e,t,n,r)=>{let s=e.session.pack?2:0,a={name:n.name,inputTypes:[s],inputNames:["A"],cacheHint:r};return{...a,get:()=>Zh(e,a,t,n)}},Pl=(e,t)=>[e.run(Pe(e,t[0],Ch()),t)],El=(e,t)=>[e.run(Pe(e,t[0],kh()),t)],Dl=(e,t)=>[e.run(Pe(e,t[0],Bh()),t)],Ll=(e,t)=>[e.run(Pe(e,t[0],Nh()),t)],Si=(e,t,n)=>[e.run(Pe(e,t[0],_i(n.min,n.max),n.cacheKey),t)],Fl=e=>ee({min:e.attributes.getFloat("min",hr),max:e.attributes.getFloat("max",mr)}),$l=(e,t)=>{let n=Qh(e,t);return Si(e,[t[0]],n)},Qh=(e,t)=>{if(t.length>=3&&(!e.session.isInitializer(t[1].dataId)||!e.session.isInitializer(t[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=t.length>=3?t[1].numberData[0]:hr,r=t.length>=3?t[2].numberData[0]:mr;return ee({min:n,max:r})},Cl=(e,t)=>[e.run(Pe(e,t[0],Rh()),t)],kl=(e,t)=>[e.run(Pe(e,t[0],Mh()),t)],Bl=(e,t,n)=>[e.run(Pe(e,t[0],Gh(n.alpha),n.cacheKey),t)],Nl=e=>ee({alpha:e.attributes.getFloat("alpha",1)}),Rl=(e,t)=>[e.run(Pe(e,t[0],Uh()),t)],Ml=(e,t)=>[e.run(Pe(e,t[0],zh()),t)],Ai=(e,t)=>[e.run(Pe(e,t[0],Vh()),t)],Gl=(e,t,n)=>[e.run(Pe(e,t[0],Wh(n.alpha),n.cacheKey),t)],Ul=e=>ee({alpha:e.attributes.getFloat("alpha",.01)}),zl=(e,t)=>[e.run(Pe(e,t[0],Hh()),t)],Vl=(e,t)=>[e.run(Pe(e,t[0],qh()),t)],Wl=(e,t)=>[e.run(Pe(e,t[0],jh()),t)],Hl=(e,t)=>[e.run(Pe(e,t[0],Oi()),t)],ql=(e,t)=>[e.run(Pe(e,t[0],Ii()),t)],jl=(e,t)=>[e.run(Pe(e,t[0],Yh()),t)],Yl=(e,t)=>[e.run(Pe(e,t[0],Xh()),t)],Xl=(e,t)=>[e.run(Pe(e,t[0],Kh()),t)],Kl=(e,t)=>[e.run(Pe(e,t[0],Jh()),t)]}));function Ct(e){let t;switch(e.activation){case"Relu":t=Oi();break;case"Sigmoid":t=Ii();break;case"Clip":t=_i(e.clipMin,e.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=t.name;return{activationFunction:t.body,applyActivation:`value = ${n}_(value);`}}var Rr,yr=L((()=>{fe(),Pi(),Rr=e=>{let t=e.getString("activation","");if("Clip"===t){let[n,r]=e.getFloats("activation_params",[hr,mr]);return{activation:t,clipMax:r,clipMin:n,activationCacheKey:`${t}:${n},${r}`}}return{activation:t,activationCacheKey:t}}})),tm,rm,Jl,Zl=L((()=>{ut(),xe(),ae(),no(),yr(),tm=(e,t)=>({name:"GroupedConv",inputNames:e?["X","W","Bias"]:["X","W"],inputTypes:e?[0,0,0]:[0,0],cacheHint:t}),rm=(e,t,n,r)=>{let s=t.length>2?"value += getBias(output_channel);":"",a=t[0].dims.slice(),i=t[1].dims.slice(),o=i[0]/r.group;ce.verbose("GroupedConv",`autpPad:${r.autoPad}, dilations:${r.dilations}, group:${r.group}, kernelShape:${r.kernelShape}, pads:${r.pads}, strides:${r.strides}`);let l=Mr(a,i,r.dilations,r.pads,r.strides),u=q(e.session.backend.glContext.version),{activationFunction:c,applyActivation:h}=Ct(r),p=`\n  const ivec2 strides = ivec2(${r.strides[0]}, ${r.strides[1]});\n  const ivec2 pads = ivec2(${r.pads[0]}, ${r.pads[1]});\n  ${c}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${o};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${i[1]}; wInChannel++) {\n      int input_channel = group_id * ${i[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${i[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${r.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${a[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${i[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${r.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${a[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${s}\n    ${h}\n    ${u.output} = vec4(value, .0, .0, .0);\n  }\n`;return{...n,output:{dims:l,type:t[0].type,textureType:0},shaderSource:p,hasMain:!0}},Jl=(e,t,n)=>{let r=tm(t.length>2,n.cacheKey);return{...r,get:()=>rm(e,t,r,n)}}})),nm,om,Ql,ef=L((()=>{xe(),ae(),gr(),nm=e=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:e}),om=(e,t,n,r,s,a)=>{let i=n.dims,o=r.dims,l=s.length,u=[o[1]*o[2]*o[3],s[2]*s[3]],c=o[2]*o[3],h=$t(),p=q(e.session.backend.glContext.version),d="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)d+=`\n            blockIndex = rc.x + ${t};\n            pos = rc.y + ${e};\n\n            if(blockIndex < ${u[1]} && pos < ${u[0]}) {\n              offsetY = int(blockIndex / (${s[l-1]})) * ${a.strides[0]} -\n                ${a.pads[0]};\n              d0 = offsetY + ${a.dilations[0]} * (imod(pos, ${c}) / ${o[2]});\n\n              if(d0 < ${i[2]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${s[l-1]}) * ${a.strides[1]} -\n                  ${a.pads[1]};\n                d1 = offsetX + ${a.dilations[1]} * imod(imod(pos, ${c}), ${o[2]});\n\n                if(d1 < ${i[3]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${c}.);\n                    innerDims = vec2(d0, d1);\n                    result[${2*e+t}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;let f=`\n      ${h}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${d}\n          ${p.output} = result;\n      }\n            `;return{...t,output:{dims:u,type:n.type,textureType:2},shaderSource:f,hasMain:!0}},Ql=(e,t,n,r,s)=>{let a=nm(s.cacheKey);return{...a,get:()=>om(e,a,t,n,r,s)}}}));function am(e,t,n){let r=t[0].dims,s=t[1].dims,a=Xe.calcShape(r,s,!0);if(!a)throw new Error("Can't use matmul on the given tensors");let i=Ke(a.length),o=St(),{activationFunction:l,applyActivation:u}=Ct(n),c=t.length>2,h=c?"value += getBiasForMatmul();":"",p=c?`${Di(i,o,t[2].dims,a,!1)}`:"",d=a.length,f=r.length,m=s.length,g=`\n    ${l}\n    ${p}\n    float process(int indices[${d}]) {\n        int a[${f}];\n        int b[${m}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${r[r.length-1]}; ++k) {\n            a[${f-1}] = k;\n            b[${m-2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${h}\n        ${u}\n        return value;\n    }`;return{...e,output:{dims:a,type:t[0].type,textureType:0},shaderSource:g}}function Ei(e,t){let n=im(e.length>2,t.activationCacheKey);return{...n,get:()=>am(n,e,t)}}function Di(e,t,n,r,s){let a="",i=n.length,o=r.length,l=o-i;a=o<2&&i>0?"coords":n.map(((e,n)=>`coords.${t[n+l]}`)).join(", ");let u=Xe.getBroadcastDims(n,r).map((e=>`coords.${t[e+l]} = 0;`)).join("\n"),c="vec4(outputValue.xx, outputValue.yy)";return 1===U.size(n)&&(c="vec4(outputValue.x)"),s?`\nvec4 getBiasForMatmul() {\n  ${e} coords = getOutputCoords();\n  ${u}\n  vec4 outputValue = getBias(${a});\n  return ${c};\n}`:`\nfloat getBiasForMatmul() {\n  ${e} coords = getOutputCoords();\n  ${u}\n  return getBias(coords.x);\n}`}var tf,rf,im,sm,oo=L((()=>{fe(),ae(),Ft(),yr(),Li(),tf=(e,t,n)=>(sm(t),e.session.pack?[e.run(io(e,t,n),t)]:[e.run(Ei(t,n),t)]),rf=e=>Rr(e.attributes),im=(e,t)=>({name:"MatMul",inputNames:e?["A","B","Bias"]:["A","B"],inputTypes:e?[0,0,0]:[0,0],cacheHint:t}),sm=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.");if("float32"!==e[0].type&&"float64"!==e[0].type||"float32"!==e[1].type&&"float64"!==e[1].type)throw new Error("inputs should be float type");if(e[0].type!==e[1].type)throw new Error("inputs types should match")}}));function fm(e,t,n,r){let s=[],a=[],i=n[0].dims,o=n[1].dims,l=i.length,u=o.length,c=r.length,h=c-l,p=c-u;s=i.map(((e,n)=>`coords.${t[n+h]}`)),s[l-1]="i*2",s.join(", "),a=o.map(((e,n)=>`coords.${t[n+p]}`)),a[u-2]="i*2",a.join(", ");let d=Xe.getBroadcastDims(i,r),f=Xe.getBroadcastDims(o,r),m=d.map((e=>`coords.${t[e+h]} = 0;`)).join("\n"),g=f.map((e=>`coords.${t[e+p]} = 0;`)).join("\n"),y=`int lastDim = coords.${t[c-1]};\n  coords.${t[c-1]} = coords.${t[c-2]};\n  coords.${t[c-2]} = lastDim;`;return`\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${e} coords = getOutputCoords();\n  ${y}\n  ${m}\n  vec4 outputValue = getA(${s});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${e} coords = getOutputCoords();\n  ${y}\n  ${g}\n  vec4 outputValue = getB(${a});\n  return outputValue;\n}`}function cm(e,t){let n="";for(let r=0;r<t-2;r++)n+=`rc.${e[r]}, `;return n+=`rc.${e[t-2]}, i*2`,n}function pm(e,t){let n="";for(let r=0;r<t-2;r++)n+=`rc.${e[r]}, `;return n+=`i*2, rc.${e[t-1]}`,n}var um,lm,io,Li=L((()=>{fe(),xe(),ae(),Ft(),yr(),oo(),um=(e,t)=>({name:"MatMul (packed)",inputNames:e?["A","B","Bias"]:["A","B"],inputTypes:e?[2,2,2]:[2,2],cacheHint:t}),lm=(e,t,n,r)=>{let s=n.length>2,a=s?"value += getBiasForMatmul();":"",i=n[0].dims,o=n[1].dims,l=Xe.calcShape(i,o,!0),u=!U.areEqual(n[0].dims,n[1].dims);if(!l)throw new Error("Can't use matmul on the given tensors");let c=i[i.length-1],h=Math.ceil(c/2),p=i.length,d=o.length,f=q(e.session.backend.glContext.version),m=Ke(l.length),g=l.length,y=St(),{activationFunction:b,applyActivation:x}=Ct(r),w=s?`${Di(m,y,n[2].dims,l,!0)}`:"",v=u?`${fm(m,y,n,l)}`:"",T=u?"getAAtOutCoordsMatmul(i)":`getA(${cm(y,p)})`,k=u?"getBAtOutCoordsMatmul(i)":`getB(${pm(y,d)})`,I=`\n            ${v}\n            ${w}\n            ${b}\n            void main() {\n              ${u?"":`${m} rc =\n          getOutputCoords(); int lastDim = rc.${y[g-1]}; rc.${y[g-1]} =\n          rc.${y[g-2]}; rc.${y[g-2]} = lastDim;\n      `}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${h}; i++) {\n                vec4 a = ${T};\n                vec4 b = ${k};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${a}\n              ${x}\n              ${f.output} = value;\n            }`;return{...t,output:{dims:l,type:n[0].type,textureType:2},shaderSource:I,hasMain:!0}},io=(e,t,n)=>{let r=um(t.length>2,n.activationCacheKey);return{...r,get:()=>lm(e,r,t,n)}}})),nf,of=L((()=>{no(),ef(),Li(),nf=(e,t,n)=>{let r=t[0].dims,s=t[1].dims,a=Mr(r,s,n.dilations,n.pads,n.strides),i=e.run(Ql(e,t[0],t[1],a,n),[t[0]]),o=e.reshapePacked(t[1],[s[0],s[1]*s[2]*s[3]]),l=3===t.length?[o,i,t[2]]:[o,i],u=e.run(io(e,l,n),l);return e.reshapePacked(u,a)}})),dm,hm,af,Fi,$i=L((()=>{ae(),dm=e=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:e}),hm=(e,t,n,r,s,a)=>{let i=n.dims,o=r.dims,l=s.length,u=Fi(i,o,s,4),c=`\n        const int XC = ${i[1]};\n        const int XH = ${i[2]};\n        const int XW = ${i[3]};\n        const int KH = ${a.kernelShape[0]};\n        const int KW = ${a.kernelShape[1]};\n        const int dilationH = ${a.dilations[0]};\n        const int dilationW = ${a.dilations[1]};\n        const int strideH = ${a.strides[0]};\n        const int strideW = ${a.strides[1]};\n        const int padH = ${a.pads[0]};\n        const int padW = ${a.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${l}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${i.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;return{...t,output:{dims:u,type:n.type,textureType:4},shaderSource:c}},af=(e,t,n,r,s)=>{let a=dm(s.cacheKey);return{...a,get:()=>hm(e,a,t,n,r,s)}},Fi=(e,t,n,r=4)=>[n[0],n[2],n[3],Math.ceil(e[1]*t[2]*t[3]/r)]})),mm,bm,sf,uf=L((()=>{fe(),xe(),ae(),yr(),$i(),mm=(e,t)=>({name:"ConvDotProduct",inputNames:e?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:e?[0,4,0]:[0,4],cacheKey:t.activationCacheKey}),bm=(e,t,n,r,s)=>{let a=n[0].dims,i=n[1].dims,o=[i[0],Math.ceil(a[1]*i[2]*i[3]/4)],l=Fi(a,i,r),[u,c]=e.calculateTextureWidthAndHeight(o,4),h=U.computeStrides(l),[p,d]=e.calculateTextureWidthAndHeight(l,4),f=r.length,m=n.length<3?"0.0":"_B(b)",g=Math.ceil(a[1]*i[2]*i[3]/4),{activationFunction:y,applyActivation:b}=Ct(s),x=q(e.session.backend.glContext.version),w=`\n${y}\nfloat process(int indices[${f}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${h[0]} + im2col[1] * ${h[1]} + im2col[2] * ${h[2]};\n  int kernelOffset = indices[1] * ${o[1]};\n  float value = ${m};\n  for (int i = 0; i < ${g}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${p}, ${d});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${u}, ${c});\n    value += dot(${x.texture2D}(Im2Col, im2colCoords), ${x.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${b}\n  return value;\n}`;return{...t,output:{dims:r,type:n[0].type,textureType:0},shaderSource:w}},sf=(e,t,n,r)=>{let s=mm(t.length>2,r);return{...s,get:()=>bm(e,s,t,n,r)}}})),Mr,Ci,gm,ym,Tm,xm,ki,vm,no=L((()=>{Ge(),fe(),Zl(),of(),uf(),yr(),$i(),oo(),Mr=(e,t,n,r,s)=>{let a=e[0],i=e.slice(2),o=i.length,l=t[0],u=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=i.map(((e,t)=>e+r[t]+r[t+o])).map(((e,t)=>Math.floor((e-u[t]+s[t])/s[t])));return[a,l].concat(...c)},Ci=(e,t,n)=>(vm(t,n),gm(e,t,n)),gm=(e,t,n)=>{let r=xm(n,t),s=e.session.pack,a=1===r.kernelShape[0]&&1===r.kernelShape[1];return r.group>1?[e.run(Jl(e,t,r),t)]:a&&s?[ym(e,t,r)]:s&&4===t[0].dims.length&&1===t[0].dims[0]&&!a?[nf(e,t,r)]:[Tm(e,t,r)]},ym=(e,t,n)=>{let r=t[0].dims,s=t[1].dims,a=Mr(r,s,n.dilations,n.pads,n.strides),i=e.reshapeUnpacked(t[0],[r[1],r[2]*r[3]]),o=e.reshapeUnpacked(t[1],[s[0],s[1]]),l=t.length>2?[o,i,t[2]]:[o,i],u=e.run(Ei(l,n),l);return e.reshapeUnpacked(u,a)},Tm=(e,t,n)=>{let r=t[0].dims,s=t[1].dims,a=Mr(r,s,n.dilations,n.pads,n.strides),i=e.run(af(e,t[0],t[1],a,n),[t[0]]),o=3===t.length?[i,t[1],t[2]]:[i,t[1]];return e.run(sf(e,t,a,n),o)},xm=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length)for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e]);let r=e.pads.slice();dr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:n,pads:r,cacheKey:e.cacheKey}),s},ki=e=>{let t=e.attributes,n=Rr(t),r=t.getString("auto_pad","NOTSET"),s=t.getInts("dilations",[1,1]),a=t.getInt("group",1),i=t.getInts("kernel_shape",[]),o=t.getInts("pads",[0,0,0,0]),l=t.getInts("strides",[1,1]);return ee({autoPad:r,dilations:s,group:a,kernelShape:i,pads:o,strides:l,...n})},vm=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length||4!==e[1].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims[1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if("float32"!==e[0].type||"float32"!==e[1].type)throw new Error("Conv input(X,W) should be float tensor");if(3===e.length&&"float32"!==e[2].type)throw new Error("Conv input(bias) should be float tensor")}})),wm,_m,Om,lf,Im,Sm,Am,Pm,Em,Dm,ff,Lm,cf=L((()=>{Ge(),xe(),ae(),yr(),wm=(e,t,n,r,s,a)=>(e-1)*t+n+(r-1)*s+1-a,_m=(e,t,n,r,s)=>{let a=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=a,n[s]=e-a):"SAME_LOWER"===t&&(n[r]=e-a,n[s]=a)},Om=(e,t,n,r,s,a,i,o)=>{let l=e.length-2,u=0===o.length;for(let c=0;c<l;++c){let h=u?e[c+2]*a[c]:o[c],p=wm(e[c+2],a[c],s[c],t[c],n[c],h);_m(p,r,s,c,c+l),u&&o.push(a[c]*(e[c+2]-1)+i[c]+(t[c]-1)*n[c]+1-s[c]-s[c+l])}},lf=(e,t,n)=>(Lm(t,n),Im(e,t,n)),Im=(e,t,n)=>{let r=Dm(n,t);return[Em(e,t,r)]},Sm=(e,t)=>({name:"ConvTranspose",inputNames:e?["X","W","B"]:["X","W"],inputTypes:e?[0,0,0]:[0,0],cacheHint:t}),Am=(e,t,n,r)=>{let s=t.length>2?"getB(output_channel)":"0.0",a=t[0].dims,i=t[1].dims,o=i[1],l=i[0]/r.group,u=[t[0].dims[0],t[1].dims[1]*r.group,...r.outputShape],c=q(e.session.backend.glContext.version),{activationFunction:h,applyActivation:p}=Ct(r),d=`\n  const ivec2 strides = ivec2(${r.strides[0]}, ${r.strides[1]});\n  const ivec2 pads = ivec2(${r.pads[0]}, ${r.pads[1]});\n  ${h}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${o};\n    int wOutChannel = output_channel - group_id * ${o};\n\n    float value = ${s};\n    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {\n      int input_channel = group_id * ${l} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${i[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${i[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${r.dilations[0]}, wHOff * ${r.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${a[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${a[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${p}\n    ${c.output} = vec4(value, .0, .0, .0);\n  }\n`;return{...n,output:{dims:u,type:t[0].type,textureType:0},shaderSource:d,hasMain:!0}},Pm=(e,t,n)=>{let r=Sm(t.length>2,n.cacheKey);return{...r,get:()=>Am(e,t,r,n)}},Em=(e,t,n)=>e.run(Pm(e,t,n),t),Dm=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length)for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e]);let r=e.pads.slice(),s=e.outputShape.slice(),a=t[0].dims;Om(a,n,e.dilations,e.autoPad,r,e.strides,e.outputPadding,s);let i=Object.assign({},e);return Object.assign(i,{kernelShape:n,pads:r,outputShape:s,cacheKey:e.cacheKey}),i},ff=e=>{let t=e.attributes,n=Rr(t),r=t.getString("auto_pad","NOTSET"),s=t.getInts("dilations",[1,1]),a=t.getInt("group",1),i=t.getInts("kernel_shape",[]),o=t.getInts("output_padding",[0,0]),l=t.getInts("output_shape",[]),u=t.getInts("pads",[0,0,0,0]),c=t.getInts("strides",[1,1]);return ee({autoPad:r,dilations:s,group:a,kernelShape:i,outputPadding:o,outputShape:l,pads:u,strides:c,...n})},Lm=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length||4!==e[1].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims[1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");let r=e[0].dims.length-2;if(t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r)throw new Error(`output_padding should be ${r}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape");if("float32"!==e[0].type||"float32"!==e[1].type)throw new Error("ConvTranspose input(X,W) should be float tensor");if(3===e.length&&"float32"!==e[2].type)throw new Error("ConvTranspose input(bias) should be float tensor")}})),pf,Tr,df,Fm,hf,$m,Cm,km,ao=L((()=>{Ge(),fe(),ae(),pf={name:"Transpose",inputNames:["A"],inputTypes:[0]},Tr=(e,t,n)=>(km(t),[e.run({...pf,cacheHint:n.cacheKey,get:()=>Fm(e,t[0],n.perm)},t)]),df=e=>ee({perm:e.attributes.getInts("perm",[])}),Fm=(e,t,n)=>{let r=t.dims;n=hf(r,n);let s=$m(r,n),a=r.length,i=`\n      ${Cm("perm",n,a)}\n      float process(int indices[${a}]) {\n        int a[${a}];\n        perm(a, indices);\n        return _A(a);\n      }`;return{...pf,output:{dims:s,type:t.type,textureType:0},shaderSource:i}},hf=(e,t)=>(t&&t.length!==e.length&&(t=[...e.keys()].reverse()),t),$m=(e,t)=>(t=hf(e,t),U.sortBasedOnPerm(e,t)),Cm=(e,t,n)=>{let r=[];r.push(`void ${e}(out int a[${n}], int src[${n}]) {`);for(let e=0;e<n;++e)r.push(`\ta[${t[e]}]=src[${e}];`);return r.push("\t}"),r.join("\n")},km=e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("input should be float tensor")}})),mf,bf,Bm,gf=L((()=>{ao(),mf=(e,t,n)=>{Bm(t);let r=n.blocksize,s=r*r,a="DCR"===n.mode?[0,3,4,1,5,2]:[0,1,4,2,5,3],i="DCR"===n.mode?[t[0].dims[0],r,r,t[0].dims[1]/s,t[0].dims[2],t[0].dims[3]]:[t[0].dims[0],t[0].dims[1]/s,r,r,t[0].dims[2],t[0].dims[3]],o=e.reshapeUnpacked(t[0],i),l={perm:a,cacheKey:`${a}`},[u]=Tr(e,[o],l),c=[t[0].dims[0],t[0].dims[1]/s,t[0].dims[2]*r,t[0].dims[3]*r];return[e.reshapeUnpacked(u,c)]},bf=e=>{let t=e.attributes.getInt("blocksize");if(t<1)throw new Error(`blocksize must be >= 1, but got : ${t} for DepthToSpace`);let n=e.attributes.getString("mode","DCR");if("DCR"!==n&&"CRD"!==n)throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:t}},Bm=e=>{if(1!==e.length)throw new Error(`DepthToSpace expect 1 inputs, but got ${e.length}`);if("string"===e[0].type||4!==e[0].dims.length)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}})),yf,Tf,Nm,xf=L((()=>{fe(),yf=(e,t,n)=>{Nm(t,n);let r=U.flattenShape(t[0].dims,n);return[e.reshapeUnpacked(t[0],r)]},Tf=e=>e.attributes.getInt("axis",1),Nm=(e,t)=>{if(!e||1!==e.length)throw new Error("Flatten requires 1 input.");let n=e[0].dims.length;if(0===n)throw new Error("scalar tensor is not supported.");if(t<-n||t>n)throw new Error("Invalid axis");if("string"===e[0].type)throw new Error("string tensor is not supported.")}})),tr,pn=L((()=>{tr=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]})),vf,wf,Rm,Mm,Gm,Um,_f=L((()=>{Ge(),pn(),fe(),ae(),vf=(e,t,n)=>(Um(t,n.axis),[e.run(Gm(e,t,n),t)]),wf=e=>ee({axis:e.attributes.getInt("axis",0)}),Rm={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},Mm=(e,t,n,r)=>{let s=n[0].dims.slice(),a=n[1].dims.slice(),i=new Array(s.length+a.length-1);r=U.normalizeAxis(r,s.length);let o=[];for(let e=0;e<i.length;e++)e<r?(i[e]=s[e],o.push(`inputIdx[${e}] = outputIdx[${e}];`)):e<r+a.length?(i[e]=a[e-r],o.push(`indexDataIdx[${e-r}] = outputIdx[${e}];`)):(i[e]=s[e-a.length+1],o.push(`inputIdx[${e-a.length+1}] = outputIdx[${e}];`));let l=`\n      float process(int outputIdx[${i.length||1}]) {\n        int inputIdx[${s.length}];\n        int indexDataIdx[${a.length||1}];\n        indexDataIdx[0] = 0;\n        ${o.join("\n        ")}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${r}] = idx < 0 ? idx + ${s[r]} : idx;\n        return _A(inputIdx);\n      }`;return{...t,output:{dims:i,type:n[0].type,textureType:0},shaderSource:l}},Gm=(e,t,n)=>{let r={...Rm,cacheHint:n.cacheKey};return{...r,get:()=>Mm(e,r,t,n.axis)}},Um=(e,t)=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.");let n=e[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(t<-n||t>n-1)throw new Error("Invalid axis.");if(-1===tr.indexOf(e[0].type))throw new Error("Invaid input type.");if("int32"!==e[1].type&&"int16"!==e[1].type)throw new Error("Invaid input type.")}})),Bi,Of,If,Sf,zm,Vm,Wm,Af=L((()=>{Ge(),fe(),ae(),Bi=(e,t,n)=>(Wm(t,n),[e.run(zm(t,n),t)]),Of=(e,t)=>{let n=0!==e.attributes.getInt("transA",0),r=0!==e.attributes.getInt("transB",0),s=e.attributes.getFloat("alpha",1),a=e.attributes.getFloat("beta",1);return ee({transA:n,transB:r,alpha:s,beta:a,isOptionalC:t})},If=e=>Of(e,!1),Sf=e=>Of(e,!0),zm=(e,t)=>{let n={name:"Gemm",inputNames:3===e.length?["A","B","C"]:["A","B"],inputTypes:3===e.length?[0,0,0]:[0,0],key:t.cacheKey};return{...n,get:()=>Vm(n,e,t)}},Vm=(e,t,n)=>{let r=t[0].dims.slice(),s=t[1].dims.slice(),[a,i]=Xn.getShapeOfGemmResult(r,n.transA,s,n.transB,3===t.length?t[2].dims:void 0),o=[a,i];if(!o)throw new Error("Can't use gemm on the given tensors");let l=r[r.length-1],u="";n.transA&&(l=r[0]),n.transA&&n.transB?u="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?u="value += _A_T(a) * _B(b);":!n.transA&&n.transB?u="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(u="value += _A(a) * _B(b);");let c=o.length,h=`\n      float process(int indices[${c}]) {\n          int a[${c}];\n          int b[${c}];\n          ${3===t.length?`int c[${t[2].dims.length}];`:""}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${3===t.length?"bcastIndices_C(indices, c);":""}\n\n          float value = 0.0;\n          for (int k=0; k<${l}; ++k) {\n              a[${c-1}] = k;\n              b[${c-2}] = k;\n              ${u}\n          }\n\n          value = value * alpha;\n          ${3===t.length?"value += beta * _C(c);":""}\n          return value;\n      }`;return{...e,output:{dims:o,type:t[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:h}},Wm=(e,t)=>{if(!e)throw new Error("Input is missing");if(t.isOptionalC&&(e.length<2||e.length>3))throw new Error("Invaid input shape.");if(!t.isOptionalC&&3!==e.length)throw new Error("Gemm requires 3 inputs");if(3===e.length&&1!==e[2].dims.length&&2!==e[2].dims.length)throw new Error("Invalid input shape of C");if("float32"!==e[0].type&&"float64"!==e[0].type||"float32"!==e[1].type&&"float64"!==e[1].type||3===e.length&&"float32"!==e[2].type&&"float64"!==e[2].type)throw new Error("Invalid input type.");if(e[0].type!==e[1].type||3===e.length&&e[0].type!==e[2].type)throw new Error("Input types are mismatched")}})),Pf,Ef,Hm,qm,jm,Ym,Xm,Df=L((()=>{Ge(),ae(),Pf=(e,t,n)=>(Xm(t),[e.run(jm(e,t,n),t)]),Ef=e=>{let t=e.attributes.getFloat("scale"),n=e.attributes.getFloats("bias");return ee({scale:t,bias:n})},Hm={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},qm=(e,t,n,r)=>{let s=n[0].dims.slice(),a=s.length,i=`\n      ${Ym(r.bias.length)}\n      float process(int indices[${a}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;return{...t,output:{dims:s,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:r.bias.length,data:r.bias},{name:"scale",type:"float",data:r.scale}],shaderSource:i}},jm=(e,t,n)=>{let r={...Hm,cacheHint:n.cacheKey};return{...r,get:()=>qm(e,r,t,n)}},Ym=e=>{let t=[`float getBias(float bias[${e}], int channel) {`];for(let n=0;n<e;++n)0===n?t.push(`\tif (channel == ${n}) { return bias[${n}]; }`):n===e-1?t.push(`\telse { return bias[${n}]; }`):t.push(`\telse if (channel == ${n}) { return bias[${n}]; }`);return t.push("\t}"),t.join("\n")},Xm=e=>{if(!e||1!==e.length)throw new Error("ImageScaler requires 1 input.");if(4!==e[0].dims.length)throw new Error("Invalid input shape.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.")}})),Ff,$f,Lf,Km,Jm,Zm,Qm,eb,tb,Cf=L((()=>{xe(),ae(),Ff=(e,t,n)=>{tb(t);let r=e.run(Jm(t[0]),t);return[e.run(eb(e,t[0],n,r.dims),[t[0],r,t[1],t[2]])]},$f=e=>e.attributes.getFloat("epsilon",1e-5),Lf={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},Km=(e,t)=>{let n=t.dims.slice(),r=n[1],s=n[2]*n[3],a=[n[0],r],i=`\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${n[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${n[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${s});\n        temp = 0.0;\n        for(int a2=0; a2<${n[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${n[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${s});\n\n        return v;\n      }`;return{...e,output:{dims:a,type:t.type,textureType:4},shaderSource:i}},Jm=e=>({...Lf,get:()=>Km(Lf,e)}),Zm={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},Qm=(e,t,n,r,s)=>{let a=q(e.session.backend.glContext.version),[i,o]=e.calculateTextureWidthAndHeight(s,4),[l,u]=[i/4,o],c=`\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${l}, ${u});\n        return ${a.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;return{...t,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:r}],shaderSource:c}},eb=(e,t,n,r)=>{let s={...Zm,cacheHint:`${n}`};return{...s,get:()=>Qm(e,s,t,n,r)}},tb=e=>{if(!e||3!==e.length)throw new Error("InstanceNormalization requires 3 inputs.");let t=e[0],n=e[1],r=e[2];if(t.dims.length<3||1!==n.dims.length||1!==r.dims.length)throw new Error("Invalid input shape.");if(n.dims[0]!==t.dims[1]||r.dims[0]!==t.dims[1])throw new Error("Input shapes are mismatched.");if("float32"!==t.type&&"float64"!==t.type||"float32"!==n.type&&"float64"!==n.type||"float32"!==r.type&&"float64"!==r.type)throw new Error("Invalid input type.");if(4!==e[0].dims.length)throw new Error("Only support 4-D input shape.")}}));function rb(e,t){let n=e[0].dims[1],r=e[0].dims.length,s=-Math.floor((t.size-1)/2),a=Math.ceil((t.size-1)/2),i=`float(${t.alpha}) / float(${t.size})`,o=`\n    float process(int indices[${r}]) {\n        int c = indices[1];\n        float x = _X(indices);\n        float square_sum = 0.0;\n\n        for (int i = ${s}; i <= ${a}; i++) {\n          int idx = c + i;\n          if (c >= 0 && c < ${n}) {\n            indices[1] = idx;\n            float j = _X(indices);\n            square_sum += j * j;\n          }\n        }\n        return x / pow(float(${t.bias}) + ${i} * square_sum, float(${t.beta}));\n    }`;return{...Nf,cacheHint:t.cacheKey,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:o}}function nb(e,t){return{...Nf,cacheHint:t.cacheKey,get:()=>rb(e,t)}}var kf,Bf,Nf,ob,Rf=L((()=>{Ge(),ae(),kf=(e,t,n)=>(ob(t),[e.run(nb(t,n),t)]),Bf=e=>{let t=e.attributes.getFloat("alpha",1e-4),n=e.attributes.getFloat("beta",.75),r=e.attributes.getFloat("bias",1),s=e.attributes.getInt("size");return ee({alpha:t,beta:n,bias:r,size:s})},Nf={name:"LRN",inputNames:["X"],inputTypes:[0]},ob=e=>{if(!e||1!==e.length)throw new Error("LRN requires 1 input.");if(4!==e[0].dims.length)throw new Error('currently only support LRN for input with "NCHW" format');if("float32"!==e[0].type)throw new Error("input should be float type")}})),ib,Ni,Mf,Gf,Uf,ab,sb,ub,lb,fb,cb,pb,db,zf=L((()=>{Ge(),fe(),xe(),ae(),ib={name:"Pad",inputNames:["A"],inputTypes:[0]},Ni=(e,t,n)=>(ub(t),[e.run({...ib,cacheHint:n.cacheKey,get:()=>sb(e,t[0],n)},t)]),Mf=e=>{let t=e.attributes.getString("mode","constant"),n=e.attributes.getFloat("value",0),r=e.attributes.getInts("pads");return ee({mode:t,value:n,pads:r})},Gf=(e,t,n)=>{lb(t);let r=ab(e,t,n);return Ni(e,[t[0]],r)},Uf=e=>e.attributes.getString("mode","constant"),ab=(e,t,n)=>{if(!e.session.isInitializer(t[1].dataId)||t.length>=3&&!e.session.isInitializer(t[2].dataId))throw new Error("dynamic pad attributes are not allowed");let r=Array.from(t[1].integerData),s=t.length>=3?t[2].floatData[0]:0;return ee({mode:n,pads:r,value:s})},sb=(e,t,n)=>{let r=U.padShape(t.dims.slice(),n.pads),s=r.length,a=`\n      ${fb(e,t,n)}\n      float process(int[${s}] indices) {\n          return padA(indices);\n      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:r,type:t.type,textureType:0},shaderSource:a}},ub=e=>{if(!e||1!==e.length)throw new Error("Pad requires 1 input");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.")},lb=e=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Pad requires 2 or 3 inputs");if("int32"!==e[1].type)throw new Error("Invalid input type.");if(e.length>=3&&"string"===e[2].type)throw new Error("Invalid input type.")},fb=(e,t,n)=>{let r=q(e.session.backend.glContext.version),[s,a]=e.calculateTextureWidthAndHeight(t.dims,0),i=U.computeStrides(t.dims);switch(n.mode){case"constant":return cb(r,t.dims,i,s,a,n.pads,n.value);case"reflect":return pb(r,t.dims,i,s,a,n.pads);case"edge":return db(r,t.dims,i,s,a,n.pads);default:throw new Error("Invalid mode")}},cb=(e,t,n,r,s,a,i)=>{let o=t.length,l="";for(let e=o-1;e>=0;--e)l+=`\n        k = m[${e}] - ${a[e]};\n        if (k < 0)  return constant;\n        if (k >= ${t[e]}) return constant;\n        offset += k * ${n[e]};\n        `;return`\n      float padA(int m[${o}]) {\n        const float constant = float(${i});\n        int offset = 0;\n        int k = 0;\n        ${l}\n        vec2 coords = offsetToCoords(offset, ${r}, ${s});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `},pb=(e,t,n,r,s,a)=>{let i=t.length,o="";for(let e=i-1;e>=0;--e)o+=`\n        k = m[${e}] - ${a[e]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2*(t[e]-1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${t[e]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${n[e]};\n        `;return`\n      float padA(int m[${i}]) {\n        int offset = 0;\n        int k = 0;\n        ${o}\n        vec2 coords = offsetToCoords(offset, ${r}, ${s});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `},db=(e,t,n,r,s,a)=>{let i=t.length,o="";for(let e=i-1;e>=0;--e)o+=`\n        k = m[${e}] - ${a[e]};\n        if (k < 0)  k = 0;\n        if (k >= ${t[e]}) k = ${t[e]-1};\n        offset += k * ${n[e]};\n      `;return`\n      float padA(int m[${i}]) {\n        int offset = 0;\n        int k = 0;\n        ${o}\n        vec2 coords = offsetToCoords(offset, ${r}, ${s});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `}})),Wf,Hf,qf,jf,Yf,Xf,Kf,Jf,Zf,hb,Vf,Qf,uo,ec,so,mb,tc=L((()=>{Ge(),fe(),ae(),Wf=(e,t,n)=>{uo(t);let r={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[e.run({...r,get:()=>qf(t,r,!1,n)},t)]},Hf=e=>{let t=e.attributes.getString("auto_pad","NOTSET"),n=e.attributes.getInt("ceil_mode",0),r=0!==e.attributes.getInt("count_include_pad",0),s=e.attributes.getInts("kernel_shape"),a=e.attributes.getInts("strides",[]),i=e.attributes.getInts("pads",[]);if(0!==n)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return ee({autoPad:t,ceilMode:n,countIncludePad:r,kernelShape:s,strides:a,pads:i})},qf=(e,t,n,r)=>{let[s,a]=Zf(e,r,n),i=U.size(s.kernelShape),o="";s.countIncludePad?o+=`value /= float(${i});`:o+=`value /= float(${i} - pad);`;let l=`\n        ${ec(e[0].dims,s,"value += _X(x);",o,"0.0")}\n      `;return{...t,output:{dims:a,type:e[0].type,textureType:0},shaderSource:l}},jf=(e,t,n)=>{uo(t);let r={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[e.run({...r,get:()=>qf(t,r,!0,n)},t)]},Yf=e=>{let t=0!==e.attributes.getInt("count_include_pad",0);return ee({autoPad:"",ceilMode:0,countIncludePad:t,kernelShape:[],strides:[],pads:[]})},Xf=(e,t,n)=>{uo(t);let r={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[e.run({...r,get:()=>Jf(t,r,!1,n)},t)]},Kf=e=>{let t=e.attributes.getString("auto_pad","NOTSET"),n=e.attributes.getInt("ceil_mode",0),r=e.attributes.getInts("kernel_shape"),s=e.attributes.getInts("strides",[]),a=e.attributes.getInts("pads",[]),i=e.attributes.getInt("storage_order",0),o=e.attributes.getInts("dilations",[]);if(0!==i)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==n)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return ee({autoPad:t,ceilMode:n,countIncludePad:!1,kernelShape:r,strides:s,pads:a,storageOrder:i,dilations:o})},Jf=(e,t,n,r)=>{let[s,a]=Zf(e,r,n),i=`\n      ${ec(e[0].dims,s,"\n      value = max(_X(x), value);\n    ","","-1e5")}\n    `;return{...t,output:{dims:a,type:e[0].type,textureType:0},shaderSource:i}},Zf=(e,t,n)=>{let r=e[0].dims.slice(),s=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),i=t.strides.slice(),o=s?t.dilations.slice():[],l=t.pads.slice();dr.adjustPoolAttributes(n,r,a,i,o,l);let u=dr.computePoolOutputShape(n,r,i,o,a,l,t.autoPad),c=Object.assign({},t);return s?Object.assign(c,{kernelShape:a,strides:i,pads:l,dilations:o,cacheKey:t.cacheKey}):Object.assign(c,{kernelShape:a,strides:i,pads:l,cacheKey:t.cacheKey}),[c,u]},hb={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Vf={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},Qf=(e,t)=>(uo(t),[e.run({...Vf,get:()=>Jf(t,Vf,!0,hb)},t)]),uo=e=>{if(!e||1!==e.length)throw new Error("Pool ops requires 1 input.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.")},ec=(e,t,n,r,s)=>{let a=e.length;if(t.kernelShape.length<=2){let i=t.kernelShape[t.kernelShape.length-1],o=t.strides[t.strides.length-1],l=t.pads[t.pads.length/2-1],u=t.pads[t.pads.length-1],c=e[a-1],h="",p="",d="";if(h=l+u!==0?`\n          for (int i = 0; i < ${i}; i++) {\n            x[${a} - 1] = indices[${a} - 1] * ${o} - ${l} + i;\n            if (x[${a} - 1] < 0 || x[${a} - 1] >= ${c}) {\n              pad++;\n              continue;\n            }\n            ${n}\n          }`:`\n          for (int i = 0; i < ${i}; i++) {\n            x[${a} - 1] = indices[${a} - 1] * ${o} - ${l} + i;\n            ${n}\n          }`,2===t.kernelShape.length){let n=t.kernelShape[t.kernelShape.length-2],r=t.strides[t.strides.length-2],s=t.pads[t.pads.length/2-2],o=t.pads[t.pads.length-2],l=e[a-2];p=s+o!==0?`\n            for (int j = 0; j < ${n}; j++) {\n              x[${a} - 2] = indices[${a} - 2] * ${r} - ${s} + j;\n              if (x[${a} - 2] < 0 || x[${a} - 2] >= ${l}) {\n                pad+= ${i};\n                continue;\n              }\n          `:`\n            for (int j = 0; j < ${n}; j++) {\n              x[${a} - 2] = indices[${a} - 2] * ${r} - ${s} + j;\n            `,d="\n          }\n        "}return`\n        float process(int indices[${a}]) {\n          int x[${a}];\n          copyVec(indices, x);\n\n          float value = ${s};\n          int pad = 0;\n          ${p}\n          ${h}\n          ${d}\n          ${r}\n          return value;\n        }\n      `}{let i=U.size(t.kernelShape),o=U.computeStrides(t.kernelShape),l=o.length,u=t.pads.length,c=mb(l),h=so(e,"inputDims"),p=so(t.pads,"pads"),d=so(o,"kernelStrides"),f=so(t.strides,"strides"),m="";return m=t.pads.reduce(((e,t)=>e+t))?`\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${n}\n          }`:`\n          }\n          ${n}\n        `,`\n        ${c}\n        float process(int indices[${a}]) {\n          int x[${a}];\n          copyVec(indices, x);\n          int offset[${l}];\n          int pads[${u}];\n          int inputDims[${a}];\n          int kernelStrides[${l}];\n          int strides[${l}];\n          ${p}\n          ${h}\n          ${f}\n          ${d}\n\n          float value = ${s};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${i}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${a} - ${l}; j < ${a}; j++) {\n              x[j] = indices[j] * strides[j - ${a} + ${l}]\n                + offset[j - ${a} + ${l}] - pads[j - 2];\n              ${m}\n          }\n          ${r}\n\n          return value;\n        }\n      `}},so=(e,t)=>{let n="";for(let r=0;r<e.length;r++)n+=`\n      ${t}[${r}] = ${e[r]};\n    `;return n},mb=e=>`\n  void offsetToIndices(int offset, int[${e}] strides, out int[${e}] indices) {\n    if (${e} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${e} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${e} - 1] = offset;\n  }`})),xr,rr,bb,gb,rc,nc,oc,ic,ac,sc,uc,lc=L((()=>{Ge(),pn(),fe(),ae(),xr=(e,t,n,r,s)=>{gb(t);let a={name:r,inputNames:["A"],inputTypes:[0]};return[e.run({...a,cacheHint:n.cacheKey,get:()=>bb(e,t,n,r,s,a)},t)]},rr=e=>{let t=e.attributes.getInts("axes",[]),n=1===e.attributes.getInt("keepdims",1);return ee({axes:t,keepDims:n})},bb=(e,t,n,r,s,a)=>{let i=[],o=t[0].dims.length||1,l=[],u=U.normalizeAxes(n.axes,t[0].dims.length),c=s(t,u),h=c[1];for(let e=0;e<t[0].dims.length;e++)u.indexOf(e)>=0||0===u.length?(n.keepDims&&i.push(1),h=`\n          for(int j${e} = 0; j${e} < ${t[0].dims[e]}; j${e}++) {\n            inputIdx[${e}] = j${e};\n            ${h}\n          }`):(l.push(`inputIdx[${e}] = outputIdx[${i.length}];`),i.push(t[0].dims[e]));let p=`\n      float process(int outputIdx[${i.length||1}]) {\n        float value;                 // final result\n        int inputIdx[${o}];      // addressing input data\n        ${l.join("\n")}\n        ${c[0]}       // init ops for reduce max/min\n        ${h}\n        ${c[2]}       // final computation for reduce mean\n        return value;\n      }`;return{...a,output:{dims:i,type:t[0].type,textureType:0},shaderSource:p}},gb=e=>{if(!e||1!==e.length)throw new Error("Reduce op requires 1 input.");if(-1===tr.indexOf(e[0].type))throw new Error("Invalid input type.")},rc=(e,t,n)=>xr(e,t,n,"ReduceSum",(()=>["value = 0.0;","value += _A(inputIdx);",""])),nc=(e,t,n)=>xr(e,t,n,"ReduceMean",((e,t)=>{let n=1;for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&(n*=e[0].dims[r]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${n}.;`]})),oc=(e,t,n)=>xr(e,t,n,"ReduceMax",((e,t)=>{let n=[];for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&n.push(`inputIdx[${r}] = 0;`);return[`${n.join("\n")}\nvalue = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]})),ic=(e,t,n)=>xr(e,t,n,"ReduceMin",((e,t)=>{let n=[];for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&n.push(`inputIdx[${r}] = 0;`);return[`${n.join("\n")}\nvalue = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]})),ac=(e,t,n)=>xr(e,t,n,"ReduceProd",(()=>["value = 1.0;","value *= _A(inputIdx);",""])),sc=(e,t,n)=>xr(e,t,n,"ReduceLogSum",(()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"])),uc=(e,t,n)=>xr(e,t,n,"ReduceLogSumSquare",(()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""]))})),fc,cc=L((()=>{fe(),fc=(e,t)=>{let n=U.calculateReshapedDims(t[0].dims,t[1].integerData);return e.session.pack?[e.reshapePacked(t[0],n)]:[e.reshapeUnpacked(t[0],n)]}})),pc,Ri,dc,hc,dn,yb,Mi,lo,Gi=L((()=>{Ge(),xe(),ae(),pc={name:"Upsample",inputNames:["X"],inputTypes:[0]},Ri=(e,t,n)=>(Mi(t,n),[e.run({...pc,cacheHint:n.cacheKey,get:()=>yb(e,t,n)},t)]),dc=e=>dn(e,7),hc=e=>dn(e,9),dn=(e,t)=>{let n=t>=10,r=e.attributes.getString("mode","nearest");if("nearest"!==r&&"linear"!==r&&(t<11||"cubic"!==r))throw new Error(`unrecognized mode: ${r}`);let s=[];t<9&&(s=e.attributes.getFloats("scales"),lo(s,r,n));let a=e.attributes.getFloat("extrapolation_value",0),i=t>10?e.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(-1===["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(i))throw new Error(`coordinate_transform_mode '${i}' is not supported`);let o="tf_crop_and_resize"===i,l=o,u="nearest"===r&&t>=11?e.attributes.getString("nearest_mode","round_prefer_floor"):"";if(-1===["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(u))throw new Error(`nearest_mode '${u}' is not supported`);let c=e.attributes.getFloat("cubic_coeff_a",-.75),h=0!==e.attributes.getInt("exclude_outside",0);if(h&&"cubic"!==r)throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let p=t<11||"nearest"===r&&"asymmetric"===i&&"floor"===u,d=0,f=0,m=0;return t>10?e.inputs.length>2?(d=1,f=2,m=3):(f=1,m=2):9===t&&(f=1),ee({opset:t,isResize:n,mode:r,scales:s,extrapolationValue:a,coordinateTransformMode:i,useExtrapolation:l,needRoiInput:o,nearestMode:u,cubicCoefficientA:c,excludeOutside:h,useNearest2xOptimization:p,roiInputIdx:d,scalesInputIdx:f,sizesInputIdx:m})},yb=(e,t,n)=>{let r=q(e.session.backend.glContext.version),[s,a]=e.calculateTextureWidthAndHeight(t[0].dims,0),i=t[0].dims.map(((e,t)=>Math.floor(e*n.scales[t]))),[o,l]=e.calculateTextureWidthAndHeight(i,0),u=i.length,c=new Array(u),h=new Array(u),p=`\n      int output_pitches[${u}];\n      int input_pitches[${u}];\n      `;for(let e=u-1;e>=0;e--)c[e]=e===u-1?1:c[e+1]*i[e+1],h[e]=e===u-1?1:h[e+1]*t[0].dims[e+1],p+=`\n        output_pitches[${e}] = ${c[e]};\n        input_pitches[${e}] = ${h[e]};\n        `;let d=`\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${s}, ${a});\n        float value = getColorAsFloat(${r.texture2D}(X, coords));\n        return value;\n      }\n      `,f="nearest"===n.mode?`\n    ${d}\n    float process(int indices[${u}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${o}, ${l});\n\n      ${p}\n\n      int d, m;\n      for (int dim = 0; dim < ${u}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }`:4===u?`\n    ${d}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${o}, ${l});\n\n      ${p}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${t[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }`:`\n    ${d}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${o}, ${l});\n\n      ${p}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${t[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;return{...pc,output:{dims:i,type:t[0].type,textureType:0},shaderSource:f,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map((e=>Math.ceil(e)))}]}},Mi=(e,t)=>{if(!e||t.opset<9&&1!==e.length||t.opset>=9&&t.opset<11&&2!==e.length||t.opset>=11&&e.length<2)throw new Error("invalid inputs.");if(t.scales.length>0&&e[0].dims.length!==t.scales.length)throw new Error("Invalid input shape.");if("string"===e[0].type)throw new Error("Invalid input tensor types.")},lo=(e,t,n)=>{if(n){for(let t of e)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of e)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if(!("linear"!==t&&"cubic"!==t||2===e.length||4===e.length&&1===e[0]&&1===e[1]))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}})),Ui,zi,mc,bc,Tb,xb,vb,wb,gc=L((()=>{xe(),ae(),Ft(),gr(),Gi(),Ui={name:"Resize",inputNames:["A"],inputTypes:[2]},zi=(e,t,n)=>(Mi(t,n),[e.run({...Ui,cacheHint:n.cacheKey,get:()=>Tb(e,t,n)},t)]),mc=e=>dn(e,10),bc=e=>dn(e,11),Tb=(e,t,n)=>{let r=q(e.session.backend.glContext.version),[s,a]=xb(t,n);if(s.every((e=>1===e))&&"tf_crop_and_resize"!==n.coordinateTransformMode)return{...Ui,output:{dims:a,type:t[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {\n                    vec4 v = ${r.texture2D}(X, TexCoords);\n                    ${r.output} = v;\n                }`};let i=a.length;if(i<2)throw new Error(`output dimension should be at least 2, but got ${i}`);let o=a[i-2],l=a[i-1],u=t[0].dims;if(i!==u.length)throw new Error(`output dimension should match input ${u.length}, but got ${i}`);let c=u[i-2],h=u[i-1],p=s[i-2],d=s[i-1],f="";if("linear"!==n.mode)throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":f="\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                ";break;case"half_pixel":f="\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                ";break;case"pytorch_half_pixel":f=`\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${o}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${o}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;break;case"align_corners":f=`\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${l}.0 - 1.0, ${o}.0 - 1.0, ${l}.0 - 1.0,\n                            ${o}.0 - 1.0);\n                        vec4 original = vec4(${h}.0 - 1.0, ${c}.0 - 1.0, ${h}.0 - 1.0,\n                            ${c}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let m=Ke(i),g=`\n            const vec2 inputWH = vec2(${c}.0, ${h}.0);\n            const vec4 scaleWHWH = vec4(float(${p}), float(${d}), float(${p}), float(${d}));\n            ${$t()}\n            ${f}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${m} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${o-1};\n                bool hasNextCol = rc.z < ${l-1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${r.output} = vec4(newValue);\n            }\n        `;return{...Ui,output:{dims:a,type:t[0].type,textureType:2},hasMain:!0,shaderSource:g}},xb=(e,t)=>{let n,r=e[0].dims,s=t.scales;if(0===s.length){let a=e[t.scalesInputIdx];if(a&&0!==a.size){if(e[t.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");s=vb(a,t.mode,t.isResize)}else{let a=e[t.sizesInputIdx];if(!a||0===a.size)throw new Error("Either scales or sizes MUST be provided as input.");n=Array.from(a.integerData),s=wb(n,r,t.mode,t.isResize)}}else if(e[t.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let a=n||r.map(((e,t)=>Math.floor(e*s[t])));return[s,a]},vb=(e,t,n)=>{let r=Array.from(e.floatData);return lo(r,t,n),r},wb=(e,t,n,r)=>{let s=t.length,a=new Array(s);for(let n=0,r=s;n<r;n++)if(0===t[n]){if(0!==e[n])throw new Error("Input dim is zero but required output dim is non-zero.");a[n]=1}else a[n]=e[n]/t[n];return lo(a,n,r),a}})),yc,_b,Tc=L((()=>{br(),yc=(e,t)=>(_b(t),[new Fe([t[0].dims.length],"int32",void 0,void 0,new Int32Array(t[0].dims))]),_b=e=>{if(!e||1!==e.length)throw new Error("Shape requires 1 input.")}})),Vi,xc,vc,wc,Ob,_c,Ib,Sb,Oc=L((()=>{Ge(),pn(),fe(),ae(),Vi={name:"Slice",inputNames:["A"],inputTypes:[0]},xc=(e,t,n)=>(Ob(t),[e.run({...Vi,cacheHint:n.cacheKey,get:()=>wc(e,t[0],n)},t)]),vc=e=>{let t=e.attributes.getInts("starts"),n=e.attributes.getInts("ends"),r=e.attributes.getInts("axes",[]);return ee({starts:t,ends:n,axes:r})},wc=(e,t,n)=>{let r=0===n.axes.length?t.dims.slice(0).map(((e,t)=>t)):n.axes,s=U.normalizeAxes(r,t.dims.length),a=n.starts.map(((e,n)=>e>t.dims[s[n]]-1?t.dims[s[n]]:U.normalizeAxis(e,t.dims[s[n]]))),i=n.ends.map(((e,n)=>e>t.dims[s[n]]-1?t.dims[s[n]]:U.normalizeAxis(e,t.dims[s[n]]))),o=t.dims.slice(),l=[];for(let e=0;e<s.length;e++)o[s[e]]=i[e]-a[e],a[e]>0&&l.push(`outputIdx[${s[e]}] += ${a[e]};`);let u=`\n      float process(int outputIdx[${o.length}]) {\n        ${l.join("\n      ")}\n        return _A(outputIdx);\n      }`;return{...Vi,output:{dims:o,type:t.type,textureType:0},shaderSource:u}},Ob=e=>{if(!e||1!==e.length)throw new Error("Slice requires 1 input.");if(-1===tr.indexOf(e[0].type))throw new Error("Invalid input type.")},_c=(e,t)=>{Sb(t);let n=Ib(e,t);return[e.run({...Vi,cacheHint:n.cacheKey,get:()=>wc(e,t[0],n)},[t[0]])]},Ib=(e,t)=>{if(!e.session.isInitializer(t[1].dataId)||!e.session.isInitializer(t[2].dataId)||t.length>=4&&!e.session.isInitializer(t[3].dataId)||t.length>=5&&!e.session.isInitializer(t[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(t.length>=5&&t[4].integerData.some((e=>1!==e)))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(t[1].integerData),r=Array.from(t[2].integerData),s=t.length>=4?Array.from(t[3].integerData):[];return{starts:n,ends:r,axes:s,cacheKey:`${s};${n};${r}`}},Sb=e=>{if(!e||e.length<3||e.length>5)throw new Error("Invalid input number.");if("int32"!==e[1].type||1!==e[1].dims.length)throw new Error("Invalid input type.");if("int32"!==e[2].type||1!==e[2].dims.length)throw new Error("Invalid input type.");if(e.length>=4&&("int32"!==e[3].type||1!==e[3].dims.length))throw new Error("Invalid input type.");if(e.length>=5&&("int32"!==e[4].type||1!==e[4].dims.length))throw new Error("Invalid input type.")}})),Ic,Sc,Ac,Pc,Ec,Dc,Lc,Fc,Ab,Pb,Eb,$c,Cc=L((()=>{Ge(),fe(),xe(),ae(),ao(),Ic={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},Sc={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},Ac={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},Pc=(e,t,n)=>{$c(t);let r=t[0].dims.slice(),s=U.normalizeAxis(n.axis,r.length),a=U.sizeToDimension(r,s),i=U.sizeFromDimension(r,s);return Fc(e,t,n,a,i)},Ec=e=>ee({axis:e.attributes.getInt("axis",1)}),Dc=e=>ee({axis:e.attributes.getInt("axis",-1)}),Lc=(e,t,n)=>{$c(t);let r,s=t[0].dims.slice(),a=U.normalizeAxis(n.axis,s.length),i=s.length,o=a!==i-1,l=[],u=[],c=[];o&&(u=Array.from({length:i}).map(((e,t)=>t)),u[a]=i-1,u[i-1]=a,u.map((e=>l.push(s[e]))),r=ee({perm:u}),c=Tr(e,t,r));let h=o?U.sizeToDimension(l,i-1):U.sizeToDimension(s,i-1),p=o?U.sizeFromDimension(l,i-1):U.sizeFromDimension(s,i-1),d=Fc(e,o?c:t,n,h,p);return o?Tr(e,d,r):d},Fc=(e,t,n,r,s)=>{let a=Ab(e,t[0],r,s,[r]),i=e.run({...Ic,cacheHint:n.cacheKey,get:()=>a},t),o=Pb(e,t[0],r,s,a.output.dims,[r]),l=e.run({...Sc,cacheHint:n.cacheKey,get:()=>o},[t[0],i]),u=Eb(e,t[0],r,s,a.output.dims,o.output.dims);return[e.run({...Ac,cacheHint:n.cacheKey,get:()=>u},[t[0],i,l])]},Ab=(e,t,n,r,s)=>{let[a,i]=e.calculateTextureWidthAndHeight(t.dims,0),o=s.length;if(n<1||r<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(1!==s.length)throw new Error("Dimensionality of the output should be 1");if(s[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let l=q(e.session.backend.glContext.version),u=`\n      float process(int[${o}] indices) {\n        int logical_row_start_offset = indices[0] * ${r};\n\n        float max = getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset, ${a},\n        ${i} )));\n        for(int i=1; i<${r}; ++i)\n        {\n          float current = getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${a}, ${i})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;return{...Ic,output:{dims:s,type:t.type,textureType:0},shaderSource:u}},Pb=(e,t,n,r,s,a)=>{let[i,o]=e.calculateTextureWidthAndHeight(t.dims,0),l=a.length;if(n<1||r<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(1!==a.length)throw new Error("Dimensionality of the output should be 1");if(a[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(1!==s.length)throw new Error("Dimensionality of the intermediate results should be 1");if(s[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let u=`\n      float process(int[${l}] indices) {\n        int logical_row_start_offset = indices[0] * ${r};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${r}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${q(e.session.backend.glContext.version).texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${i}, ${o}))) - max);\n        }\n\n        return norm_factor;\n      }`;return{...Sc,output:{dims:a,type:t.type,textureType:0},shaderSource:u}},Eb=(e,t,n,r,s,a)=>{let[i,o]=e.calculateTextureWidthAndHeight(t.dims,0),l=t.dims.length;if(n<1||r<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(1!==s.length||1!==a.length)throw new Error("Dimensionality of the intermediate results should be 1");if(s[0]!==n||a[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let u=`\n      float process(int[${l}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${i}, ${o});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${r};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;return{...Ac,output:{dims:t.dims,type:t.type,textureType:0},shaderSource:u}},$c=e=>{if(!e||1!==e.length)throw new Error("Softmax requires 1 input.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type")}})),kc,Bc,Nc,Db,Lb,Fb,Rc=L((()=>{Ge(),fe(),ae(),kc={name:"Split",inputNames:["A"],inputTypes:[0]},Bc=(e,t,n)=>{Fb(t);let r=U.normalizeAxis(n.axis,t[0].dims.length),s=Db(e,t,r,n),a=[];for(let i=0;i<s;++i)a.push(e.run({...kc,cacheHint:`${n.cacheKey};${i}`,get:()=>Lb(e,t[0],n,r,i)},t));return a},Nc=e=>{let t=e.attributes.getInt("axis",0),n=e.attributes.getInts("split",[]),r=e.outputs.length;return ee({axis:t,split:n,numOutputs:r})},Db=(e,t,n,r)=>{let[,s]=an.splitShape(t[0].dims,n,r.split,r.numOutputs);return s.length},Lb=(e,t,n,r,s)=>{let[a,i]=an.splitShape(t.dims,r,n.split,n.numOutputs),o=i[s],l=a[s],u=`\n      float process(int indices[${l.length}]) {\n        indices[${r}] += ${o};\n        return _A(indices);\n      }\n    `;return{...kc,cacheHint:`${n.cacheKey}:${s}`,output:{dims:l,type:t.type,textureType:0},shaderSource:u}},Fb=e=>{if(!e||1!==e.length)throw new Error("Split requires one input.");if("int8"!==e[0].type&&"uint8"!==e[0].type&&"int16"!==e[0].type&&"uint16"!==e[0].type&&"int32"!==e[0].type&&"uint32"!==e[0].type&&"float32"!==e[0].type&&"float64"!==e[0].type&&"bool"!==e[0].type)throw new Error("Invalid input type.")}})),Wi,Mc,Gc,$b,Cb,Uc=L((()=>{fe(),Wi=(e,t,n)=>{$b(t);let r=U.squeezeShape(t[0].dims,n);return[e.reshapeUnpacked(t[0],r)]},Mc=(e,t)=>(Cb(t),Wi(e,[t[0]],Array.from(t[1].integerData))),Gc=e=>e.attributes.getInts("axes"),$b=e=>{if(!e||1!==e.length)throw new Error("Squeeze requires 1 input.");if("string"===e[0].type)throw new Error("invalid input tensor types.")},Cb=e=>{if(!e||2!==e.length)throw new Error("Squeeze requires 2 inputs.");if("int32"!==e[1].type)throw new Error("Invalid input type.")}})),zc,kb,Bb,Vc=L((()=>{xe(),ae(),zc=(e,t)=>{Bb(t);let n={name:"Sum",inputNames:t.map(((e,t)=>`X${t}`)),inputTypes:new Array(t.length).fill(0)};return[e.run({...n,get:()=>kb(e,t,n)},t)]},kb=(e,t,n)=>{let r=q(e.session.backend.glContext.version),s=t[0].dims.slice(),a=`\n      void main() {\n        vec4 result = ${t.map(((e,t)=>`${r.texture2D}(X${t},TexCoords)`)).join(" + ")};\n        ${r.output} = result;\n      }\n    `;return{...n,output:{dims:s,type:t[0].type,textureType:0},hasMain:!0,shaderSource:a}},Bb=e=>{if(!e||0===e.length)throw new Error("Sum requires inputs.");let t=e[0].dims.length;for(let n=1;n<e.length;n++){if(t!==e[n].dims.length)throw new Error("Input shapes are mismatched.");for(let r=0;r<t;r++)if(e[0].dims[r]!==e[n].dims[r])throw new Error("Input shapes are not matched.")}if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.");for(let t=1;t<e.length;t++)if(e[0].type!==e[t].type)throw new Error("Input types are not matched.")}})),Wc,Nb,Rb,Hc=L((()=>{pn(),ae(),Wc=(e,t)=>{Rb(t);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[e.run({...n,get:()=>Nb(e,t,n)},t)]},Nb=(e,t,n)=>{let r=t[0].dims.slice(),s=new Array(r.length),a=[];for(let e=0;e<r.length;e++)s[e]=r[e]*t[1].numberData[e],a.push(`inputIdx[${e}] = int(mod(float(outputIdx[${e}]), ${r[e]}.));`);let i=s.length,o=`\n      float process(int outputIdx[${i}]) {\n        int inputIdx[${i}];\n        ${a.join("\n")}\n        return _A(inputIdx);\n      }\n    `;return{...n,output:{dims:s,type:t[0].type,textureType:0},shaderSource:o}},Rb=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 input.");if(1!==e[1].dims.length)throw new Error("The second input shape must 1 dimension.");if(e[1].dims[0]!==e[0].dims.length)throw new Error("Invalid input shape.");if(-1===tr.indexOf(e[0].type))throw new Error("Invalid input type.");if("int32"!==e[1].type&&"int16"!==e[1].type)throw new Error("Invalid repeat type.")}})),Hi,qc,jc,Mb,Gb,Yc=L((()=>{fe(),Hi=(e,t,n)=>{Mb(t);let r=U.unsqueezeShape(t[0].dims,n);return[e.reshapeUnpacked(t[0],r)]},qc=(e,t)=>(Gb(t),Hi(e,[t[0]],Array.from(t[1].integerData))),jc=e=>e.attributes.getInts("axes"),Mb=e=>{if(!e||1!==e.length)throw new Error("Unsqueeze requires 1 input.");if("string"===e[0].type)throw new Error("invalid input tensor types.")},Gb=e=>{if(!e||2!==e.length)throw new Error("Unsqueeze requires 2 inputs.");if("int32"!==e[1].type)throw new Error("Invalid input type.")}})),Xc,Kc=L((()=>{il(),yl(),vl(),Al(),no(),cf(),gf(),xf(),_f(),Af(),Df(),Cf(),Rf(),oo(),zf(),tc(),lc(),cc(),gc(),Tc(),Oc(),Cc(),Rc(),Uc(),Vc(),Hc(),ao(),Pi(),Yc(),Gi(),Xc=[["Abs","","6+",Pl],["Acos","","7+",El],["Add","","7+",al],["And","","7+",sl],["Asin","","7+",Dl],["Atan","","7+",Ll],["AveragePool","","7+",Wf,Hf],["BatchNormalization","","7+",nl,ol],["Cast","","6+",Tl,xl],["Ceil","","6+",Cl],["Clip","","6-10",Si,Fl],["Clip","","11+",$l],["Concat","","4+",Ol,Sl],["Conv","","1+",Ci,ki],["ConvTranspose","","1+",lf,ff],["Cos","","7+",kl],["Div","","7+",ul],["Dropout","","7+",Ai],["DepthToSpace","","1+",mf,bf],["Equal","","7+",ll],["Elu","","6+",Bl,Nl],["Exp","","6+",Rl],["Flatten","","1+",yf,Tf],["Floor","","6+",Ml],["FusedConv","com.microsoft","1+",Ci,ki],["Gather","","1+",vf,wf],["Gemm","","7-10",Bi,If],["Gemm","","11+",Bi,Sf],["GlobalAveragePool","","1+",jf,Yf],["GlobalMaxPool","","1+",Qf],["Greater","","7+",fl],["Identity","","1+",Ai],["ImageScaler","","1+",Pf,Ef],["InstanceNormalization","","6+",Ff,$f],["LeakyRelu","","6+",Gl,Ul],["Less","","7+",cl],["LRN","","1+",kf,Bf],["Log","","6+",zl],["MatMul","","1+",tf,rf],["MaxPool","","1+",Xf,Kf],["Mul","","7+",pl],["Neg","","6+",Vl],["Not","","1+",Wl],["Or","","7+",dl],["Pad","","2-10",Ni,Mf],["Pad","","11+",Gf,Uf],["Pow","","7+",hl],["PRelu","","7+",ml],["ReduceLogSum","","1+",sc,rr],["ReduceMax","","1+",oc,rr],["ReduceMean","","1+",nc,rr],["ReduceMin","","1+",ic,rr],["ReduceProd","","1+",ac,rr],["ReduceSum","","1-12",rc,rr],["ReduceSumSquare","","1+",uc,rr],["Relu","","6+",Hl],["Reshape","","5+",fc],["Resize","","10",zi,mc],["Resize","","11+",zi,bc],["Shape","","1+",yc],["Sigmoid","","6+",ql],["Sin","","7+",jl],["Slice","","10+",_c],["Slice","","1-9",xc,vc],["Softmax","","1-12",Pc,Ec],["Softmax","","13+",Lc,Dc],["Split","","2-12",Bc,Nc],["Sqrt","","6+",Yl],["Squeeze","","1-12",Wi,Gc],["Squeeze","","13+",Mc],["Sub","","7+",bl],["Sum","","6+",zc],["Tan","","7+",Xl],["Tanh","","6+",Kl],["Tile","","6+",Wc],["Transpose","","1+",Tr,df],["Upsample","","7-8",Ri,dc],["Upsample","","9",Ri,hc],["Unsqueeze","","1-12",Hi,jc],["Unsqueeze","","13+",qc],["Xor","","7+",gl]]}));function Zc(e){let t,n={};for(;null!==(t=Jc.exec(e));){let e=t[3].split(",").map((e=>{let t=e.trim().split(" ");return t&&2===t.length?{type:t[0],name:t[1]}:null})).filter((e=>null!==e));n[t[2]]={params:e,body:t[4]}}for(let r in n){let s=Ub.replace("__FUNC__",r),a=new RegExp(s,"gm");for(;null!==(t=a.exec(e));){let s=t[1],a=t[2],i=t[3].split(","),o=s?`${s} ${a};`:"",l=n[r].body,u="";n[r].params.forEach(((e,t)=>{e&&(u+=`${e.type} ${e.name} = ${i[t]};\n`)})),l=`${u}\n ${l}`,l=l.replace("return",`${a} = `);let c=`\n      ${o}\n      {\n        ${l}\n      }\n      `;e=e.replace(t[0],c)}}return e.replace(Jc,"")}var Jc,Ub,Qc=L((()=>{Jc=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,Ub="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"}));function Gr(e,t){let n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:zb(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function zb(e,t){let n=t.length;return Cr((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Cr(e.every(Vb),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function Vb(e){return e%1==0}function Wb(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ep(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}var fo,qi=L((()=>{ut(),fe(),fo=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,t){let n=this.computeTexture(e,t);return t&&t.isPacked&&(n[0]/=2,n[1]/=2),t&&t.reverseWH?[n[1],n[0]]:n}computeTexture(e,t){let n=t&&t.isPacked;if(0===e.length)return n?[2,2]:[1,1];let r=this.maxTextureSize;if(t&&void 0!==t.breakAxis){let n=t.breakAxis>=e.length?1:e.slice(t.breakAxis).reduce(((e,t)=>e*t)),s=t.breakAxis<=0?1:e.slice(0,t.breakAxis).reduce(((e,t)=>e*t));if(!(n>r||s>r))return[n,s];ce.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${t.breakAxis}`)}let s=e.slice(0);n&&(r*=2,s=s.map(((e,t)=>t>=s.length-2?s[t]%2==0?s[t]:s[t]+1:s[t])),1===s.length&&(s=[2,s[0]])),2!==s.length&&(s=Gr(s).newShape);let a=Wb(s);return s.length<=1&&a<=r?[1,a]:2===s.length&&s[0]<=r&&s[1]<=r?s:3===s.length&&s[0]*s[1]<=r&&s[2]<=r?[s[0]*s[1],s[2]]:3===s.length&&s[0]<=r&&s[1]*s[2]<=r?[s[0],s[1]*s[2]]:4===s.length&&s[0]*s[1]*s[2]<=r&&s[3]<=r?[s[0]*s[1]*s[2],s[3]]:4===s.length&&s[0]<=r&&s[1]*s[2]*s[3]<=r?[s[0],s[1]*s[2]*s[3]]:n?ep(a/4).map((e=>2*e)):ep(a)}}})),co,tp=L((()=>{fe(),Vt(),xe(),qi(),Ft(),co=class extends pt{constructor(e){super(e)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){return{offsetToCoords:new R("\n      vec2 offsetToCoords(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      ")}}coordsToOffset(){return{coordsToOffset:new R("\n      int coordsToOffset(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      ")}}getOutputSamplingSnippet(){let e=this.context.outputTextureLayout;return e.isPacked?this.getPackedOutputSamplingSnippet(e):this.getUnpackedOutputSamplingSnippet(e)}getPackedOutputSamplingSnippet(e){let t=e.unpackedShape,n=[e.width,e.height],r={},s="getOutputCoords";switch(t.length){case 0:r[s]=this.getOutputScalarCoords();break;case 1:r[s]=this.getOutputPacked1DCoords(t,n);break;case 2:r[s]=this.getOutputPacked2DCoords(t,n);break;case 3:r[s]=this.getOutputPacked3DCoords(t,n);break;default:r[s]=this.getOutputPackedNDCoords(t,n)}let a=`\n      void setOutput(vec4 val) {\n        ${q(this.context.glContext.version).output} = val;\n      }\n    `;return r.floatTextureSetRGBA=new R(a),r}getUnpackedOutputSamplingSnippet(e){let t=e.unpackedShape,n=[e.width,e.height],r={},s="getOutputCoords";switch(t.length){case 0:r[s]=this.getOutputScalarCoords();break;case 1:r[s]=this.getOutputUnpacked1DCoords(t,n);break;case 2:r[s]=this.getOutputUnpacked2DCoords(t,n);break;case 3:r[s]=this.getOutputUnpacked3DCoords(t,n);break;case 4:r[s]=this.getOutputUnpacked4DCoords(t,n);break;case 5:r[s]=this.getOutputUnpacked5DCoords(t,n);break;case 6:r[s]=this.getOutputUnpacked6DCoords(t,n);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let a=`\n        void setOutput(float val) {\n          ${q(this.context.glContext.version).output} = vec4(val, 0, 0, 0);\n        }\n    `;return r.floatTextureSetR=new R(a),r}getOutputScalarCoords(){return new R("\n      int getOutputCoords() {\n        return 0;\n      }\n    ")}getOutputPacked1DCoords(e,t){let n=t,r="";return 1===n[0]?(r=`\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${n[1]}.0);\n          }\n        `,new R(r)):1===n[1]?(r=`\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${n[0]}.0);\n          }\n        `,new R(r)):(r=`\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${n[0]}, ${n[1]}));\n          return 2 * (resTexRC.y * ${n[0]} + resTexRC.x);\n        }\n      `,new R(r))}getOutputPacked2DCoords(e,t){let n="";if(pr.arraysEqual(e,t))return n=`\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));\n        }\n      `,new R(n);let r=t,s=Math.ceil(e[1]/2);return n=`\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${r[0]}, ${r[1]}));\n\n          int index = resTexRC.y * ${r[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${s}) * 2;\n          int c = 2 * (index / ${s});\n\n          return ivec2(r, c);\n        }\n      `,new R(n)}getOutputPacked3DCoords(e,t){let n=[t[0],t[1]],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return new R(`\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${n[0]}, ${n[1]}));\n          int index = resTexRC.y * ${n[0]} + resTexRC.x;\n\n          int b = index / ${s};\n          index -= b * ${s};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${r}) * 2;\n          int c = 2 * (index / ${r});\n\n          return ivec3(b, r, c);\n        }\n      `)}getOutputPackedNDCoords(e,t){let n=[t[0],t[1]],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2),a=s,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;let l=`\n      ivec${e.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${n[0]}, ${n[1]}));\n        int index = resTexRC.y * ${n[0]} + resTexRC.x;\n\n        ${i}\n\n        int b = index / ${s};\n        index -= b * ${s};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${r}) * 2;\n        int c = 2 * (index / ${r});\n\n        return ivec${e.length}(${o});\n      }\n    `;return new R(l)}getOutputUnpacked1DCoords(e,t){let n=`\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          return resTexRC.y * ${t[0]} + resTexRC.x;\n        }\n      `;return new R(n)}getOutputUnpacked2DCoords(e,t){let n=`\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          int r = index / ${e[1]};\n          int c = index - r * ${e[1]};\n          return ivec2(r, c);\n        }\n      `;return new R(n)}getOutputUnpacked3DCoords(e,t){let n="",r=e.length,s=null;r<2&&(s=[]),s=new Array(r-1),s[r-2]=e[r-1];for(let t=r-3;t>=0;--t)s[t]=s[t+1]*e[t+1];let a=["r","c","d"],i=s.map(((e,t)=>`int ${a[t]} = index / ${e}; ${t===s.length-1?`int ${a[t+1]} = index - ${a[t]} * ${e}`:`index -= ${a[t]} * ${e}`};`)).join("");return n=`\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${i}\n          return ivec3(r, c, d);\n        }\n      `,new R(n)}getOutputUnpacked4DCoords(e,t){let n="",r=e.length,s=null;r<2&&(s=[]),s=new Array(r-1),s[r-2]=e[r-1];for(let t=r-3;t>=0;--t)s[t]=s[t+1]*e[t+1];let a=["r","c","d","d2"],i=s.map(((e,t)=>`int ${a[t]} = index / ${e}; ${t===s.length-1?`int ${a[t+1]} = index - ${a[t]} * ${e}`:`index -= ${a[t]} * ${e}`};`)).join("");return n=`\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${i}\n          return ivec4(r, c, d, d2);\n        }\n      `,new R(n)}getOutputUnpacked5DCoords(e,t){let n="",r=e.length,s=null;r<2&&(s=[]),s=new Array(r-1),s[r-2]=e[r-1];for(let t=r-3;t>=0;--t)s[t]=s[t+1]*e[t+1];let a=["r","c","d","d2","d3"],i=s.map(((e,t)=>`int ${a[t]} = index / ${e}; ${t===s.length-1?`int ${a[t+1]} = index - ${a[t]} * ${e}`:`index -= ${a[t]} * ${e}`};`)).join("");return n=`\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${i}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `,new R(n)}getOutputUnpacked6DCoords(e,t){let n="",r=e.length,s=null;r<2&&(s=[]),s=new Array(r-1),s[r-2]=e[r-1];for(let t=r-3;t>=0;--t)s[t]=s[t+1]*e[t+1];let a=["r","c","d","d2","d3","d4"],i=s.map(((e,t)=>`int ${a[t]} = index / ${e}; ${t===s.length-1?`int ${a[t+1]} = index - ${a[t]} * ${e}`:`index -= ${a[t]} * ${e}`};`)).join("");return n=`\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${t[0]}, ${t[1]}));\n         int index = resTexRC.y * ${t[0]} + resTexRC.x;\n         ${i}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `,new R(n)}getCommonUtilFuncs(){let e={},t="uvFromFlat";e[t]=new R("\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    "),t="packedUVfrom1D",e[t]=new R("\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      "),t="packedUVfrom2D",e[t]=new R("\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      "),t="packedUVfrom3D",e[t]=new R("\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      "),t="sampleTexture";let n=q(this.context.glContext.version);return e[t]=new R(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${n.texture2D}(textureSampler, uv).r;\n        }`),e}getInputsSamplingSnippets(){let e={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach(((n,r)=>{let s=this.context.inputTextureLayouts[r],a=Kn(n);s.isPacked?e[a]=this.getPackedSamplerFromInput(a,n,s):e[a]=this.getUnpackedSamplerFromInput(a,n,s);let i=Uu(n);s.unpackedShape.length<=t.unpackedShape.length&&(s.isPacked?e[i]=this.getPackedSamplerAtOutputCoords(i,s,t,n):e[i]=this.getUnpackedSamplerAtOutputCoords(i,s,t,n))})),e}getPackedSamplerAtOutputCoords(e,t,n,r){let s,a=t.unpackedShape,i=n.unpackedShape,o=Kn(r),l=a.length,u=i.length,c=Xe.getBroadcastDims(a,i),h=Ke(u),p=u-l,d=St();s=0===l?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+p]} = 0;`)).join("\n");let f="";f=u<2&&l>0?"coords":a.map(((e,t)=>`coords.${d[t+p]}`)).join(", ");let m="return outputValue;",g=1===U.size(a),y=1===U.size(i);if(1!==l||g||y){if(g&&!y)m=1===u?"\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        ":"\n          return vec4(outputValue.x);\n        ";else if(c.length){let e=l-2,t=l-1;c.indexOf(e)>-1&&c.indexOf(t)>-1?m="return vec4(outputValue.x);":c.indexOf(e)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(t)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}}else m="\n        return vec4(outputValue.xy, outputValue.xy);\n      ";let b=`\n        int lastDim = coords.${d[u-1]};\n        coords.${d[u-1]} = coords.${d[u-2]};\n        coords.${d[u-2]} = lastDim;\n      `;return new R(`\n      vec4 ${e}() {\n        ${h} coords = getOutputCoords();\n        ${b}\n        ${s}\n        vec4 outputValue = ${o}(${f});\n        ${m}\n      }\n    `,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(e,t,n,r){let s=[n.width,n.height],a=[t.width,t.height],i=t.unpackedShape.length,o=n.unpackedShape.length,l=t.unpackedShape,u=n.unpackedShape,c=Kn(r);if(i===o&&pr.arraysEqual(a,s))return new R(`\n          float ${e}() {\n            return sampleTexture(${r}, TexCoords);\n          }\n        `,["coordinates.sampleTexture"]);let h,p=Ke(o),d=Xe.getBroadcastDims(l,u),f=o-i,m=St();h=0===i?"":o<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${m[e+f]} = 0;`)).join("\n");let g="";return g=o<2&&i>0?"coords":t.unpackedShape.map(((e,t)=>`coords.${m[t+f]}`)).join(", "),new R(`\n        float ${e}() {\n          ${p} coords = getOutputCoords();\n          ${h}\n          return ${c}(${g});\n        }\n      `,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(e,t,n){switch(n.unpackedShape.length){case 0:return this.getPackedSamplerScalar(e,t);case 1:return this.getPackedSampler1D(e,t,n);case 2:return this.getPackedSampler2D(e,t,n);case 3:return this.getPackedSampler3D(e,t,n);default:return this.getPackedSamplerND(e,t,n)}}getUnpackedSamplerFromInput(e,t,n){let r=n.unpackedShape;switch(r.length){case 0:return this.getUnpackedSamplerScalar(e,t,n);case 1:return this.getUnpackedSampler1D(e,t,n);case 2:return this.getUnpackedSampler2D(e,t,n);case 3:return this.getUnpackedSampler3D(e,t,n);case 4:return this.getUnpackedSampler4D(e,t,n);case 5:return this.getUnpackedSampler5D(e,t,n);case 6:return this.getUnpackedSampler6D(e,t,n);default:throw new Error(`Unsupported dimension ${r.length}-D`)}}getPackedSamplerScalar(e,t){let n=`\n          vec4 ${e}() {\n            return ${q(this.context.glContext.version).texture2D}(${t}, halfCR);\n          }\n        `;return new R(n)}getPackedSampler1D(e,t,n){let r=[n.width,n.height],s=[r[1],r[0]],a=q(this.context.glContext.version),i=`vec4 ${e}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }`;return new R(i,["coordinates.packedUVfrom1D"])}getPackedSampler2D(e,t,n){let r=n.unpackedShape,s=[n.width,n.height],a=q(this.context.glContext.version),i=s[0],o=s[1];if(null!=s&&pr.arraysEqual(r,s)){let n=`vec4 ${e}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n        return ${a.texture2D}(${t}, uv);\n      }`;return new R(n)}let l=s,u=Math.ceil(r[1]/2),c=`vec4 ${e}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l[1]}, ${l[0]}, ${u}, row, col);\n      return ${a.texture2D}(${t}, uv);\n    }`;return new R(c,["coordinates.packedUVfrom2D"])}getPackedSampler3D(e,t,n){let r=n.unpackedShape,s=[n.width,n.height],a=[s[0],s[1]],i=q(this.context.glContext.version);if(1===r[0]){let s=r.slice(1),a=[1,2],i=kr(r,s),o=["b","row","col"],l=JSON.parse(JSON.stringify(n));l.unpackedShape=i;let u=this.getPackedSamplerFromInput(e,t,l),c=`${u.routineBody}\n      vec4 ${e}(int b, int row, int col) {\n        return ${e}(${Br(o,a)});\n      } `;return new R(c,u.dependencies)}let o=a[0],l=a[1],u=Math.ceil(r[2]/2),c=`vec4 ${e}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${o}, ${u*Math.ceil(r[1]/2)}, ${u}, b, row, col);\n      return ${i.texture2D}(${t}, uv);}`;return new R(c,["coordinates.packedUVfrom3D"])}getPackedSamplerND(e,t,n){let r=n.unpackedShape,s=r.length,a=[n.width,n.height],i=q(this.context.glContext.version),o=[a[0],a[1]],l=o[1],u=o[0],c=Math.ceil(r[s-1]/2),h=c*Math.ceil(r[s-2]/2),p="int b, int row, int col",d=`b * ${h} + (row / 2) * ${c} + (col / 2)`;for(let e=2;e<s-1;e++)p=`int b${e}, `+p,h*=r[s-e-1],d=`b${e} * ${h} + `+d;let f=`vec4 ${e}(${p}) {\n      int index = ${d};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${l});\n      return ${i.texture2D}(${t}, uv);\n    }`;return new R(f)}getUnpackedSamplerScalar(e,t,n){let[r,s]=[n.width,n.height];return 1===r&&1===s?new R(`\n          float ${e}() {\n            return sampleTexture(${t}, halfCR);\n          }\n        `,["coordinates.sampleTexture"]):new R(`\n        float ${e}() {\n          int offset_${t} = coordsToOffset(TexCoords, ${r}, ${s});\n          vec2 uv = uvFromFlat(${r}, ${s}, offset_${t});\n          return sampleTexture(${t}, uv);\n        }\n      `,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(e,t,n){let r=n.width,s=n.height;return 1===s&&1===r?new R(`\n        float ${e}(int index) {\n          return sampleTexture(${t}, halfCR);\n        }\n      `,["coordinates.sampleTexture"]):1===s?new R(`\n          float ${e}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${r}.0, 0.5);\n            return sampleTexture(${t}, uv);\n          }\n        `,["coordinates.sampleTexture"]):1===r?new R(`\n          float ${e}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `,["coordinates.sampleTexture"]):new R(`\n        float ${e}(int index) {\n          vec2 uv = uvFromFlat(${r}, ${s}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(e,t,n){let r=n.unpackedShape,s=[n.height,n.width];if(null!=s&&pr.arraysEqual(r,s))return new R(`\n          float ${e}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${s[1]}.0, ${s[0]}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `,["coordinates.sampleTexture"]);let{newShape:a,keptDims:i}=Gr(r),o=a;if(o.length<r.length){let s=kr(r,o),a=JSON.parse(JSON.stringify(n));a.unpackedShape=s;let l=["col","row"],u=`\n          ${this.getUnpackedSamplerFromInput(e,t,a).routineBody}\n          float ${e}(int row, int col) {\n            return ${e}(${Br(l,i)});\n          }\n        `;return new R(u,["coordinates.sampleTexture"])}let l=s[1],u=s[0];if(1===u){let n=`\n          float ${e}(int row, int col) {\n            int offset_${t} = coordsToOffset(TexCoords, ${l}, ${u});\n            float index = dot(vec3(row, col, offset_${t}), vec3(${r[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new R(n,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(1===l){let n=`\n          float ${e}(int row, int col) {\n            int offset_${t} = coordsToOffset(TexCoords, ${l}, ${u});\n            float index = dot(vec3(row, col, offset_${t}), vec3(${r[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new R(n,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let c=`\n        float ${e}(int row, int col) {\n          int index = col * ${r[1]} + row;\n          vec2 uv = uvFromFlat(${l}, ${u}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;return new R(c,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(e,t,n){let r=n.unpackedShape,s=r[1]*r[2],a=r[2],{newShape:i,keptDims:o}=Gr(r),l=i;if(l.length<r.length){let s=kr(r,l),a=["batch","col","row"],i=JSON.parse(JSON.stringify(n));i.unpackedShape=s;let u=this.getUnpackedSamplerFromInput(e,t,i),c=o.reverse(),h=`\n          ${u.routineBody}\n          float ${e}(int batch, int row, int col) {\n            return ${e}(${Br(a,c)});\n          }\n        `;return new R(h,u.dependencies)}let u=n.width,c=n.height;return new R(`\n          float ${e}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${s} + col * ${a} + row;\n            vec2 uv = uvFromFlat(${u}, ${c}, index);\n            return sampleTexture(${t}, uv);\n          }\n      `,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(e,t,n){let r=n.unpackedShape,s=r[3],a=r[2]*s,i=r[1]*a,o=n.width,l=n.height;return new R(`\n        float ${e}(int row, int col, int depth, int depth2) {\n          int index = row * ${i} + col * ${a} +\n              depth2 * ${s} + depth;\n          vec2 uv = uvFromFlat(${o}, ${l}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(e,t,n){let r=n.unpackedShape,s=r[4],a=r[3]*s,i=r[2]*a,o=r[1]*i,{newShape:l,keptDims:u}=Gr(r);if(l.length<r.length){let s=kr(r,l),a=["row","col","depth","depth2","depth3"],i=JSON.parse(JSON.stringify(n));i.unpackedShape=s;let o=`\n          ${this.getUnpackedSamplerFromInput(e,t,i).routineBody}\n          float ${e}(int row, int col, int depth, int depth2, int depth3) {\n            return ${e}(${Br(a,u)});\n          }\n        `;return new R(o,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let c=n.width,h=n.height;return new R(`\n        float ${e}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth3 * ${s} + depth2;\n          vec2 uv = uvFromFlat(${c}, ${h}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(e,t,n){let r=n.unpackedShape,s=r[5],a=r[4]*s,i=r[3]*a,o=r[2]*i,l=r[1]*o,{newShape:u,keptDims:c}=Gr(r);if(u.length<r.length){let s=kr(r,u),a=["row","col","depth","depth2","depth3","depth4"],i=JSON.parse(JSON.stringify(n));i.unpackedShape=s;let o=`\n            ${this.getUnpackedSamplerFromInput(e,t,i).routineBody}\n            float ${e}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${e}(${Br(a,c)});\n            }\n          `;return new R(o,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let h=n.width,p=n.height;return new R(`\n          float ${e}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${l} + col * ${o} + depth * ${i} +\n            depth2 * ${a} + depth3 * ${s} + depth4;\n            vec2 uv = uvFromFlat(${h}, ${p}, index);\n            return sampleTexture(${t}, uv);\n          }\n        `,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let e=this.context.outputTextureLayout,t=e.shape.length,n=e.strides,r=e.width,s=e.height,a=[];for(let e=0;e<t-1;++e)a.push(`\n        c[${e}] = offset / ${n[e]};`),a.push(`\n        offset -= c[${e}] * ${n[e]};`);a.push(`\n        c[${t-1}] = offset;`);let i=`\n      void toVec(vec2 texCoords, out int c[${t}]) {\n        int offset = coordsToOffset(texCoords, ${r}, ${s});\n        ${a.join("")}\n      }\n      void toVec(int offset, out int c[${t}]) {\n        ${a.join("")}\n      }\n    `;return{toVec:new R(i,["coordinates.coordsToOffset"])}}valueFrom(){let e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{let r=this.context.inputTextureLayouts[n],s=(r.unpackedShape.length>0?r.unpackedShape:r.shape).length,a=`_${t}`;e[a]=new R(this.getValueFromSingle(t,s,r.width,r.height,!1),[`shapeUtils.indicesToOffset${a}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),a+="_T",e[a]=new R(this.getValueFromSingle(t,s,r.width,r.height,!0),[`shapeUtils.indicesToOffset${a}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])})),e}getValueFromSingle(e,t,n,r,s){let a=`_${e}`;return s&&(a+="_T"),`\n        float ${a}(int m[${t}]) {\n          int offset = indicesToOffset${a}(m);\n          vec2 coords = offsetToCoords(offset, ${n}, ${r});\n          float value = getColorAsFloat(${q(this.context.glContext.version).texture2D}(${e}, coords));\n          return value;\n        }\n        `}getPackedValueFrom(e,t,n,r,s){let a=`_${e}_Pack`;return s&&(a+="_T"),`\n        vec4 ${a}(int m[${t}]) {\n          int offset = indicesToOffset_${e}(m);\n          vec2 coords = offsetToCoords(offset, ${n}, ${r});\n          return ${q(this.context.glContext.version).texture2D}(${e}, coords);\n        }\n        `}}})),po,rp=L((()=>{Vt(),po=class e extends pt{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new R("highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        ")}}decodeFloat32(){return{decode:new R("highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        ")}}encodeUint8(){let t=e.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new R(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${t}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)}}decodeUint8(){let t=e.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new R(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${t}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),t=new Uint32Array(e),n=new Uint8Array(e);if(t[0]=3735928559,239===n[0])return!0;if(222===n[0])return!1;throw new Error("unknown endianness")}}})),ho,np=L((()=>{Vt(),xe(),ho=class extends pt{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=q(this.context.glContext.version);return{setFragColor:new R(`\n        void setFragColor(float value) {\n            ${e.output} = encode(value);\n        }\n        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new R("\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        ",["encoding.decode"])}}}})),mo,op=L((()=>{Vt(),mo=class e extends pt{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,t={};return this.context.programInfo.inputNames.forEach(((n,r)=>{let s=this.context.inputTextureLayouts[r].unpackedShape;if(s.length<=e){let r=s.length,a=e-r,i=`bcastIndices_${n}`,o="";for(let e=0;e<r;++e)o+=`\n          realIndices[${e}] = int( mod(float(bcastedIndices[${a+e}]), ${s[e]}.0) );\n          `;let l=`\n        void ${i} (int bcastedIndices[${e}], out int realIndices[${r}]) {\n          ${o}\n        }\n        `;t[i]=new R(l)}})),t}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,t={};return this.context.programInfo.inputNames.forEach(((n,r)=>{let s=this.context.inputTextureLayouts[r].shape;if(!(s.length<2||s.length>e)){let r=s.length,a=e-r,i=`bcastMatmulIndices_${n}`,o="";for(let e=0;e<r-2;++e)o+=`\n          realIndices[${e}] = int( mod(float(bcastedIndices[${a+e}]), ${s[e]}.0) );\n          `;let l=`\n        void ${i}(int bcastedIndices[${e}], out int realIndices[${r}]) {\n          ${o}\n          realIndices[${r-1}] = bcastedIndices[${e-1}];\n          realIndices[${r-2}] = bcastedIndices[${e-2}];\n        }\n        `;t[i]=new R(l)}})),t}indicesToOffset(){let t={};return this.context.programInfo.inputNames.forEach(((n,r)=>{let s=this.context.inputTextureLayouts[r].shape,a=this.context.inputTextureLayouts[r].strides,i=s.length,o=`indicesToOffset_${n}`;t[o]=new R(e.indexToOffsetSingle(o,i,a)),o=`indicesToOffset_${n}_T`,t[o]=new R(e.indexToOffsetSingle(o,i,a.slice().reverse()))})),t}static indexToOffsetSingle(e,t,n){let r="";for(let e=t-1;e>=0;--e)r+=`\n        offset += indices[${e}] * ${n[e]};\n        `;return`\n      int ${e}(int indices[${t}]) {\n        int offset = 0;\n        ${r}\n        return offset;\n      }\n      `}offsetToIndices(){let t={};return this.context.programInfo.inputNames.forEach(((n,r)=>{let s=this.context.inputTextureLayouts[r].shape,a=this.context.inputTextureLayouts[r].strides,i=s.length,o=`offsetToIndices_${n}`;t[o]=new R(e.offsetToIndicesSingle(o,i,a)),o=`offsetToIndices_${n}_T`,t[o]=new R(e.offsetToIndicesSingle(o,i,a.slice().reverse()))})),t}static offsetToIndicesSingle(e,t,n){let r=[];for(let e=0;e<t-1;++e)r.push(`\n      indices[${e}] = offset / ${n[e]};`),r.push(`\n        offset -= indices[${e}] * ${n[e]};`);return r.push(`\n      indices[${t-1}] = offset;`),`\n      void ${e}(int offset, out int indices[${t}]) {\n        ${r.join("")}\n      }\n      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{let r=this.context.inputTextureLayouts[n].shape,s=r.length,a=`incrementIndices_${t}`,i="";for(let e=0;e<s;++e)i+=`\n        shape[${e}] = ${r[e]};`;let o=`\n        void ${a}(int axis, out int indices[${s}]) {\n          int shape[${s}];\n          ${i};\n          for(int i = ${s} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;e[a]=new R(o)})),e}}})),bo,ip=L((()=>{Vt(),bo=class extends pt{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let e=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},n={};for(let r in t){let s=`${r}Vec`,a="";for(let n=0;n<e;++n)a+=`\n          dest[${n}] ${t[r]} src[${n}];\n          `;let i=`\n        void ${s}(int src[${e}], out int dest[${e}]) {\n          ${a}\n        }\n        `;n[s]=new R(i)}return n}copyVec(){let e=this.context.outputTextureLayout.shape.length,t="";for(let n=0;n<e;++n)t+=`\n        dest[${n}] = src[${n}];\n        `;return{copyVec:new R(`\n      void copyVec(int src[${e}], out int dest[${e}]) {\n        ${t}\n      }\n      `)}}setVecItem(){let e=this.context.outputTextureLayout.shape.length,t=`\n        if(index < 0)\n            index =${e} + index;\n        if (index == 0)\n            m[0] = value;\n        `;for(let n=1;n<e-1;++n)t+=`\n        else if (index == ${n})\n            m[${n}] = value;\n            `;return t+=`\n        else\n            m[${e-1}] = value;\n        `,{setVecItem:new R(`\n      void setVecItem(out int m[${e}], int index, int value) {\n        ${t}\n      }\n        `)}}getVecItem(){let e=this.context.outputTextureLayout.shape.length,t=`\n        if(index < 0)\n            index = ${e} + index;\n        if (index == 0)\n            return m[0];\n      `;for(let n=1;n<e-1;++n)t+=`\n        else if (index == ${n})\n            return m[${n}];\n      `;return t+=`\n        else\n            return m[${e-1}];\n        `,{getVecItem:new R(`\n      int getVecItem(int m[${e}], int index) {\n        ${t}\n      }\n    `)}}}})),ji,ap=L((()=>{tp(),rp(),np(),op(),ip(),ji={encoding:po,fragcolor:ho,vec:bo,shapeUtils:mo,coordinates:co}})),go,sp=L((()=>{Vt(),Qc(),ap(),xe(),go=class{constructor(e,t,n,r){this.libs={},this.glslLibRoutineDependencyGraph={},this.context=new eo(e,t,n,r),Object.keys(ji).forEach((e=>{let t=new ji[e](this.context);this.libs[e]=t}));let s=this.glslLibRoutineDependencyGraph;for(let e in this.libs){let t=this.libs[e].getFunctions();for(let n in t){let r,a=e+"."+n;s[a]?(r=s[a],r.routineBody=t[n].routineBody):(r=new cn(a,t[n].routineBody),s[a]=r);let i=t[n].dependencies;if(i)for(let e=0;e<i.length;++e)if(s[i[e]])r.addDependency(s[i[e]]);else{let t=new cn(i[e]);s[i[e]]=t,r.addDependency(t)}}}}preprocess(){let e=this.context.programInfo,t=e.shaderSource;return this.context.programInfo.hasMain||(t=`${t}\n      ${Gu(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),t=Zc(t),`${Mu(this.context.glContext.version)}\n    ${this.getUniforms(e.inputNames,e.variables)}\n    ${this.getImports(t)}\n    ${t}`}getImports(e){let t=this.selectGlslLibRoutinesToBeIncluded(e);if(0===t.length)return"";let n="";for(let e=0;e<t.length;++e){if(!t[e].routineBody)throw new Error(`Missing body for the Glsl Library routine: ${t[e].name}`);n+=t[e].routineBody+"\n"}return n}selectGlslLibRoutinesToBeIncluded(e){let t=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach((n=>{let r=n.split(".")[1];-1!==e.indexOf(r)&&t.push(this.glslLibRoutineDependencyGraph[n])})),to.returnOrderedNodes(t)}getUniforms(e,t){let n=[];if(e)for(let t of e)n.push(`uniform sampler2D ${t};`);if(t)for(let e of t)n.push(`uniform ${e.type} ${e.name}${e.arrayLength?`[${e.arrayLength}]`:""};`);return n.join("\n")}}})),yo,up=L((()=>{vt(),ut(),sp(),xe(),yo=class{constructor(e,t,n){this.profiler=e,this.glContext=t,this.textureLayoutStrategy=n,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,(()=>{let r=this.glContext.gl,s=e.program;r.useProgram(s);try{this.bindOutput(n),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],t)}catch(t){throw ce.error("ProgramManager",e.programInfo.shaderSource),t}this.profiler.event("backend","GlContext.draw()",(()=>{this.glContext.draw()}))}),this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach((e=>this.glContext.deleteProgram(e.program)))}build(e,t,n){return this.profiler.event("backend","ProgramManager.build",(()=>{let r=new go(this.glContext,e,t,n),s=r.preprocess(),a=this.compile(s);return{programInfo:e,program:a,uniformLocations:this.getUniformLocations(a,r.context.programInfo.inputNames,r.context.programInfo.variables),attribLocations:this.getAttribLocations(a)}}))}compile(e){if(!this.vertexShader){ce.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let e=Ru(this.glContext.version);this.vertexShader=this.glContext.compileShader(e,this.glContext.gl.VERTEX_SHADER)}Z.debug&&ce.verbose("ProrgramManager",`FragShader:\n${e}\n`);let t=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),n=this.glContext.createProgram(this.vertexShader,t);return this.glContext.deleteShader(t),n}bindOutput(e){let t=e.width,n=e.height;ce.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${t}/${n}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,t,n)}bindAttributes(e){let t=e.position,n=e.textureCoord;this.glContext.setVertexAttributes(t,n),this.attributesBound=!0}bindUniforms(e,t,n){let r=this.glContext.gl,s=0;for(let{name:a,type:i,location:o,arrayLength:l}of e){let e=t.find((e=>e.name===a))?.data;if("sampler2D"!==i&&!e)throw new Error(`variable '${a}' does not have data defined in program info`);switch(i){case"sampler2D":this.bindTexture(n[s],o,s),s++;break;case"float":l?r.uniform1fv(o,e):r.uniform1f(o,e);break;case"int":l?r.uniform1iv(o,e):r.uniform1i(o,e);break;default:throw new Error(`Uniform not implemented: ${i}`)}}}bindTexture(e,t,n){this.glContext.bindTextureToUniform(e.texture,n,t)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,t,n){let r=[];if(t)for(let n of t)r.push({name:n,type:"sampler2D",location:this.getUniformLocation(e,n)});if(n)for(let t of n)r.push({...t,location:this.getUniformLocation(e,t.name)});return r}getUniformLocation(e,t){let n=this.glContext.gl.getUniformLocation(e,t);if(null===n)throw new Error(`Uniform ${t} not found.`);return n}getAttribLocation(e,t){return this.glContext.gl.getAttribLocation(e,t)}}})),To,lp=L((()=>{ut(),ln(),To=class{constructor(e,t,n,r){this.glContext=e,this.layoutStrategy=t,this.profiler=n,this.config=r,this.pendingRead=new Map,r.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,t,n,r){let s=this.toEncoderType(e),a=this.glContext.getEncoder(s,t.channels||1,r);if(t.isPacked&&1===r)throw new Error("not implemented");let i,o,l=t.width,u=t.height;if(this.config.reuseTextures){i=`${l}x${u}_${a.format}_${a.internalFormat}_${a.textureType}`,o=this.inUseTextures.get(i),o||(o=[],this.inUseTextures.set(i,o));let t=this.idleTextures.get(i);if(t&&t.length>0){let s=t.pop();return o.push(s),1===r&&this.glContext.updateTexture(s,l,u,a,this.toTextureData(e,n)),s}}ce.verbose("TextureManager",`Creating new texture of size ${t.width}x${t.height}`);let c=this.glContext.allocateTexture(l,u,a,this.toTextureData(e,n));return this.config.reuseTextures&&(o.push(c),this.textureLookup.set(c,i)),c}readTexture(e,t,n){return n||(n=1),this.profiler.event("backend","TextureManager.readTexture",(()=>{let r=e.shape.reduce(((e,t)=>e*t))*n,s=this.glContext.readTexture(e.texture,e.width,e.height,r,this.toEncoderType(t),n);return this.toTensorData(t,s)}))}async readTextureAsync(e,t,n){let r=e.tensor.dataId;if(n||(n=1),this.pendingRead.has(r)){let e=this.pendingRead.get(r);return new Promise((t=>e?.push(t)))}return this.profiler.event("backend","TextureManager.readTextureAsync",(async()=>{this.pendingRead.set(r,[]);let s=e.shape.reduce(((e,t)=>e*t))*n;await this.glContext.createAndWaitForFence();let a=this.glContext.readTexture(e.texture,e.width,e.height,s,this.toEncoderType(t),n),i=this.toTensorData(t,a),o=this.pendingRead.get(r);return this.pendingRead.delete(r),o?.forEach((e=>e(i))),i}))}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",(()=>{let t=e.shape.reduce(((e,t)=>e*t)),n=this.glContext.readTexture(e.texture,e.width,e.height,4*t,"byte",4);return new Float32Array(n.buffer,n.byteOffset,t)}))}releaseTexture(e,t){let n;if(this.config.reuseTextures&&(n=this.textureLookup.get(e.texture),n)){t&&this.textureLookup.delete(n);let r=this.inUseTextures.get(n);if(r){let t=r.indexOf(e.texture);if(-1!==t){r.splice(t,1);let s=this.idleTextures.get(n);s||(s=[],this.idleTextures.set(n,s)),s.push(e.texture)}}}(!n||t)&&(ce.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,t){switch(e){case"int16":return t instanceof Int16Array?t:Int16Array.from(t);case"int32":return t instanceof Int32Array?t:Int32Array.from(t);case"int8":return t instanceof Int8Array?t:Int8Array.from(t);case"uint16":return t instanceof Uint16Array?t:Uint16Array.from(t);case"uint32":return t instanceof Uint32Array?t:Uint32Array.from(t);case"uint8":case"bool":return t instanceof Uint8Array?t:Uint8Array.from(t);case"float32":return t instanceof Float32Array?t:Float32Array.from(t);case"float64":return t instanceof Float64Array?t:Float64Array.from(t);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,t){if(t)return t instanceof Float32Array?t:new Float32Array(t)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}})),xo,fp=L((()=>{ut(),Os(),tl(),Kc(),up(),qi(),lp(),xo=class{constructor(e,t){this.backend=e,this.context=t,this.layoutStrategy=new fo(e.glContext.maxTextureSize),this.programManager=new yo(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new To(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:"full"===e.textureCacheMode}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new Qn(this)}onGraphInitialized(e){let t=e.getValues().filter((e=>-1===e.from&&e.tensor)).map((e=>e.tensor.dataId));this.initializers=new Set(t)}isInitializer(e){return!!this.initializers&&this.initializers.has(e)}addInitializer(e){this.initializers.add(e)}getTextureData(e,t){return t?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,t,n=!1){ce.verbose("WebGLSessionHandler","Storing Texture data in cache"),n?this.packedTextureDataCache.set(e,t):this.unpackedTextureDataCache.set(e,t)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach((e=>this.textureManager.releaseTexture(e,!0))),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach((e=>this.textureManager.releaseTexture(e,!0))),this.unpackedTextureDataCache=new Map}resolve(e,t,n){let r=_s(e,t,Xc);return{impl:r.opImpl,context:r.opInit?r.opInit(e,n):e}}}}));function Hb(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var hn,cp=L((()=>{vt(),ln(),ln(),Ft(),hn=class{constructor(e,t){this.frameBufferBound=!1,this.itemsToPoll=[],this.gl=e,this.version=t,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,t,n,r){let s=this.gl,a=s.createTexture();s.bindTexture(s.TEXTURE_2D,a),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE);let i=r?n.encode(r,e*t):null;return s.texImage2D(s.TEXTURE_2D,0,n.internalFormat,e,t,0,n.format,n.textureType,i),this.checkError(),a}updateTexture(e,t,n,r,s){let a=this.gl;a.bindTexture(a.TEXTURE_2D,e);let i=r.encode(s,t*n);a.texSubImage2D(a.TEXTURE_2D,0,0,0,t,n,r.format,r.textureType,i),this.checkError()}attachFramebuffer(e,t,n){let r=this.gl;r.bindTexture(r.TEXTURE_2D,e),r.bindFramebuffer(r.FRAMEBUFFER,this.framebuffer),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0),this.checkError(),r.viewport(0,0,t,n),r.scissor(0,0,t,n)}readTexture(e,t,n,r,s,a){let i=this.gl;a||(a=1),this.frameBufferBound||this.attachFramebuffer(e,t,n);let o=this.getEncoder(s,a),l=o.allocate(t*n);return i.bindTexture(i.TEXTURE_2D,e),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,e,0),i.readPixels(0,0,t,n,i.RGBA,o.textureType,l),this.checkError(),o.decode(l,r)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return"TEXTURE"+(e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0)}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,t){let n=this.gl;n.vertexAttribPointer(e,3,n.FLOAT,!1,20,0),n.enableVertexAttribArray(e),-1!==t&&(n.vertexAttribPointer(t,2,n.FLOAT,!1,20,12),n.enableVertexAttribArray(t)),this.checkError()}createProgram(e,t){let n=this.gl,r=n.createProgram();return n.attachShader(r,e),n.attachShader(r,t),n.linkProgram(r),r}compileShader(e,t){let n=this.gl,r=n.createShader(t);if(!r)throw new Error(`createShader() returned null with type ${t}`);if(n.shaderSource(r,e),n.compileShader(r),!1===n.getShaderParameter(r,n.COMPILE_STATUS))throw new Error(`Failed to compile shader: ${n.getShaderInfoLog(r)}\nShader source:\n${e}`);return r}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,t,n){let r=this.gl;r.activeTexture(r.TEXTURE0+t),this.checkError(),r.bindTexture(r.TEXTURE_2D,e),this.checkError(),r.uniform1i(n,t),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(Z.debug){let e=this.gl,t=e.getError(),n="";switch(t){case e.NO_ERROR:return;case e.INVALID_ENUM:n="INVALID_ENUM";break;case e.INVALID_VALUE:n="INVALID_VALUE";break;case e.INVALID_OPERATION:n="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:n="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:n="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:n="CONTEXT_LOST_WEBGL";break;default:n=`Unknown WebGL Error: ${t.toString(16)}`}throw new Error(n)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,t,n=0){if(2===this.version)return new Jn(this.gl,t);switch(e){case"float":return 1===n||this.isRenderFloat32Supported?new un(this.gl,t):new un(this.gl,t,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new Zn(this.gl,t);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let t=0;t<this.maxTextureImageUnits;++t)e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,t=e.createBuffer();if(!t)throw new Error("createBuffer() returned null");let n=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW),this.checkError(),t}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),1===this.version&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){2===this.version?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t);let n=2===this.version?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,n,1,1,0,e.RGBA,e.FLOAT,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(t),e.deleteFramebuffer(r),s}checkRenderFloat32(){if(2===this.version){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(2===this.version){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e,t,n,r,s,a=this.gl;try{e=a.createTexture(),t=a.createFramebuffer(),a.bindTexture(a.TEXTURE_2D,e);let i=2===this.version?a.RGBA32F:a.RGBA;return a.texImage2D(a.TEXTURE_2D,0,i,1,1,0,a.RGBA,a.FLOAT,null),a.bindFramebuffer(a.FRAMEBUFFER,t),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.enable(a.BLEND),n=a.createShader(a.VERTEX_SHADER),!!(n&&(a.shaderSource(n,"void main(){}"),a.compileShader(n),r=a.createShader(a.FRAGMENT_SHADER),r)&&(a.shaderSource(r,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),a.compileShader(r),s=a.createProgram(),s))&&(a.attachShader(s,n),a.attachShader(s,r),a.linkProgram(s),a.useProgram(s),a.drawArrays(a.POINTS,0,1),a.getError()===a.NO_ERROR)}finally{a.disable(a.BLEND),s&&a.deleteProgram(s),n&&a.deleteShader(n),r&&a.deleteShader(r),t&&(a.bindFramebuffer(a.FRAMEBUFFER,null),a.deleteFramebuffer(t)),e&&(a.bindTexture(a.TEXTURE_2D,null),a.deleteTexture(e))}}beginTimer(){if(2===this.version&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,t=this.disjointTimerQueryWebgl2Extension,n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(2!==this.version||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{let e=this.gl,t=this.disjointTimerQueryWebgl2Extension;e.endQuery(t.TIME_ELAPSED_EXT)}}isTimerResultAvailable(e){let t=!1,n=!1;if(2!==this.version||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{let r=this.gl,s=this.disjointTimerQueryWebgl2Extension;t=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE),n=r.getParameter(s.GPU_DISJOINT_EXT)}return t&&!n}getTimerResult(e){let t=0;if(2!==this.version)throw new Error("WebGL1 profiling currently not supported");{let n=this.gl;t=n.getQueryParameter(e,n.QUERY_RESULT),n.deleteQuery(e)}return t/1e6}async waitForQueryAndGetTime(e){return await yi((()=>this.isTimerResultAvailable(e))),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n=e,r=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),t=null===r?()=>!0:()=>{let e=n.clientWaitSync(r,0,0);return e===n.ALREADY_SIGNALED||e===n.CONDITION_SATISFIED},{query:r,isFencePassed:t}}async pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=Hb(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&await yi((()=>(this.pollItems(),0===this.itemsToPoll.length)))}}}));function Yi(e){let t;if(e&&"webgl2"!==e||!("webgl2"in Ur)?(!e||"webgl"===e)&&"webgl"in Ur&&(t=Ur.webgl):t=Ur.webgl2,!t)try{t=pp(jb(),e)}catch{t=pp(qb(),e)}e=e||1===t.version?"webgl":"webgl2";let n=t.gl;return Ur[e]=t,n.isContextLost()?(delete Ur[e],Yi(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),t)}function pp(e,t){let n,r={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1};if((!t||"webgl2"===t)&&(n=e.getContext("webgl2",r),n))try{return new hn(n,2)}catch(e){ce.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${e}`)}if((!t||"webgl"===t)&&(n=e.getContext("webgl",r)||e.getContext("experimental-webgl",r),n))try{return new hn(n,1)}catch(e){ce.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${e}`)}throw new Error("WebGL is not supported")}function qb(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let e=document.createElement("canvas");return e.width=1,e.height=1,e}function jb(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var Ur,dp=L((()=>{ut(),cp(),Ur={}})),vo,hp=L((()=>{vt(),ut(),fp(),dp(),vo=class{get contextId(){return Z.webgl.contextId}set contextId(e){Z.webgl.contextId=e}get matmulMaxBatchSize(){return Z.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){Z.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return Z.webgl.textureCacheMode}set textureCacheMode(e){Z.webgl.textureCacheMode=e}get pack(){return Z.webgl.pack}set pack(e){Z.webgl.pack=e}get async(){return Z.webgl.async}set async(e){Z.webgl.async=e}initialize(){try{return this.glContext=Yi(this.contextId),"number"!=typeof this.matmulMaxBatchSize&&(this.matmulMaxBatchSize=16),"string"!=typeof this.textureCacheMode&&(this.textureCacheMode="full"),"boolean"!=typeof this.pack&&(this.pack=!1),"boolean"!=typeof this.async&&(this.async=!1),ce.setWithEnv(Z),Z.webgl.context||Object.defineProperty(Z.webgl,"context",{value:this.glContext.gl}),ce.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return ce.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new xo(this,e)}dispose(){this.glContext.dispose()}}}));async function Xi(e){if(!e)return Xi(["webgl"]);{let t="string"==typeof e?[e]:e;for(let e of t){let t=mp.get(e);if(t)return t;let n=await Xb(e);if(n)return n}}throw new Error("no available backend to use")}async function Xb(e){let t=Yb;if(typeof t[e]<"u"&&Kb(t[e])){let n=t[e],r=n.initialize();if("object"==typeof r&&"then"in r&&(r=await r),r)return mp.set(e,n),n}}function Kb(e){let t=e;return"initialize"in t&&"function"==typeof t.initialize&&"createSessionHandler"in t&&"function"==typeof t.createSessionHandler&&"dispose"in t&&"function"==typeof t.dispose}var mp,Yb,bp=L((()=>{hp(),mp=new Map,Yb={webgl:new vo}})),Ki,wo,gp=L((()=>{ut(),Ki=class{constructor(e,t){this.op=e,this.node=t}},wo=class{constructor(e,t,n){this.graph=e,this.profiler=n,this.initialize(t)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",(()=>{let t=this.graph.getNodes();if(t.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map(((e,n)=>new Ki(e,t[n]))),this.reset(),this._starter=[],this._ops.forEach(((e,t)=>{let n=!0;for(let t of e.node.inputs)if(!this._values[t]&&-1===this.graph.getInputIndices().indexOf(t)){n=!1;break}n&&this._starter.push(t)}))}))}reset(){this._values=this.graph.getValues().map((e=>e.tensor))}async execute(e,t){return this.profiler.event("session","ExecutionPlan.execute",(async()=>{this.reset();let n=e.createInferenceHandler(),r=this.graph.getInputIndices();if(t.length!==r.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${t.length} expected: ${r.length}`);t.forEach(((e,t)=>{let n=r[t];this._values[n]=e}));let s=this._starter.slice(0),a=this.graph.getValues(),i=this.graph.getNodes(),o=0;for(;o<s.length;){let e=s[o++],t=this._ops[e],r=t.node.inputs.map((e=>this._values[e]));if(-1!==r.indexOf(void 0))throw new Error(`unresolved input detected: op: ${t.node}`);let l=r;ce.verbose("ExecPlan",`Runing op:${t.node.name} (${l.map(((e,n)=>`'${t.node.inputs[n]}': ${e.type}[${e.dims.join(",")}]`)).join(", ")})`);let u=await this.profiler.event("node",t.node.name,(async()=>t.op.impl(n,l,t.op.context)));if(u.length!==t.node.outputs.length)throw new Error("the size of output does not match model definition.");u.forEach(((e,n)=>{let r=t.node.outputs[n];if(this._values[r])throw new Error(`output [${r}] already has value: op:${t.node.name}`);this._values[r]=e}));let c=new Set;u.forEach(((e,n)=>{let r=t.node.outputs[n];for(let e of a[r].to){let t=i[e],n=!0;for(let e of t.inputs)if(!this._values[e]){n=!1;break}n&&c.add(e)}})),s.push(...c)}let l=[];for(let e=0;e<this.graph.getOutputIndices().length;e++){let t=this.graph.getOutputIndices()[e],n=this._values[t];if(void 0===n)throw new Error(`required output [${t}] does not have value`);0===t?await n.getData():n.data,l.push(n)}return ce.verbose("ExecPlan","disposing of inferenceHandler"),n.dispose(),l}))}}})),oe,mt,mn,yp=L((()=>{tn(),oe=Er($r()),br(),fe(),mt=W.experimental.fbs,mn=class e{constructor(t){if(this._attributes=new Map,null!=t){for(let n of t)n instanceof oe.onnx.AttributeProto?this._attributes.set(n.name,[e.getValue(n),e.getType(n)]):n instanceof mt.Attribute&&this._attributes.set(n.name(),[e.getValue(n),e.getType(n)]);if(this._attributes.size<t.length)throw new Error("duplicated attribute names")}}set(e,t,n){this._attributes.set(e,[n,t])}delete(e){this._attributes.delete(e)}getFloat(e,t){return this.get(e,"float",t)}getInt(e,t){return this.get(e,"int",t)}getString(e,t){return this.get(e,"string",t)}getTensor(e,t){return this.get(e,"tensor",t)}getFloats(e,t){return this.get(e,"floats",t)}getInts(e,t){return this.get(e,"ints",t)}getStrings(e,t){return this.get(e,"strings",t)}getTensors(e,t){return this.get(e,"tensors",t)}get(e,t,n){let r=this._attributes.get(e);if(void 0===r){if(void 0!==n)return n;throw new Error(`required attribute not found: ${e}`)}if(r[1]!==t)throw new Error(`type mismatch: expected ${t} but got ${r[1]}`);return r[0]}static getType(e){let t=e instanceof oe.onnx.AttributeProto?e.type:e.type();switch(t){case oe.onnx.AttributeProto.AttributeType.FLOAT:return"float";case oe.onnx.AttributeProto.AttributeType.INT:return"int";case oe.onnx.AttributeProto.AttributeType.STRING:return"string";case oe.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case oe.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case oe.onnx.AttributeProto.AttributeType.INTS:return"ints";case oe.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case oe.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${oe.onnx.AttributeProto.AttributeType[t]}`)}}static getValue(e){let t=e instanceof oe.onnx.AttributeProto?e.type:e.type();if(t===oe.onnx.AttributeProto.AttributeType.GRAPH||t===oe.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let n=this.getValueNoCheck(e);if(t===oe.onnx.AttributeProto.AttributeType.INT&&nt.isLong(n))return nt.longToNumber(n);if(t===oe.onnx.AttributeProto.AttributeType.INTS){let e=n,t=new Array(e.length);for(let n=0;n<e.length;n++){let r=e[n];t[n]=nt.longToNumber(r)}return t}if(t===oe.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof oe.onnx.AttributeProto?Fe.fromProto(n):Fe.fromOrtTensor(n);if(t===oe.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof oe.onnx.AttributeProto)return n.map((e=>Fe.fromProto(e)));if(e instanceof mt.Attribute)return n.map((e=>Fe.fromOrtTensor(e)))}return t===oe.onnx.AttributeProto.AttributeType.STRING&&e instanceof oe.onnx.AttributeProto?sn(n):t===oe.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof oe.onnx.AttributeProto?n.map(sn):n}static getValueNoCheck(e){return e instanceof oe.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case oe.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case oe.onnx.AttributeProto.AttributeType.INT:return e.i;case oe.onnx.AttributeProto.AttributeType.STRING:return e.s;case oe.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case oe.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case oe.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case oe.onnx.AttributeProto.AttributeType.INTS:return e.ints;case oe.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case oe.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case oe.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${oe.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case mt.AttributeType.FLOAT:return e.f();case mt.AttributeType.INT:return e.i();case mt.AttributeType.STRING:return e.s();case mt.AttributeType.TENSOR:return e.t();case mt.AttributeType.GRAPH:return e.g();case mt.AttributeType.FLOATS:return e.floatsArray();case mt.AttributeType.INTS:{let t=[];for(let n=0;n<e.intsLength();n++)t.push(e.ints(n));return t}case mt.AttributeType.STRINGS:{let t=[];for(let n=0;n<e.stringsLength();n++)t.push(e.strings(n));return t}case mt.AttributeType.TENSORS:{let t=[];for(let n=0;n<e.tensorsLength();n++)t.push(e.tensors(n));return t}default:throw new Error(`unsupported attribute type: ${mt.AttributeType[e.type()]}`)}}}})),Zi,_o,Qi,kt,Oo,Ji,Tp=L((()=>{yp(),tn(),Zi=Er($r()),br(),fe(),_o=W.experimental.fbs,Qi={from:(e,t)=>new Ji(e,t)},kt=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=Ve.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},Oo=class{constructor(e,t){e instanceof Zi.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new mn(e.attribute)):e instanceof _o.Node&&(this.name=t??e.name(),this.opType=e.opType(),this.attributes=new mn(Ve.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},Ji=class{constructor(e,t){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(t),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof Zi.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else{if(!(e instanceof _o.Graph))throw new TypeError("Graph type is not supported.");this.buildGraphFromOrtFormat(e)}}buildGraphFromOnnxFormat(e){let t=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let n=new Map;if(!e.input)throw new Error("missing information in graph: input");let r=[];for(let n of e.input){if(t.has(n.name))throw new Error(`duplicated input name: ${n.name}`);let e=this._allData.push(new kt(n))-1;t.set(n.name,e),r.push(n.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let n of e.initializer){let e=t.get(n.name);if(void 0===e){let r=new kt;r.type={shape:{dims:Ve.tensorDimsFromProto(n.dims)},tensorType:Ve.tensorDataTypeFromProto(n.dataType)},e=this._allData.push(r)-1,t.set(n.name,e)}this._allData[e]._from=-1,this._allData[e].tensor=Fe.fromProto(n)}for(let e=0;e<this._allData.length;e++)this._allData[e].tensor||(this._allInputIndices.push(e),this._allInputNames.push(r[e]));if(!e.output)throw new Error("missing information in graph: output");for(let n of e.output){if(t.has(n.name))throw new Error(`duplicated output name: ${n.name}`);let e=this._allData.push(new kt(n))-1;t.set(n.name,e),this._allOutputIndices.push(e),this._allOutputNames.push(n.name)}if(!e.node)throw new Error("missing information in graph: node");for(let t of e.node){if(!t.name)for(let e=0;;e++){let r=`unnamed_${t.opType}_${e}`;if(!n.has(r)){t.name=r;break}}if(n.has(t.name))throw new Error(`duplicated node name: ${t.name}`);let e=this._nodes.push(new Oo(t))-1;n.set(t.name,e)}for(let n=0;n<this._nodes.length;n++){let r=this._nodes[n],s=e.node[n];if(!s.output)throw new Error(`missing output for node: ${s.name}`);for(let e of s.output){let a=t.get(e);if(typeof a>"u"&&(a=this._allData.push(new kt)-1,t.set(e,a)),r.outputs.push(a),void 0!==this._allData[a]._from)throw new Error(`multiple nodes output to one data value: ${a}`);if(this._allData[a]._from=n,"Constant"===s.opType){if(!s.attribute||1!==s.attribute.length||!s.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!s.output||1!==s.output.length)throw new Error("missing output or incorrect number of outputs for this Constant operator");r.outputs.pop(),r.executeNode=!1,this._allData[a]._from=-1,this._allData[a].tensor=Fe.fromProto(s.attribute[0].t)}}}for(let n=0;n<this._nodes.length;n++){let r=this._nodes[n],s=e.node[n];if(!s.input)throw new Error(`missing input for node: ${s.name}`);for(let e of s.input){let a=t.get(e);if(typeof a>"u"){if(""===e&&(3===s.input.length||4===s.input.length)&&"Resize"===s.opType)continue;throw new Error(`unrecognized input '${e}' for node: ${s.name}`)}r.inputs.push(a),this._allData[a]._to.push(n)}}return!0}buildGraphFromOrtFormat(e){let t=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let n=new Map,r=[];for(let n=0;n<e.inputsLength();n++){let s=e.inputs(n);if(t.has(s))throw new Error(`duplicated input name: ${s}`);for(let n=0;n<e.nodeArgsLength();n++)if(e.nodeArgs(n)?.name()===s){let a=new kt;if(e.nodeArgs(n)?.type()?.valueType()!==_o.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let i=e.nodeArgs(n).type().value(new _o.TensorTypeAndShape),o=Ve.tensorDataTypeFromProto(i.elemType()),l=i.shape(),u=[];for(let e=0;e<l.dimLength();e++)u.push(nt.longToNumber(l.dim(e).value().dimValue()));a.type={shape:{dims:u},tensorType:o};let c=this._allData.push(a)-1;t.set(s,c),r.push(s)}}for(let n=0;n<e.initializersLength();n++){let r=e.initializers(n),s=t.get(r.name());if(void 0===s){let e=new kt,n=Ve.tensorDimsFromORTFormat(r),a=Ve.tensorDataTypeFromProto(r.dataType());e.type={shape:{dims:n},tensorType:a},s=this._allData.push(e)-1,t.set(r.name(),s)}this._allData[s]._from=-1,this._allData[s].tensor=Fe.fromOrtTensor(r)}for(let e=0;e<this._allData.length;e++)this._allData[e].tensor||(this._allInputIndices.push(e),this._allInputNames.push(r[e]));for(let n=0;n<e.outputsLength();n++){let r=e.outputs(n);if(t.has(r))throw new Error(`duplicated output name: ${r}`);let s=this._allData.push(new kt)-1;t.set(r,s),this._allOutputIndices.push(s),this._allOutputNames.push(r)}if(!e.nodes)throw new Error("missing information in graph: node");for(let t=0;t<e.nodesLength();t++){let r=e.nodes(t),s=r.name();if(!s)for(let e=0;s=`unnamed_${r.opType()}_${e}`,n.has(s);e++);if(n.has(s))throw new Error(`duplicated node name: ${s}`);let a=this._nodes.push(new Oo(r,s))-1;n.set(s,a)}for(let n=0;n<this._nodes.length;n++){let r=this._nodes[n],s=e.nodes(n);if(null==s)throw new Error(`No node exists at index ${n}`);if(0===s?.outputsLength())throw new Error(`missing output for node: ${s.name}`);for(let e=0;e<s?.outputsLength();e++){let a=s?.outputs(e),i=t.get(a);if(typeof i>"u"&&(i=this._allData.push(new kt)-1,t.set(a,i)),r.outputs.push(i),void 0!==this._allData[i]._from)throw new Error(`multiple nodes output to one data value: ${i}`);if(this._allData[i]._from=n,"Constant"===s.opType()){if(1!==s.attributesLength()||!s.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(1!==s.outputsLength())throw new Error("missing output or incorrect number of outputs for this Constant operator");r.outputs.pop(),r.executeNode=!1,this._allData[i]._from=-1,this._allData[i].tensor=Fe.fromOrtTensor(s.attributes(0).t())}}}for(let n=0;n<this._nodes.length;n++){let r=this._nodes[n],s=e.nodes(n);if(0===s.inputsLength())throw new Error(`missing input for node: ${s.name}`);for(let e=0;e<s.inputsLength();e++){let a=s.inputs(e),i=t.get(a);if(typeof i>"u")throw new Error(`unrecognized input '${a}' for node: ${s.name()}`);r.inputs.push(i),this._allData[i]._to.push(n)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach((t=>{this._allData[t]._to.forEach((t=>{e.add(t)}))}));let t=Array.from(e),n=new Array(this._nodes.length).fill("white");for(;t.length>0;){let e=t.pop();"gray"===n[e]?n[e]="black":(t.push(e),n[e]="gray",this._nodes[e].outputs.forEach((r=>{let s=this._allData[r];if(typeof s.tensor<"u")throw new Error("node outputs should not be initialized");if(s._from!==e)throw new Error("from property of the Value object doesn't match index of Node being processed");s._to.forEach((e=>{if("gray"===n[e])throw new Error("model graph is cyclic");"white"===n[e]&&t.push(e)}))})))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,t=new Array(this._nodes.length,0),n=0;for(let e=0;e<this._nodes.length;e++)t[e]=n,this._nodes[e].executeNode?(n!==e&&(this._nodes[n]=this._nodes[e]),n++):this._nodes[e].outputs.forEach((e=>{this._allData[e]._from=-2}));this._nodes.splice(n,this._nodes.length-n);for(let e=0;e<this._allData.length;e++){let n=this._allData[e];void 0!==n._from&&-1!==n._from&&-2!==n._from&&(n._from=t[n._from]);for(let e=0;e<n._to.length;e++){if(!(n._to[e]>=0))throw new Error("Trying to update a removed node");n._to[e]=t[n._to[e]]}}e=0;for(let t=0;t<this._allData.length;t++)if(-2!==this._allData[t].from||-1!==this._allOutputIndices.indexOf(t+e)){if(e>0){let n=-1;void 0!==this._allData[t].from&&-1!==this._allData[t].from?(n=this._nodes[this._allData[t].from].outputs.indexOf(t+e),-1!==n&&(this._nodes[this._allData[t].from].outputs[n]=t)):(n=this._allInputIndices.indexOf(t+e),-1!==n&&(this._allInputIndices[n]=t)),this._allData[t].to.forEach((r=>{n=this._nodes[r].inputs.indexOf(t+e),-1!==n&&(this._nodes[r].inputs[n]=t)})),0===this._allData[t].to.length&&(n=this._allOutputIndices.indexOf(t+e),-1!==n&&(this._allOutputIndices[n]=t))}}else e++,this._allData.splice(t,1),t--}deleteNode(e){let t=this._nodes[e];if(t.outputs.length>1)for(let e=1;e<t.outputs.length;e++)if(this._allData[t.outputs[e]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ");t.executeNode=!1;let n=t.inputs[0],r=t.outputs[0],s=this._allData[r].to;for(let n=0;n<t.inputs.length;n++){let r=this._allData[t.inputs[n]].to.indexOf(e);if(-1===r)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[t.inputs[n]].to.splice(r,1)}this._allData[r]._to=[];let a=this._allOutputIndices.indexOf(r);if(-1!==a&&(this._allOutputIndices[a]=n),s&&s.length>0)for(let e of s){let t=this._nodes[e].inputs.indexOf(r);if(-1===t)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[e].inputs[t]=n,this._allData[n].to.push(e)}}removeAllDropoutNodes(){let e=0;for(let t of this._nodes){if("Dropout"===t.opType){if(1!==t.inputs.length)throw new Error("Dropout nodes should only contain one input. ");if(1!==t.outputs.length&&2!==t.outputs.length)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(2===t.outputs.length&&0!==this._allData[t.outputs[1]]._to.length)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let t of this._nodes)"Identity"===t.opType&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if("Conv"===e.opType){let t=this._allData[e.outputs[0]]._to;if(1===t.length&&this.isActivation(this._nodes[t[0]])){let n=this._nodes[t[0]];if("Clip"===n.opType)if(1===n.inputs.length)try{e.attributes.set("activation_params","floats",[n.attributes.getFloat("min"),n.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[hr,mr])}else{if(!(n.inputs.length>=3&&void 0!==this._allData[n.inputs[1]].tensor&&void 0!==this._allData[n.inputs[2]].tensor))continue;e.attributes.set("activation_params","floats",[this._allData[n.inputs[1]].tensor.floatData[0],this._allData[n.inputs[2]].tensor.floatData[0]])}e.attributes.set("activation","string",n.opType),this.deleteNode(t[0])}}}}})),xp,Jb,Io,vp=L((()=>{Wn(),Tp(),tn(),xp=Er($r()),fe(),Jb=W.experimental.fbs,Io=class{constructor(){}load(e,t,n){if(!n)try{return void this.loadFromOnnxFormat(e,t)}catch(e){if(void 0!==n)throw e}this.loadFromOrtFormat(e,t)}loadFromOnnxFormat(e,t){let n=xp.onnx.ModelProto.decode(e);if(nt.longToNumber(n.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=n.opsetImport.map((e=>({domain:e.domain,version:nt.longToNumber(e.version)}))),this._graph=Qi.from(n.graph,t)}loadFromOrtFormat(e,t){let n=new _.ByteBuffer(e),r=Jb.InferenceSession.getRootAsInferenceSession(n).model();if(nt.longToNumber(r.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let e=0;e<r.opsetImportLength();e++){let t=r.opsetImport(e);this._opsets.push({domain:t?.domain(),version:nt.longToNumber(t.version())})}this._graph=Qi.from(r.graph(),t)}get graph(){return this._graph}get opsets(){return this._opsets}}})),So,wp=L((()=>{bp(),gp(),ut(),vp(),So=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=zn.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,t,n){await this.profiler.event("session","Session.loadModel",(async()=>{let r=await Xi(this.backendHint);if(this.sessionHandler=r.createSessionHandler(this.context),this._model=new Io,"string"==typeof e){let t=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let n=await(void 0)(e);this.initialize(n,t)}else{let n=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(n),t)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let r=new Uint8Array(e,t||0,n||e.byteLength);this.initialize(r)}}))}initialize(e,t){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",(()=>{let n=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,n,t),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new wo(this._model.graph,this._ops,this.profiler)})),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",(async()=>{let t=this.normalizeAndValidateInputs(e),n=await this._executionPlan.execute(this.sessionHandler,t);return this.createOutput(n)}))}normalizeAndValidateInputs(e){let t=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==t.length)throw new Error(`incorrect input array length: expected ${t.length} but got ${e.length}`)}else{if(e.size!==t.length)throw new Error(`incorrect input map size: expected ${t.length} but got ${e.size}`);let n=new Array(e.size),r=0;for(let s=0;s<t.length;++s){let a=e.get(t[s]);if(!a)throw new Error(`missing input tensor for: '${name}'`);n[r++]=a}e=n}if(this.context.graphInputTypes&&0!==this.context.graphInputTypes.length&&this.context.graphInputDims&&0!==this.context.graphInputDims.length)this.validateInputTensorDims(this.context.graphInputDims,e,!1);else{let t=this._model.graph.getInputIndices(),n=this._model.graph.getValues(),r=new Array(t.length);for(let s=0;s<t.length;++s){let a=n[t[s]];r[s]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[s].dims)}this.validateInputTensorDims(r,e,!0)}return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,t){for(let n=0;n<t.length;n++){let r=e[n],s=t[n].type;if(r!==s)throw new Error(`input tensor[${n}] check failed: expected type '${r}' but got ${s}`)}}validateInputTensorDims(e,t,n){for(let r=0;r<t.length;r++){let s=e[r],a=t[r].dims;if(!this.compareTensorDims(s,a,n))throw new Error(`input tensor[${r}] check failed: expected shape '[${s.join(",")}]' but got [${a.join(",")}]`)}}compareTensorDims(e,t,n){if(e.length!==t.length)return!1;for(let r=0;r<e.length;++r)if(e[r]!==t[r]&&(!n||0!==e[r]))return!1;return!0}createOutput(e){let t=this._model.graph.getOutputNames();if(e.length!==t.length)throw new Error("expected number of outputs do not match number of generated outputs");let n=new Map;for(let r=0;r<t.length;++r)n.set(t[r],e[r]);return n}initializeOps(e){let t=e.getNodes();this._ops=new Array(t.length);for(let n=0;n<t.length;n++)this._ops[n]=this.sessionHandler.resolve(t[n],this._model.opsets,e)}}})),Ao,_p=L((()=>{vt(),br(),Ao=class{constructor(e){this.session=e,this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,t,n){let r=new Map;for(let t in e)if(Object.hasOwnProperty.call(e,t)){let n=e[t];r.set(t,new Fe(n.dims,n.type,void 0,void 0,n.data))}let s=await this.session.run(r),a={};return s.forEach(((e,t)=>{a[t]=new ke(e.type,e.data,e.dims)})),a}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}})),Op={};ar(Op,{onnxjsBackend:()=>Qb});var ea,Qb,Ip=L((()=>{wp(),_p(),Qb=new(ea=class{async init(){}async createInferenceSessionHandler(e,t){let n=new So(t);return await n.loadModel(e),new Ao(n)}})})),ta={};ar(ta,{createReadStream:()=>Sp,readFile:()=>eg,readFileSync:()=>tg});var eg,tg,Sp,ra=L((()=>{eg=void 0,tg=void 0,Sp=void 0})),na={};ar(na,{join:()=>rg});var rg,oa=L((()=>{rg=void 0})),Ep=me(((e,t)=>{var n,r=(n=(n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e={}){var t,r,s=e;s.ready=new Promise(((e,n)=>{t=e,r=n}));var a,i,o,l=Object.assign({},s),u="./this.program",c="object"==typeof window,h="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,d="";if(p){var f=(ra(),jt(ta)),m=(oa(),jt(na));d=h?m.dirname(d)+"/":__dirname+"/",a=(e,t)=>(e=F(e)?new URL(e):m.normalize(e),f.readFileSync(e,t?void 0:"utf8")),o=e=>((e=a(e,!0)).buffer||(e=new Uint8Array(e)),e),i=(e,t,n,r=!0)=>{e=F(e)?new URL(e):m.normalize(e),f.readFile(e,r?void 0:"utf8",((e,s)=>{e?n(e):t(r?s.buffer:s)}))},!s.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),s.inspect=()=>"[Emscripten Module object]"}else(c||h)&&(h?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),n&&(d=n),d=0!==d.indexOf("blob:")?d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):"",a=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(o=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),i=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var g=console.log.bind(console),y=console.error.bind(console);Object.assign(s,l),l=null,"object"!=typeof WebAssembly&&O("no native wasm support detected");var b,x,w,v,T,k,I=!1;function S(){var e=b.buffer;s.HEAP8=x=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAPU8=w=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAP32=v=new Int32Array(e),s.HEAPU32=T=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=k=new Float64Array(e)}var _=[],N=[],E=[],$=0,C=null,A=null;function O(e){throw y(e="Aborted("+e+")"),I=!0,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),r(e),e}var D,R=e=>e.startsWith("data:application/octet-stream;base64,"),F=e=>e.startsWith("file://");if(!R(D="ort-wasm.wasm")){var P=D;D=s.locateFile?s.locateFile(P,d):d+P}function M(e){if(o)return o(e);throw"both async and sync fetching of the wasm failed"}function L(e,t,n){return function(e){if(c||h){if("function"==typeof fetch&&!F(e))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>M(e)));if(i)return new Promise(((t,n)=>{i(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>M(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{y(`failed to asynchronously prepare wasm: ${e}`),O(e)}))}var z,B={919888:(e,t,n,r)=>{if(typeof s>"u"||!s.za)return 1;if((e=j(e>>>0)).startsWith("./")&&(e=e.substring(2)),!(e=s.za.get(e)))return 2;if((t>>>=0)+(n>>>=0)>e.byteLength)return 3;try{return w.set(e.subarray(t,t+n),r>>>0>>>0),0}catch{return 4}}};function U(e){this.xa=e-24,this.Ha=function(e){T[this.xa+4>>>2>>>0]=e},this.Ga=function(e){T[this.xa+8>>>2>>>0]=e},this.Aa=function(e,t){this.Fa(),this.Ha(e),this.Ga(t)},this.Fa=function(){T[this.xa+16>>>2>>>0]=0}}var V,W=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,G=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&W)return W.decode(e.subarray(t,n));for(r="";t<n;){var s=e[t++];if(128&s){var a=63&e[t++];if(192==(224&s))r+=String.fromCharCode((31&s)<<6|a);else{var i=63&e[t++];65536>(s=224==(240&s)?(15&s)<<12|a<<6|i:(7&s)<<18|a<<12|i<<6|63&e[t++])?r+=String.fromCharCode(s):(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s))}}else r+=String.fromCharCode(s)}return r},j=(e,t)=>(e>>>=0)?G(w,e,t):"",H=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},q=(e,t,n,r)=>{if(!(0<r))return 0;var s=n>>>=0;r=n+r-1;for(var a=0;a<e.length;++a){var i=e.charCodeAt(a);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-s},K=e=>e%4==0&&(e%100!=0||e%400==0),X=[0,31,60,91,121,152,182,213,244,274,305,335],Y=[0,31,59,90,120,151,181,212,243,273,304,334],Z=e=>{var t=H(e)+1,n=le(t);return n&&q(e,w,n,t),n},J=[],Q={},ee=()=>{if(!V){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"};for(e in Q)void 0===Q[e]?delete t[e]:t[e]=Q[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);V=n}return V},te=[null,[],[]],ne=[31,29,31,30,31,30,31,31,30,31,30,31],re=[31,28,31,30,31,30,31,31,30,31,30,31];function se(e,t,n,r){function s(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function a(e,t){return s(e,t,"0")}function i(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function o(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){var t=e.ta;for(e=new Date(new Date(e.ua+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(K(e.getFullYear())?ne:re)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=o(new Date(e.getFullYear(),0,4)),n=o(n),0>=i(t,e)?0>=i(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0;var u=T[40+(r>>>=0)>>>2>>>0];for(var c in r={Da:v[r>>>2>>>0],Ca:v[r+4>>>2>>>0],va:v[r+8>>>2>>>0],ya:v[r+12>>>2>>>0],wa:v[r+16>>>2>>>0],ua:v[r+20>>>2>>>0],oa:v[r+24>>>2>>>0],ta:v[r+28>>>2>>>0],Ia:v[r+32>>>2>>>0],Ba:v[r+36>>>2>>>0],Ea:u?j(u):""},n=j(n),u={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(c,"g"),u[c]);var h="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(c in u={"%a":e=>h[e.oa].substring(0,3),"%A":e=>h[e.oa],"%b":e=>p[e.wa].substring(0,3),"%B":e=>p[e.wa],"%C":e=>a((e.ua+1900)/100|0,2),"%d":e=>a(e.ya,2),"%e":e=>s(e.ya,2," "),"%g":e=>l(e).toString().substring(2),"%G":e=>l(e),"%H":e=>a(e.va,2),"%I":e=>(0==(e=e.va)?e=12:12<e&&(e-=12),a(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.wa-1;t+=(K(e.ua+1900)?ne:re)[n++]);return a(e.ya+t,3)},"%m":e=>a(e.wa+1,2),"%M":e=>a(e.Ca,2),"%n":()=>"\n","%p":e=>0<=e.va&&12>e.va?"AM":"PM","%S":e=>a(e.Da,2),"%t":()=>"\t","%u":e=>e.oa||7,"%U":e=>a(Math.floor((e.ta+7-e.oa)/7),2),"%V":e=>{var t=Math.floor((e.ta+7-(e.oa+6)%7)/7);if(2>=(e.oa+371-e.ta-2)%7&&t++,t)53==t&&(4==(n=(e.oa+371-e.ta)%7)||3==n&&K(e.ua)||(t=1));else{t=52;var n=(e.oa+7-e.ta-1)%7;(4==n||5==n&&K(e.ua%400-1))&&t++}return a(t,2)},"%w":e=>e.oa,"%W":e=>a(Math.floor((e.ta+7-(e.oa+6)%7)/7),2),"%y":e=>(e.ua+1900).toString().substring(2),"%Y":e=>e.ua+1900,"%z":e=>(0<=(e=e.Ba)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.Ea,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),u)n.includes(c)&&(n=n.replace(new RegExp(c,"g"),u[c](r)));return c=function(e){var t=Array(H(e)+1);return q(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%")),c.length>t?0:(x.set(c,e>>>0),c.length-1)}var ae={a:function(e,t,n){throw new U(e>>>=0).Aa(t>>>0,n>>>0),e},e:function(){return 0},H:function(){},x:function(){},z:function(){},J:function(){return 0},F:function(){},A:function(){},E:function(){},g:function(){},y:function(){},v:function(){},G:function(){},w:function(){},k:()=>1,n:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),v[n>>>2>>>0]=e.getUTCSeconds(),v[n+4>>>2>>>0]=e.getUTCMinutes(),v[n+8>>>2>>>0]=e.getUTCHours(),v[n+12>>>2>>>0]=e.getUTCDate(),v[n+16>>>2>>>0]=e.getUTCMonth(),v[n+20>>>2>>>0]=e.getUTCFullYear()-1900,v[n+24>>>2>>>0]=e.getUTCDay(),v[n+28>>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},o:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),v[n>>>2>>>0]=e.getSeconds(),v[n+4>>>2>>>0]=e.getMinutes(),v[n+8>>>2>>>0]=e.getHours(),v[n+12>>>2>>>0]=e.getDate(),v[n+16>>>2>>>0]=e.getMonth(),v[n+20>>>2>>>0]=e.getFullYear()-1900,v[n+24>>>2>>>0]=e.getDay(),v[n+28>>>2>>>0]=(K(e.getFullYear())?X:Y)[e.getMonth()]+e.getDate()-1|0,v[n+36>>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();v[n+32>>>2>>>0]=0|(t!=r&&e.getTimezoneOffset()==Math.min(r,t))},p:function(e){e>>>=0;var t=new Date(v[e+20>>>2>>>0]+1900,v[e+16>>>2>>>0],v[e+12>>>2>>>0],v[e+8>>>2>>>0],v[e+4>>>2>>>0],v[e>>>2>>>0],0),n=v[e+32>>>2>>>0],r=t.getTimezoneOffset(),s=new Date(t.getFullYear(),6,1).getTimezoneOffset(),a=new Date(t.getFullYear(),0,1).getTimezoneOffset(),i=Math.min(a,s);return 0>n?v[e+32>>>2>>>0]=+(s!=a&&i==r):0<n!=(i==r)&&(s=Math.max(a,s),t.setTime(t.getTime()+6e4*((0<n?i:s)-r))),v[e+24>>>2>>>0]=t.getDay(),v[e+28>>>2>>>0]=(K(t.getFullYear())?X:Y)[t.getMonth()]+t.getDate()-1|0,v[e>>>2>>>0]=t.getSeconds(),v[e+4>>>2>>>0]=t.getMinutes(),v[e+8>>>2>>>0]=t.getHours(),v[e+12>>>2>>>0]=t.getDate(),v[e+16>>>2>>>0]=t.getMonth(),v[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),isNaN(e)?(v[oe()>>>2>>>0]=61,e=-1):e/=1e3,ce((z=e,1<=+Math.abs(z)?0<z?+Math.floor(z/4294967296)>>>0:~~+Math.ceil((z-+(~~z>>>0))/4294967296)>>>0:0)),e>>>0},l:function(){return-52},m:function(){},t:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}n>>>=0;var s=(new Date).getFullYear(),a=new Date(s,0,1),i=new Date(s,6,1);s=a.getTimezoneOffset();var o=i.getTimezoneOffset();T[e>>>0>>>2>>>0]=60*Math.max(s,o),v[t>>>0>>>2>>>0]=+(s!=o),e=r(a),t=r(i),e=Z(e),t=Z(t),o<s?(T[n>>>2>>>0]=e,T[n+4>>>2>>>0]=t):(T[n>>>2>>>0]=t,T[n+4>>>2>>>0]=e)},d:()=>{O("")},B:function(e,t,n){e>>>=0,t>>>=0,n>>>=0,J.length=0;for(var r;r=w[t++>>>0];){var s=105!=r;n+=(s&=112!=r)&&n%8?4:0,J.push(112==r?T[n>>>2>>>0]:105==r?v[n>>>2>>>0]:k[n>>>3>>>0]),n+=s?8:4}return B[e].apply(null,J)},h:()=>Date.now(),u:function(){return 4294901760},b:()=>performance.now(),I:function(e,t,n){return t>>>=0,w.copyWithin(e>>>0>>>0,t>>>0,t+(n>>>0)>>>0)},s:function(e){e>>>=0;var t=w.length;if(4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var s=Math;r=Math.max(e,r);e:{s=(s.min.call(s,4294901760,r+(65536-r%65536)%65536)-b.buffer.byteLength+65535)/65536;try{b.grow(s),S();var a=1;break e}catch{}a=void 0}if(a)return!0}return!1},C:function(e,t){e>>>=0,t>>>=0;var n=0;return ee().forEach(((r,s)=>{var a=t+n;for(s=T[e+4*s>>>2>>>0]=a,a=0;a<r.length;++a)x[s++>>>0>>>0]=r.charCodeAt(a);x[s>>>0>>>0]=0,n+=r.length+1})),0},D:function(e,t){e>>>=0,t>>>=0;var n=ee();T[e>>>2>>>0]=n.length;var r=0;return n.forEach((e=>r+=e.length+1)),T[t>>>2>>>0]=r,0},f:()=>52,j:function(){return 52},q:function(){return 70},i:function(e,t,n,r){t>>>=0,n>>>=0,r>>>=0;for(var s=0,a=0;a<n;a++){var i=T[t>>>2>>>0],o=T[t+4>>>2>>>0];t+=8;for(var l=0;l<o;l++){var u=w[i+l>>>0],c=te[e];0===u||10===u?((1===e?g:y)(G(c,0)),c.length=0):c.push(u)}s+=o}return T[r>>>2>>>0]=s,0},r:se,c:function(e,t,n,r){return se(e>>>0,t>>>0,n>>>0,r>>>0)}},ie=function(){function e(e){return ie=e.exports,ie=function(){var e=ie,t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).la=t(e.la),e.ma=n(e.ma),e.qa=t(e.qa),e.sa=n(e.sa),e}(),b=ie.K,S(),N.unshift(ie.L),0==--$&&(null!==C&&(clearInterval(C),C=null),A&&(e=A,A=null,e())),ie}var t={a:ae};if($++,s.instantiateWasm)try{return s.instantiateWasm(t,e)}catch(e){y(`Module.instantiateWasm callback failed with error: ${e}`),r(e)}return function(e,t){var n=D;return"function"!=typeof WebAssembly.instantiateStreaming||R(n)||F(n)||p||"function"!=typeof fetch?L(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return y(`wasm streaming compile failed: ${r}`),y("falling back to ArrayBuffer instantiation"),L(n,e,t)}))))}(t,(function(t){e(t.instance)})).catch(r),{}}();s._OrtInit=(e,t)=>(s._OrtInit=ie.M)(e,t),s._OrtGetLastError=(e,t)=>(s._OrtGetLastError=ie.N)(e,t),s._OrtCreateSessionOptions=(e,t,n,r,a,i,o,l,u,c)=>(s._OrtCreateSessionOptions=ie.O)(e,t,n,r,a,i,o,l,u,c),s._OrtAppendExecutionProvider=(e,t)=>(s._OrtAppendExecutionProvider=ie.P)(e,t),s._OrtAddFreeDimensionOverride=(e,t,n)=>(s._OrtAddFreeDimensionOverride=ie.Q)(e,t,n),s._OrtAddSessionConfigEntry=(e,t,n)=>(s._OrtAddSessionConfigEntry=ie.R)(e,t,n),s._OrtReleaseSessionOptions=e=>(s._OrtReleaseSessionOptions=ie.S)(e),s._OrtCreateSession=(e,t,n)=>(s._OrtCreateSession=ie.T)(e,t,n),s._OrtReleaseSession=e=>(s._OrtReleaseSession=ie.U)(e),s._OrtGetInputOutputCount=(e,t,n)=>(s._OrtGetInputOutputCount=ie.V)(e,t,n),s._OrtGetInputName=(e,t)=>(s._OrtGetInputName=ie.W)(e,t),s._OrtGetOutputName=(e,t)=>(s._OrtGetOutputName=ie.X)(e,t),s._OrtFree=e=>(s._OrtFree=ie.Y)(e),s._OrtCreateTensor=(e,t,n,r,a,i)=>(s._OrtCreateTensor=ie.Z)(e,t,n,r,a,i),s._OrtGetTensorData=(e,t,n,r,a)=>(s._OrtGetTensorData=ie._)(e,t,n,r,a),s._OrtReleaseTensor=e=>(s._OrtReleaseTensor=ie.$)(e),s._OrtCreateRunOptions=(e,t,n,r)=>(s._OrtCreateRunOptions=ie.aa)(e,t,n,r),s._OrtAddRunConfigEntry=(e,t,n)=>(s._OrtAddRunConfigEntry=ie.ba)(e,t,n),s._OrtReleaseRunOptions=e=>(s._OrtReleaseRunOptions=ie.ca)(e),s._OrtCreateBinding=e=>(s._OrtCreateBinding=ie.da)(e),s._OrtBindInput=(e,t,n)=>(s._OrtBindInput=ie.ea)(e,t,n),s._OrtBindOutput=(e,t,n,r)=>(s._OrtBindOutput=ie.fa)(e,t,n,r),s._OrtClearBoundOutputs=e=>(s._OrtClearBoundOutputs=ie.ga)(e),s._OrtReleaseBinding=e=>(s._OrtReleaseBinding=ie.ha)(e),s._OrtRunWithBinding=(e,t,n,r,a)=>(s._OrtRunWithBinding=ie.ia)(e,t,n,r,a),s._OrtRun=(e,t,n,r,a,i,o,l)=>(s._OrtRun=ie.ja)(e,t,n,r,a,i,o,l),s._OrtEndProfiling=e=>(s._OrtEndProfiling=ie.ka)(e);var oe=()=>(oe=ie.la)(),le=s._malloc=e=>(le=s._malloc=ie.ma)(e);s._free=e=>(s._free=ie.na)(e);var ue,ce=e=>(ce=ie.pa)(e),he=()=>(he=ie.qa)(),pe=e=>(pe=ie.ra)(e),de=e=>(de=ie.sa)(e);function fe(){if(!(0<$)){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;){var e=s.preRun.shift();_.unshift(e)}for(;0<_.length;)_.shift()(s);if(!(0<$||ue||(ue=!0,s.calledRun=!0,I))){for(;0<N.length;)N.shift()(s);for(t(s);0<E.length;)E.shift()(s)}}}return s.stackAlloc=de,s.stackSave=he,s.stackRestore=pe,s.UTF8ToString=j,s.stringToUTF8=(e,t,n)=>q(e,w,t,n),s.lengthBytesUTF8=H,A=function e(){ue||fe(),ue||(A=e)},fe(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:void 0===(__WEBPACK_AMD_DEFINE_RESULT__=(()=>r).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__=[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)})),Dp=me((()=>{})),Lp=me((()=>{})),Fp={};ar(Fp,{cpus:()=>ng});var ng,$p=L((()=>{ng=void 0})),Bp=me(((e,t)=>{var n,r=(n=(n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e={}){function t(){return E.buffer!=A.buffer&&M(),A}function r(){return E.buffer!=A.buffer&&M(),O}function s(){return E.buffer!=A.buffer&&M(),D}function a(){return E.buffer!=A.buffer&&M(),R}function i(){return E.buffer!=A.buffer&&M(),F}var o,l,u=e;u.ready=new Promise(((e,t)=>{o=e,l=t}));var c,h,p,d=Object.assign({},u),f="./this.program",m=(e,t)=>{throw t},g="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,x=u.ENVIRONMENT_IS_PTHREAD||!1,w="";function v(e){return u.locateFile?u.locateFile(e,w):w+e}if(b){var T=(ra(),jt(ta)),k=(oa(),jt(na));let e;w=y?k.dirname(w)+"/":__dirname+"/",c=(e,t)=>(e=X(e)?new URL(e):k.normalize(e),T.readFileSync(e,t?void 0:"utf8")),p=e=>((e=c(e,!0)).buffer||(e=new Uint8Array(e)),e),h=(e,t,n,r=!0)=>{e=X(e)?new URL(e):k.normalize(e),T.readFile(e,r?void 0:"utf8",((e,s)=>{e?n(e):t(r?s.buffer:s)}))},!u.thisProgram&&1<process.argv.length&&(f=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),m=(e,t)=>{throw process.exitCode=e,t},u.inspect=()=>"[Emscripten Module object]";try{e=Dp()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}__webpack_require__.g.Worker=e.Worker}else(g||y)&&(y?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),typeof n<"u"&&n&&(w=n),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",b||(c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),h=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));b&&typeof performance>"u"&&(__webpack_require__.g.performance=Lp().performance);var I=console.log.bind(console),S=console.error.bind(console);b&&(I=(...e)=>T.writeSync(1,e.join(" ")+"\n"),S=(...e)=>T.writeSync(2,e.join(" ")+"\n"));var _=I,N=S;Object.assign(u,d),d=null,"object"!=typeof WebAssembly&&H("no native wasm support detected");var E,$,C,A,O,D,R,F,P=!1;function M(){var e=E.buffer;u.HEAP8=A=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAPU8=O=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAP32=D=new Int32Array(e),u.HEAPU32=R=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=F=new Float64Array(e)}var L=16777216;if(x)E=u.wasmMemory;else if(u.wasmMemory)E=u.wasmMemory;else if(!((E=new WebAssembly.Memory({initial:L/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw N("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&N("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");M(),L=E.buffer.byteLength;var z=[],B=[],U=[],V=0,W=null,G=null;function j(){if(0==--V&&(null!==W&&(clearInterval(W),W=null),G)){var e=G;G=null,e()}}function H(e){throw N(e="Aborted("+e+")"),P=!0,C=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),l(e),e}var q,K=e=>e.startsWith("data:application/octet-stream;base64,"),X=e=>e.startsWith("file://");function Y(e){if(p)return p(e);throw"both async and sync fetching of the wasm failed"}function Z(e,t,n){return function(e){if(g||y){if("function"==typeof fetch&&!X(e))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>Y(e)));if(h)return new Promise(((t,n)=>{h(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>Y(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{N(`failed to asynchronously prepare wasm: ${e}`),H(e)}))}K(q="ort-wasm-threaded.wasm")||(q=v(q));var J,Q={921276:(e,t,n,s)=>{if(typeof u>"u"||!u.cb)return 1;if((e=ie(e>>>0)).startsWith("./")&&(e=e.substring(2)),!(e=u.cb.get(e)))return 2;if(s>>>=0,(t>>>=0)+(n>>>=0)>e.byteLength)return 3;try{return r().set(e.subarray(t,t+n),s>>>0),0}catch{return 4}}};function ee(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var te=e=>{e.terminate(),e.onmessage=()=>{}},ne=e=>{0==pe.Pa.length&&(he(),pe.Ya(pe.Pa[0]));var t=pe.Pa.pop();if(!t)return 6;pe.Qa.push(t),pe.Ma[e.Oa]=t,t.Oa=e.Oa;var n={cmd:"run",start_routine:e.kb,arg:e.hb,pthread_ptr:e.Oa};return b&&t.unref(),t.postMessage(n,e.qb),0},re=0,se=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ae=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&se)return se.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(r="";t<n;){var s=e[t++];if(128&s){var a=63&e[t++];if(192==(224&s))r+=String.fromCharCode((31&s)<<6|a);else{var i=63&e[t++];65536>(s=224==(240&s)?(15&s)<<12|a<<6|i:(7&s)<<18|a<<12|i<<6|63&e[t++])?r+=String.fromCharCode(s):(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s))}}else r+=String.fromCharCode(s)}return r},ie=(e,t)=>(e>>>=0)?ae(r(),e,t):"",oe=e=>{var t=xt();return e=e(),wt(t),e};function le(e,t){var n=arguments.length-2,r=arguments;return oe((()=>{for(var s=vt(8*n),a=s>>>3,o=0;o<n;o++){var l=r[2+o];i()[a+o>>>0]=l}return dt(e,n,s,t)}))}function ue(e){if(x)return le(0,1,e);C=e,0<re||(pe.lb(),u.onExit?.(e),P=!0),m(e,new ee(e))}var ce=e=>{if(C=e,x)throw fe(e),"unwind";ue(e)};function he(){var e=v("ort-wasm-threaded.worker.js");e=new Worker(e),pe.Pa.push(e)}var pe={Pa:[],Qa:[],bb:[],Ma:{},Wa(){x?(pe.receiveObjectTransfer=pe.jb,pe.threadInitTLS=pe.ab,pe.setExitStatus=pe.$a):function(){for(var e=u.numThreads;e--;)he();z.unshift((()=>{V++,function(e){x?e():Promise.all(pe.Pa.map(pe.Ya)).then(e)}((()=>j()))}))}()},$a:e=>C=e,tb:["$terminateWorker"],lb:()=>{for(var e of pe.Qa)te(e);for(e of pe.Pa)te(e);pe.Pa=[],pe.Qa=[],pe.Ma=[]},Za:e=>{var t=e.Oa;delete pe.Ma[t],pe.Pa.push(e),pe.Qa.splice(pe.Qa.indexOf(e),1),e.Oa=0,ft(t)},jb(){},ab(){pe.bb.forEach((e=>e()))},Ya:e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=ut()){var s=pe.Ma[n.targetThread];s?s.postMessage(n,n.transferList):N(`Internal error! Worker sent a message "${r}" to target pthread ${n.targetThread}, but that thread no longer exists!`)}else"checkMailbox"===r?Me():"spawnThread"===r?ne(n):"cleanupThread"===r?pe.Za(pe.Ma[n.thread]):"killThread"===r?(n=n.thread,r=pe.Ma[n],delete pe.Ma[n],te(r),ft(n),pe.Qa.splice(pe.Qa.indexOf(r),1),r.Oa=0):"cancelThread"===r?pe.Ma[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(e.loaded=!0,b&&!e.Oa&&e.unref(),t(e)):"alert"===r?alert(`Thread ${n.threadId}: ${n.text}`):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?u[n.handler](...n.args):r&&N(`worker sent an unknown command ${r}`)},e.onerror=e=>{throw N(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`),e},b&&(e.on("message",(t=>e.onmessage({data:t}))),e.on("error",(t=>e.onerror(t))));var r,s=[];for(r of["onExit"])u.hasOwnProperty(r)&&s.push(r);e.postMessage({cmd:"load",handlers:s,urlOrBlob:u.mainScriptUrlOrBlob||n,wasmMemory:E,wasmModule:$})}))};u.PThread=pe;var de=e=>{for(;0<e.length;)e.shift()(u)};function fe(e){if(x)return le(1,0,e);ce(e)}u.establishStackSpace=()=>{var e=ut(),t=a()[e+52>>>2>>>0];e=a()[e+56>>>2>>>0],bt(t,t-e),wt(t)};var me,ge=[];function ye(e){this.Va=e-24,this.gb=function(e){a()[this.Va+4>>>2>>>0]=e},this.fb=function(e){a()[this.Va+8>>>2>>>0]=e},this.Wa=function(e,t){this.eb(),this.gb(e),this.fb(t)},this.eb=function(){a()[this.Va+16>>>2>>>0]=0}}function be(e,t,n,r){return x?le(2,1,e,t,n,r):xe(e,t,n,r)}function xe(e,t,n,r){if(e>>>=0,t>>>=0,n>>>=0,r>>>=0,typeof SharedArrayBuffer>"u")return N("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var s=[];return x&&0===s.length?be(e,t,n,r):(e={kb:n,Oa:e,hb:r,qb:s},x?(e.sb="spawnThread",postMessage(e,s),0):ne(e))}function we(e,t,n){return x?le(3,1,e,t,n):0}function ve(e,t){if(x)return le(4,1,e,t)}u.invokeEntryPoint=(e,t)=>{var n=ge[e];n||(e>=ge.length&&(ge.length=e+1),ge[e]=n=me.get(e)),e=n(t),0<re?pe.$a(e):mt(e)};var Te=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},ke=(e,t,n,r)=>{if(!(0<r))return 0;var s=n>>>=0;r=n+r-1;for(var a=0;a<e.length;++a){var i=e.charCodeAt(a);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-s},Ie=(e,t,n)=>ke(e,r(),t,n);function Se(e,t){if(x)return le(5,1,e,t)}function _e(e,t,n){if(x)return le(6,1,e,t,n)}function Ne(e,t,n){return x?le(7,1,e,t,n):0}function Ee(e,t){if(x)return le(8,1,e,t)}function $e(e,t,n){if(x)return le(9,1,e,t,n)}function Ce(e,t,n,r){if(x)return le(10,1,e,t,n,r)}function Ae(e,t,n,r){if(x)return le(11,1,e,t,n,r)}function Oe(e,t,n,r){if(x)return le(12,1,e,t,n,r)}function De(e){if(x)return le(13,1,e)}function Re(e,t){if(x)return le(14,1,e,t)}function Fe(e,t,n){if(x)return le(15,1,e,t,n)}function Pe(e){e>>>=0,"function"==typeof Atomics.rb&&(Atomics.rb(s(),e>>>2,e).value.then(Me),e+=128,Atomics.store(s(),e>>>2,1))}u.__emscripten_thread_mailbox_await=Pe;var Me=()=>{var e=ut();if(e&&(Pe(e),e=gt,!P))try{if(e(),!(0<re))try{x?mt(C):ce(C)}catch(e){e instanceof ee||"unwind"==e||m(1,e)}}catch(e){e instanceof ee||"unwind"==e||m(1,e)}};u.checkMailbox=Me;var Le=[],ze=e=>e%4==0&&(e%100!=0||e%400==0),Be=[0,31,60,91,121,152,182,213,244,274,305,335],Ue=[0,31,59,90,120,151,181,212,243,273,304,334];function Ve(e,t,n,r,s,a,i,o){return x?le(16,1,e,t,n,r,s,a,i,o):-52}function We(e,t,n,r,s,a,i){if(x)return le(17,1,e,t,n,r,s,a,i)}var Ge,je=e=>{var t=Te(e)+1,n=ct(t);return n&&Ie(e,n,t),n},He=[],qe={},Ke=()=>{if(!Ge){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:f||"./this.program"};for(e in qe)void 0===qe[e]?delete t[e]:t[e]=qe[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Ge=n}return Ge};function Xe(e,n){if(x)return le(18,1,e,n);e>>>=0,n>>>=0;var r=0;return Ke().forEach(((s,i)=>{var o=n+r;for(i=a()[e+4*i>>>2>>>0]=o,o=0;o<s.length;++o)t()[i++>>>0>>>0]=s.charCodeAt(o);t()[i>>>0>>>0]=0,r+=s.length+1})),0}function Ye(e,t){if(x)return le(19,1,e,t);e>>>=0,t>>>=0;var n=Ke();a()[e>>>2>>>0]=n.length;var r=0;return n.forEach((e=>r+=e.length+1)),a()[t>>>2>>>0]=r,0}function Ze(e){return x?le(20,1,e):52}function Je(e,t,n,r){return x?le(21,1,e,t,n,r):52}function Qe(e,t,n,r,s){return x?le(22,1,e,t,n,r,s):70}var et=[null,[],[]];function tt(e,t,n,s){if(x)return le(23,1,e,t,n,s);t>>>=0,n>>>=0,s>>>=0;for(var i=0,o=0;o<n;o++){var l=a()[t>>>2>>>0],u=a()[t+4>>>2>>>0];t+=8;for(var c=0;c<u;c++){var h=r()[l+c>>>0],p=et[e];0===h||10===h?((1===e?_:N)(ae(p,0)),p.length=0):p.push(h)}i+=u}return a()[s>>>2>>>0]=i,0}var nt=[31,29,31,30,31,30,31,31,30,31,30,31],rt=[31,28,31,30,31,30,31,31,30,31,30,31];function st(e,n,r,i){function o(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function l(e,t){return o(e,t,"0")}function u(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function c(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function h(e){var t=e.Ra;for(e=new Date(new Date(e.Sa+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(ze(e.getFullYear())?nt:rt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=c(new Date(e.getFullYear(),0,4)),n=c(n),0>=u(t,e)?0>=u(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,n>>>=0,r>>>=0,i>>>=0;var p=a()[i+40>>>2>>>0];for(var d in i={ob:s()[i>>>2>>>0],nb:s()[i+4>>>2>>>0],Ta:s()[i+8>>>2>>>0],Xa:s()[i+12>>>2>>>0],Ua:s()[i+16>>>2>>>0],Sa:s()[i+20>>>2>>>0],Na:s()[i+24>>>2>>>0],Ra:s()[i+28>>>2>>>0],ub:s()[i+32>>>2>>>0],mb:s()[i+36>>>2>>>0],pb:p?ie(p):""},r=ie(r),p={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})r=r.replace(new RegExp(d,"g"),p[d]);var f="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),m="January February March April May June July August September October November December".split(" ");for(d in p={"%a":e=>f[e.Na].substring(0,3),"%A":e=>f[e.Na],"%b":e=>m[e.Ua].substring(0,3),"%B":e=>m[e.Ua],"%C":e=>l((e.Sa+1900)/100|0,2),"%d":e=>l(e.Xa,2),"%e":e=>o(e.Xa,2," "),"%g":e=>h(e).toString().substring(2),"%G":e=>h(e),"%H":e=>l(e.Ta,2),"%I":e=>(0==(e=e.Ta)?e=12:12<e&&(e-=12),l(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Ua-1;t+=(ze(e.Sa+1900)?nt:rt)[n++]);return l(e.Xa+t,3)},"%m":e=>l(e.Ua+1,2),"%M":e=>l(e.nb,2),"%n":()=>"\n","%p":e=>0<=e.Ta&&12>e.Ta?"AM":"PM","%S":e=>l(e.ob,2),"%t":()=>"\t","%u":e=>e.Na||7,"%U":e=>l(Math.floor((e.Ra+7-e.Na)/7),2),"%V":e=>{var t=Math.floor((e.Ra+7-(e.Na+6)%7)/7);if(2>=(e.Na+371-e.Ra-2)%7&&t++,t)53==t&&(4==(n=(e.Na+371-e.Ra)%7)||3==n&&ze(e.Sa)||(t=1));else{t=52;var n=(e.Na+7-e.Ra-1)%7;(4==n||5==n&&ze(e.Sa%400-1))&&t++}return l(t,2)},"%w":e=>e.Na,"%W":e=>l(Math.floor((e.Ra+7-(e.Na+6)%7)/7),2),"%y":e=>(e.Sa+1900).toString().substring(2),"%Y":e=>e.Sa+1900,"%z":e=>(0<=(e=e.mb)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.pb,"%%":()=>"%"},r=r.replace(/%%/g,"\0\0"),p)r.includes(d)&&(r=r.replace(new RegExp(d,"g"),p[d](i)));return d=function(e){var t=Array(Te(e)+1);return ke(e,t,0,t.length),t}(r=r.replace(/\0\0/g,"%")),d.length>n?0:(((e,n)=>{t().set(e,n>>>0)})(d,e),d.length-1)}pe.Wa();var at=[ue,fe,be,we,ve,Se,_e,Ne,Ee,$e,Ce,Ae,Oe,De,Re,Fe,Ve,We,Xe,Ye,Ze,Je,Qe,tt],it={b:function(e,t,n){throw new ye(e>>>=0).Wa(t>>>0,n>>>0),e},L:function(e){ht(e>>>0,!y,1,!g,131072,!1),pe.ab()},j:function(e){e>>>=0,x?postMessage({cmd:"cleanupThread",thread:e}):pe.Za(pe.Ma[e])},H:xe,h:we,S:ve,D:Se,F:_e,T:Ne,Q:Ee,J:$e,P:Ce,n:Ae,E:Oe,B:De,R:Re,C:Fe,p:()=>1,z:function(e,t){(e>>>=0)==t>>>0?setTimeout((()=>Me())):x?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=pe.Ma[e])&&e.postMessage({cmd:"checkMailbox"})},I:function(e,t,n,r){t>>>=0,Le.length=n,r=r>>>0>>>3;for(var s=0;s<n;s++)Le[s]=i()[r+s>>>0];return e=0>e?Q[-e-1]:at[e],pe.ib=t,t=e.apply(null,Le),pe.ib=0,t},K:Pe,o:function(e){b&&pe.Ma[e>>>0].ref()},s:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),s()[n>>>2>>>0]=e.getUTCSeconds(),s()[n+4>>>2>>>0]=e.getUTCMinutes(),s()[n+8>>>2>>>0]=e.getUTCHours(),s()[n+12>>>2>>>0]=e.getUTCDate(),s()[n+16>>>2>>>0]=e.getUTCMonth(),s()[n+20>>>2>>>0]=e.getUTCFullYear()-1900,s()[n+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[n+28>>>2>>>0]=e},t:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),s()[n>>>2>>>0]=e.getSeconds(),s()[n+4>>>2>>>0]=e.getMinutes(),s()[n+8>>>2>>>0]=e.getHours(),s()[n+12>>>2>>>0]=e.getDate(),s()[n+16>>>2>>>0]=e.getMonth(),s()[n+20>>>2>>>0]=e.getFullYear()-1900,s()[n+24>>>2>>>0]=e.getDay(),t=(ze(e.getFullYear())?Be:Ue)[e.getMonth()]+e.getDate()-1|0,s()[n+28>>>2>>>0]=t,s()[n+36>>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=r&&e.getTimezoneOffset()==Math.min(r,t)),s()[n+32>>>2>>>0]=e},u:function(e){e>>>=0;var t=new Date(s()[e+20>>>2>>>0]+1900,s()[e+16>>>2>>>0],s()[e+12>>>2>>>0],s()[e+8>>>2>>>0],s()[e+4>>>2>>>0],s()[e>>>2>>>0],0),n=s()[e+32>>>2>>>0],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(i,a);return 0>n?s()[e+32>>>2>>>0]=+(a!=i&&o==r):0<n!=(o==r)&&(a=Math.max(i,a),t.setTime(t.getTime()+6e4*((0<n?o:a)-r))),s()[e+24>>>2>>>0]=t.getDay(),n=(ze(t.getFullYear())?Be:Ue)[t.getMonth()]+t.getDate()-1|0,s()[e+28>>>2>>>0]=n,s()[e>>>2>>>0]=t.getSeconds(),s()[e+4>>>2>>>0]=t.getMinutes(),s()[e+8>>>2>>>0]=t.getHours(),s()[e+12>>>2>>>0]=t.getDate(),s()[e+16>>>2>>>0]=t.getMonth(),s()[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),isNaN(e)?(s()[lt()>>>2>>>0]=61,e=-1):e/=1e3,yt((J=e,1<=+Math.abs(J)?0<J?+Math.floor(J/4294967296)>>>0:~~+Math.ceil((J-+(~~J>>>0))/4294967296)>>>0:0)),e>>>0},q:Ve,r:We,y:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}e>>>=0,t>>>=0,n>>>=0;var i=(new Date).getFullYear(),o=new Date(i,0,1),l=new Date(i,6,1);i=o.getTimezoneOffset();var u=l.getTimezoneOffset(),c=Math.max(i,u);a()[e>>>2>>>0]=60*c,s()[t>>>2>>>0]=+(i!=u),e=r(o),t=r(l),e=je(e),t=je(t),u<i?(a()[n>>>2>>>0]=e,a()[n+4>>>2>>>0]=t):(a()[n>>>2>>>0]=t,a()[n+4>>>2>>>0]=e)},c:()=>{H("")},O:function(e,t,n){e>>>=0,t>>>=0,n>>>=0,He.length=0;for(var o;o=r()[t++>>>0];){var l=105!=o;n+=(l&=112!=o)&&n%8?4:0,He.push(112==o?a()[n>>>2>>>0]:105==o?s()[n>>>2>>>0]:i()[n>>>3>>>0]),n+=l?8:4}return Q[e].apply(null,He)},k:()=>{},i:()=>Date.now(),U:()=>{throw re+=1,"unwind"},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:()=>b?($p(),jt(Fp)).cpus().length:navigator.hardwareConcurrency,x:function(e){e>>>=0;var t=r().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var s=t*(1+.2/n);s=Math.min(s,e+100663296);var a=Math;s=Math.max(e,s);e:{a=(a.min.call(a,4294901760,s+(65536-s%65536)%65536)-E.buffer.byteLength+65535)/65536;try{E.grow(a),M();var i=1;break e}catch{}i=void 0}if(i)return!0}return!1},M:Xe,N:Ye,G:ce,g:Ze,m:Je,v:Qe,l:tt,a:E||u.wasmMemory,w:st,d:function(e,t,n,r){return st(e>>>0,t>>>0,n>>>0,r>>>0)}},ot=function(){function e(e,t){return ot=e.exports,ot=function(){var e=ot,t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).va=t(e.va),e.wa=t(e.wa),e.xa=n(e.xa),e.emscripten_main_runtime_thread_id=t(e.emscripten_main_runtime_thread_id),e.Ja=t(e.Ja),e.La=n(e.La),e}(),pe.bb.push(ot.za),me=ot.Aa,B.unshift(ot.V),$=t,j(),ot}var t={a:it};if(V++,u.instantiateWasm)try{return u.instantiateWasm(t,e)}catch(e){N(`Module.instantiateWasm callback failed with error: ${e}`),l(e)}return function(e,t){var n=q;return"function"!=typeof WebAssembly.instantiateStreaming||K(n)||X(n)||b||"function"!=typeof fetch?Z(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return N(`wasm streaming compile failed: ${r}`),N("falling back to ArrayBuffer instantiation"),Z(n,e,t)}))))}(t,(function(t){e(t.instance,t.module)})).catch(l),{}}();u._OrtInit=(e,t)=>(u._OrtInit=ot.W)(e,t),u._OrtGetLastError=(e,t)=>(u._OrtGetLastError=ot.X)(e,t),u._OrtCreateSessionOptions=(e,t,n,r,s,a,i,o,l,c)=>(u._OrtCreateSessionOptions=ot.Y)(e,t,n,r,s,a,i,o,l,c),u._OrtAppendExecutionProvider=(e,t)=>(u._OrtAppendExecutionProvider=ot.Z)(e,t),u._OrtAddFreeDimensionOverride=(e,t,n)=>(u._OrtAddFreeDimensionOverride=ot._)(e,t,n),u._OrtAddSessionConfigEntry=(e,t,n)=>(u._OrtAddSessionConfigEntry=ot.$)(e,t,n),u._OrtReleaseSessionOptions=e=>(u._OrtReleaseSessionOptions=ot.aa)(e),u._OrtCreateSession=(e,t,n)=>(u._OrtCreateSession=ot.ba)(e,t,n),u._OrtReleaseSession=e=>(u._OrtReleaseSession=ot.ca)(e),u._OrtGetInputOutputCount=(e,t,n)=>(u._OrtGetInputOutputCount=ot.da)(e,t,n),u._OrtGetInputName=(e,t)=>(u._OrtGetInputName=ot.ea)(e,t),u._OrtGetOutputName=(e,t)=>(u._OrtGetOutputName=ot.fa)(e,t),u._OrtFree=e=>(u._OrtFree=ot.ga)(e),u._OrtCreateTensor=(e,t,n,r,s,a)=>(u._OrtCreateTensor=ot.ha)(e,t,n,r,s,a),u._OrtGetTensorData=(e,t,n,r,s)=>(u._OrtGetTensorData=ot.ia)(e,t,n,r,s),u._OrtReleaseTensor=e=>(u._OrtReleaseTensor=ot.ja)(e),u._OrtCreateRunOptions=(e,t,n,r)=>(u._OrtCreateRunOptions=ot.ka)(e,t,n,r),u._OrtAddRunConfigEntry=(e,t,n)=>(u._OrtAddRunConfigEntry=ot.la)(e,t,n),u._OrtReleaseRunOptions=e=>(u._OrtReleaseRunOptions=ot.ma)(e),u._OrtCreateBinding=e=>(u._OrtCreateBinding=ot.na)(e),u._OrtBindInput=(e,t,n)=>(u._OrtBindInput=ot.oa)(e,t,n),u._OrtBindOutput=(e,t,n,r)=>(u._OrtBindOutput=ot.pa)(e,t,n,r),u._OrtClearBoundOutputs=e=>(u._OrtClearBoundOutputs=ot.qa)(e),u._OrtReleaseBinding=e=>(u._OrtReleaseBinding=ot.ra)(e),u._OrtRunWithBinding=(e,t,n,r,s)=>(u._OrtRunWithBinding=ot.sa)(e,t,n,r,s),u._OrtRun=(e,t,n,r,s,a,i,o)=>(u._OrtRun=ot.ta)(e,t,n,r,s,a,i,o),u._OrtEndProfiling=e=>(u._OrtEndProfiling=ot.ua)(e);var lt=()=>(lt=ot.va)(),ut=u._pthread_self=()=>(ut=u._pthread_self=ot.wa)(),ct=u._malloc=e=>(ct=u._malloc=ot.xa)(e);u._free=e=>(u._free=ot.ya)(e),u.__emscripten_tls_init=()=>(u.__emscripten_tls_init=ot.za)();var ht=u.__emscripten_thread_init=(e,t,n,r,s,a)=>(ht=u.__emscripten_thread_init=ot.Ba)(e,t,n,r,s,a);u.__emscripten_thread_crashed=()=>(u.__emscripten_thread_crashed=ot.Ca)();var pt,dt=(e,t,n,r)=>(dt=ot.Da)(e,t,n,r),ft=e=>(ft=ot.Ea)(e),mt=u.__emscripten_thread_exit=e=>(mt=u.__emscripten_thread_exit=ot.Fa)(e),gt=()=>(gt=ot.Ga)(),yt=e=>(yt=ot.Ha)(e),bt=(e,t)=>(bt=ot.Ia)(e,t),xt=()=>(xt=ot.Ja)(),wt=e=>(wt=ot.Ka)(e),vt=e=>(vt=ot.La)(e);function Tt(){if(!(0<V))if(x)o(u),x||de(B),startWorker(u);else{if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)z.unshift(u.preRun.shift());de(z),0<V||pt||(pt=!0,u.calledRun=!0,P||(x||de(B),o(u),x||de(U)))}}return u.wasmMemory=E,u.stackAlloc=vt,u.stackSave=xt,u.stackRestore=wt,u.keepRuntimeAlive=()=>0<re,u.UTF8ToString=ie,u.stringToUTF8=Ie,u.lengthBytesUTF8=Te,u.ExitStatus=ee,u.PThread=pe,G=function e(){pt||Tt(),pt||(G=e)},Tt(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:void 0===(__WEBPACK_AMD_DEFINE_RESULT__=(()=>r).apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__=[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)})),Np=me(((e,t)=>{t.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'})),Mp,ig,sa,ua,Po,Rp,ag,sg,ug,Gp,Ee,zr=L((()=>{Mp=Ep(),ig=Bp(),ua=!1,Po=!1,Rp=!1,ag=e=>{if(1===e)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},sg=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},ug=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Gp=async e=>{if(ua)return Promise.resolve();if(Po)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Rp)throw new Error("previous call to 'initializeWebAssembly()' failed.");Po=!0;let t=e.initTimeout,n=e.numThreads,r=e.simd,s=ag(n),a=r&&sg(),i=e.wasmPaths,o="string"==typeof i?i:void 0,l=ug(a,s),u="object"==typeof i?i[l]:void 0,c=!1,h=[];if(t>0&&h.push(new Promise((e=>{setTimeout((()=>{c=!0,e()}),t)}))),h.push(new Promise(((e,t)=>{let r=s?ig:Mp,a={locateFile:(e,t)=>s&&e.endsWith(".worker.js")&&typeof Blob<"u"?URL.createObjectURL(new Blob([Np()],{type:"text/javascript"})):e.endsWith(".wasm")?u||(o??t)+l:t+e};if(s)if(a.numThreads=n,typeof Blob>"u")a.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let e=`var ortWasmThreaded=${r.toString()};`;a.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}r(a).then((t=>{Po=!1,ua=!0,sa=t,e()}),(e=>{Po=!1,Rp=!0,t(e)}))}))),await Promise.race(h),c)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ee=()=>{if(ua&&sa)return sa;throw new Error("WebAssembly is not initialized yet.")}})),De,bn,Oe,Eo=L((()=>{zr(),De=(e,t)=>{let n=Ee(),r=n.lengthBytesUTF8(e)+1,s=n._malloc(r);return n.stringToUTF8(e,s,r),t.push(s),s},bn=(e,t,n,r)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach((([e,s])=>{let a=t?t+e:e;if("object"==typeof s)bn(s,a+".",n,r);else if("string"==typeof s||"number"==typeof s)r(a,s.toString());else{if("boolean"!=typeof s)throw new Error("Can't handle extra config type: "+typeof s);r(a,s?"1":"0")}}))},Oe=e=>{let t=Ee(),n=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let r=t.HEAP32[n/4],s=t.HEAPU32[n/4+1],a=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(n)}}})),Up,zp=L((()=>{zr(),Eo(),Up=e=>{let t=Ee(),n=0,r=[],s=e||{};try{if(void 0===e?.logSeverityLevel)s.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===e?.logVerbosityLevel)s.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===e?.terminate&&(s.terminate=!1);let a=0;return void 0!==e?.tag&&(a=De(e.tag,r)),n=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,a),0===n&&Oe("Can't create run options."),void 0!==e?.extra&&bn(e.extra,"",new WeakSet,((e,s)=>{let a=De(e,r),i=De(s,r);0!==t._OrtAddRunConfigEntry(n,a,i)&&Oe(`Can't set a run config entry: ${e} - ${s}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),r.forEach((e=>t._free(e))),e}}})),lg,fg,cg,pg,Vp,Wp=L((()=>{zr(),Eo(),lg=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},fg=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},cg=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)},pg=(e,t,n)=>{for(let r of t){let t="string"==typeof r?r:r.name;switch(t){case"webnn":if(t="WEBNN","string"!=typeof r){let t=r;if(t?.deviceType){let r=De("deviceType",n),s=De(t.deviceType,n);0!==Ee()._OrtAddSessionConfigEntry(e,r,s)&&Oe(`Can't set a session config entry: 'deviceType' - ${t.deviceType}.`)}if(t?.numThreads){let r=t.numThreads;("number"!=typeof r||!Number.isInteger(r)||r<0)&&(r=0);let s=De("numThreads",n),a=De(r.toString(),n);0!==Ee()._OrtAddSessionConfigEntry(e,s,a)&&Oe(`Can't set a session config entry: 'numThreads' - ${t.numThreads}.`)}if(t?.powerPreference){let r=De("powerPreference",n),s=De(t.powerPreference,n);0!==Ee()._OrtAddSessionConfigEntry(e,r,s)&&Oe(`Can't set a session config entry: 'powerPreference' - ${t.powerPreference}.`)}}break;case"webgpu":if(t="JS","string"!=typeof r){let t=r;if(t?.preferredLayout){if("NCHW"!==t.preferredLayout&&"NHWC"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);let r=De("preferredLayout",n),s=De(t.preferredLayout,n);0!==Ee()._OrtAddSessionConfigEntry(e,r,s)&&Oe(`Can't set a session config entry: 'preferredLayout' - ${t.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}let s=De(t,n);0!==Ee()._OrtAppendExecutionProvider(e,s)&&Oe(`Can't append execution provider: ${t}.`)}},Vp=e=>{let t=Ee(),n=0,r=[],s=e||{};cg(s);try{let e=lg(s.graphOptimizationLevel??"all"),a=fg(s.executionMode??"sequential"),i="string"==typeof s.logId?De(s.logId,r):0,o=s.logSeverityLevel??2;if(!Number.isInteger(o)||o<0||o>4)throw new Error(`log serverity level is not valid: ${o}`);let l=s.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let u="string"==typeof s.optimizedModelFilePath?De(s.optimizedModelFilePath,r):0;if(n=t._OrtCreateSessionOptions(e,!!s.enableCpuMemArena,!!s.enableMemPattern,a,!!s.enableProfiling,0,i,o,l,u),0===n&&Oe("Can't create session options."),s.executionProviders&&pg(n,s.executionProviders,r),s.freeDimensionOverrides)for(let[e,a]of Object.entries(s.freeDimensionOverrides)){if("string"!=typeof e)throw new Error(`free dimension override name must be a string: ${e}`);if("number"!=typeof a||!Number.isInteger(a)||a<0)throw new Error(`free dimension override value must be a non-negative integer: ${a}`);let s=De(e,r);0!==t._OrtAddFreeDimensionOverride(n,s,a)&&Oe(`Can't set a free dimension override: ${e} - ${a}.`)}return void 0!==s.extra&&bn(s.extra,"",new WeakSet,((e,s)=>{let a=De(e,r),i=De(s,r);0!==t._OrtAddSessionConfigEntry(n,a,i)&&Oe(`Can't set a session config entry: ${e} - ${s}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),r.forEach((e=>t._free(e))),e}}})),la,Hp,fa,qp,jp,Do,Yp,ca=L((()=>{la=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Hp=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},fa=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],qp=e=>{switch(e){case"float16":case"uint16":return Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},jp=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Do=e=>"float32"===e||"int32"===e||"int64"===e||"bool"===e||"float16"===e||"uint32"===e,Yp=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}})),gn,pa=L((()=>{gn=async e=>{if("string"!=typeof e)return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e);if(!(typeof process<"u"&&process.versions&&process.versions.node)){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let n=t.headers.get("Content-Length"),r=n?parseInt(n,10):0;if(r<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n,s=t.body.getReader();try{n=new ArrayBuffer(r)}catch(e){if(!(e instanceof RangeError))throw e;{let e=Math.ceil(r/65536);n=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let a=0;for(;;){let{done:e,value:t}=await s.read();if(e)break;let r=t.byteLength;new Uint8Array(n,a,r).set(t),a+=r}return new Uint8Array(n,0,r)}}try{return new Uint8Array(await(void 0)(e))}catch(t){if("ERR_FS_FILE_TOO_LARGE"===t.code){let t=(void 0)(e),n=[];for await(let e of t)n.push(e);return new Uint8Array(Buffer.concat(n))}throw t}}})),dg,Kp,Jp,yn,hg,da,Zp,Qp,Xp,ed,td,rd,nd=L((()=>{zp(),Wp(),ca(),zr(),Eo(),pa(),dg=(e,t)=>{0!==Ee()._OrtInit(e,t)&&Oe("Can't initialize onnxruntime.")},Kp=async e=>{dg(e.wasm.numThreads,jp(e.logLevel))},Jp=async(e,t)=>{},yn=new Map,hg=e=>{let t=Ee(),n=t.stackSave();try{let n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&Oe("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}},da=e=>{let t=Ee(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},Zp=async(e,t)=>{let n,r,s=Ee();Array.isArray(e)?[n,r]=e:e.buffer===s.HEAPU8.buffer?[n,r]=[e.byteOffset,e.byteLength]:[n,r]=da(e);let a=0,i=0,o=[],l=[],u=[];try{if([i,o]=Vp(t),t?.externalData&&s.mountExternalData){let e=[];for(let n of t.externalData){let t="string"==typeof n?n:n.path;e.push(gn("string"==typeof n?n:n.data).then((e=>{s.mountExternalData(t,e)})))}await Promise.all(e)}a=s._OrtCreateSession(n,r,i),0===a&&Oe("Can't create a session.");let[e,c]=hg(a),h=[],p=[];for(let t=0;t<e;t++){let e=s._OrtGetInputName(a,t);0===e&&Oe("Can't get an input name."),l.push(e),h.push(s.UTF8ToString(e))}for(let e=0;e<c;e++){let t=s._OrtGetOutputName(a,e);0===t&&Oe("Can't get an output name."),u.push(t);let n=s.UTF8ToString(t);p.push(n)}let d=null;return yn.set(a,[a,l,u,d]),[a,h,p]}catch(e){throw l.forEach((e=>s._OrtFree(e))),u.forEach((e=>s._OrtFree(e))),0!==a&&s._OrtReleaseSession(a),e}finally{s._free(n),0!==i&&s._OrtReleaseSessionOptions(i),o.forEach((e=>s._free(e))),s.unmountExternalData?.()}},Qp=e=>{let t=Ee(),n=yn.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[r,s,a,i]=n;i&&t._OrtReleaseBinding(i.handle),t.jsepUnregisterBuffers?.(e),s.forEach((e=>t._OrtFree(e))),a.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),yn.delete(e)},Xp=(e,t,n,r,s)=>{if(!e)return void t.push(0);let a,i,o=Ee(),l=e[0],u=e[1],c=e[3];if("string"===l&&"gpu-buffer"===c)throw new Error("String tensor is not supported on GPU.");if("gpu-buffer"===c){let t=e[2].gpuBuffer,n=fa(la(l));i=u.reduce(((e,t)=>e*t),1)*n,a=o.jsepRegisterBuffer(r,s,t,i)}else{let t=e[2];if(Array.isArray(t)){i=4*t.length,a=o._malloc(i),n.push(a);let e=a/4;for(let r=0;r<t.length;r++){if("string"!=typeof t[r])throw new TypeError(`tensor data at index ${r} is not a string`);o.HEAPU32[e++]=De(t[r],n)}}else i=t.byteLength,a=o._malloc(i),n.push(a),o.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),a)}let h=o.stackSave(),p=o.stackAlloc(4*u.length);try{let e=p/4;u.forEach((t=>o.HEAP32[e++]=t));let n=o._OrtCreateTensor(la(l),a,i,p,u.length,Yp(c));0===n&&Oe(`Can't create tensor for input/output. session=${r}, index=${s}.`),t.push(n)}finally{o.stackRestore(h)}},ed=async(e,t,n,r,s,a)=>{let i=Ee(),o=yn.get(e);if(!o)throw new Error(`cannot run inference. invalid session id: ${e}`);let[l,u,c,h]=o,p=t.length,d=r.length,f=0,m=[],g=[],y=[],b=[],x=i.stackSave(),w=i.stackAlloc(4*p),v=i.stackAlloc(4*p),T=i.stackAlloc(4*d),k=i.stackAlloc(4*d);try{[f,m]=Up(a);for(let r=0;r<p;r++)Xp(n[r],g,b,e,t[r]);for(let t=0;t<d;t++)Xp(s[t],y,b,e,p+r[t]);let o,x=w/4,I=v/4,S=T/4,_=k/4;for(let e=0;e<p;e++)i.HEAPU32[x++]=g[e],i.HEAPU32[I++]=u[t[e]];for(let e=0;e<d;e++)i.HEAPU32[S++]=y[e],i.HEAPU32[_++]=c[r[e]];o=await i._OrtRun(l,v,w,p,k,d,T,f),0!==o&&Oe("failed to call OrtRun().");let N=[];for(let e=0;e<d;e++){let t=i.HEAPU32[T/4+e];if(t===y[e]){N.push(s[e]);continue}let n,a=i.stackSave(),o=i.stackAlloc(16),l=!1,u=0;try{0!==i._OrtGetTensorData(t,o,o+4,o+8,o+12)&&Oe(`Can't access output tensor data on index ${e}.`);let s=o/4,a=i.HEAPU32[s++];u=i.HEAPU32[s++];let c=i.HEAPU32[s++],p=i.HEAPU32[s++],d=[];for(let e=0;e<p;e++)d.push(i.HEAPU32[c/4+e]);i._OrtFree(c);let f=d.reduce(((e,t)=>e*t),1);n=Hp(a);let m=h?.outputPreferredLocations[r[e]];if("string"===n){if("gpu-buffer"===m)throw new Error("String tensor is not supported on GPU.");let e=[],t=u/4;for(let n=0;n<f;n++){let r=i.HEAPU32[t++],s=n===f-1?void 0:i.HEAPU32[t]-r;e.push(i.UTF8ToString(r,s))}N.push([n,d,e,"cpu"])}else if("gpu-buffer"===m&&f>0){let e=i.jsepGetBuffer(u),r=fa(a);if(void 0===r||!Do(n))throw new Error(`Unsupported data type: ${n}`);l=!0,N.push([n,d,{gpuBuffer:e,download:i.jsepCreateDownloader(e,f*r,n),dispose:()=>{i._OrtReleaseTensor(t)}},"gpu-buffer"])}else{let e=new(qp(n))(f);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(i.HEAPU8.subarray(u,u+e.byteLength)),N.push([n,d,e,"cpu"])}}finally{i.stackRestore(a),"string"===n&&u&&i._free(u),l||i._OrtReleaseTensor(t)}}return h&&i._OrtClearBoundOutputs(h.handle),N}finally{i.stackRestore(x),g.forEach((e=>i._OrtReleaseTensor(e))),y.forEach((e=>i._OrtReleaseTensor(e))),b.forEach((e=>i._free(e))),0!==f&&i._OrtReleaseRunOptions(f),m.forEach((e=>i._free(e)))}},td=e=>{let t=Ee(),n=yn.get(e);if(!n)throw new Error("invalid session id");let r=n[0],s=t._OrtEndProfiling(r);0===s&&Oe("Can't get an profile file name."),t._OrtFree(s)},rd=e=>{let t=[];for(let n of e){let e=n[2];!Array.isArray(e)&&"buffer"in e&&t.push(e.buffer)}return t}})),od=me(((e,t)=>{t.exports='/*!\n * ONNX Runtime Web v1.17.1\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var Et=Object.defineProperty;var Jr=Object.getOwnPropertyDescriptor;var Xr=Object.getOwnPropertyNames;var Qr=Object.prototype.hasOwnProperty;var St=(u,d)=>()=>(u&&(d=u(u=0)),d);var et=(u,d)=>()=>(d||u((d={exports:{}}).exports,d),d.exports),Tt=(u,d)=>{for(var a in d)Et(u,a,{get:d[a],enumerable:!0})},Zr=(u,d,a,h)=>{if(d&&typeof d=="object"||typeof d=="function")for(let l of Xr(d))!Qr.call(u,l)&&l!==a&&Et(u,l,{get:()=>d[l],enumerable:!(h=Jr(d,l))||h.enumerable});return u};var tt=u=>Zr(Et({},"__esModule",{value:!0}),u);var At={};Tt(At,{createReadStream:()=>dr,readFile:()=>Kr,readFileSync:()=>en});var Kr,en,dr,Mt=St(()=>{Kr=void 0,en=void 0,dr=void 0});var Ct={};Tt(Ct,{join:()=>tn});var tn,Dt=St(()=>{tn=void 0});var gr=et((mr,xt)=>{"use strict";var pr=(()=>{var u=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(u=u||__filename),function(d={}){var a=d,h,l;a.ready=new Promise((r,o)=>{h=r,l=o});var w=Object.assign({},a),g="./this.program",i=typeof window=="object",A=typeof importScripts=="function",D=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",I="",B,F,U;if(D){var k=(Mt(),tt(At)),L=(Dt(),tt(Ct));I=A?L.dirname(I)+"/":__dirname+"/",B=(r,o)=>(r=ye(r)?new URL(r):L.normalize(r),k.readFileSync(r,o?void 0:"utf8")),U=r=>(r=B(r,!0),r.buffer||(r=new Uint8Array(r)),r),F=(r,o,s,m=!0)=>{r=ye(r)?new URL(r):L.normalize(r),k.readFile(r,m?void 0:"utf8",(O,S)=>{O?s(O):o(m?S.buffer:S)})},!a.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),a.inspect=()=>"[Emscripten Module object]"}else(i||A)&&(A?I=self.location.href:typeof document<"u"&&document.currentScript&&(I=document.currentScript.src),u&&(I=u),I.indexOf("blob:")!==0?I=I.substr(0,I.replace(/[?#].*/,"").lastIndexOf("/")+1):I="",B=r=>{var o=new XMLHttpRequest;return o.open("GET",r,!1),o.send(null),o.responseText},A&&(U=r=>{var o=new XMLHttpRequest;return o.open("GET",r,!1),o.responseType="arraybuffer",o.send(null),new Uint8Array(o.response)}),F=(r,o,s)=>{var m=new XMLHttpRequest;m.open("GET",r,!0),m.responseType="arraybuffer",m.onload=()=>{m.status==200||m.status==0&&m.response?o(m.response):s()},m.onerror=s,m.send(null)});var _=console.log.bind(console),x=console.error.bind(console);Object.assign(a,w),w=null,typeof WebAssembly!="object"&&de("no native wasm support detected");var N,he=!1,ie,ae,E,Y,ue;function Re(){var r=N.buffer;a.HEAP8=ie=new Int8Array(r),a.HEAP16=new Int16Array(r),a.HEAPU8=ae=new Uint8Array(r),a.HEAPU16=new Uint16Array(r),a.HEAP32=E=new Int32Array(r),a.HEAPU32=Y=new Uint32Array(r),a.HEAPF32=new Float32Array(r),a.HEAPF64=ue=new Float64Array(r)}var Ie=[],ee=[],j=[],ce=0,P=null,te=null;function de(r){throw r="Aborted("+r+")",x(r),he=!0,r=new WebAssembly.RuntimeError(r+". Build with -sASSERTIONS for more info."),l(r),r}var ge=r=>r.startsWith("data:application/octet-stream;base64,"),ye=r=>r.startsWith("file://"),J;if(J="ort-wasm.wasm",!ge(J)){var fe=J;J=a.locateFile?a.locateFile(fe,I):I+fe}function we(r){if(U)return U(r);throw"both async and sync fetching of the wasm failed"}function Ae(r){if(i||A){if(typeof fetch=="function"&&!ye(r))return fetch(r,{credentials:"same-origin"}).then(o=>{if(!o.ok)throw"failed to load wasm binary file at \'"+r+"\'";return o.arrayBuffer()}).catch(()=>we(r));if(F)return new Promise((o,s)=>{F(r,m=>o(new Uint8Array(m)),s)})}return Promise.resolve().then(()=>we(r))}function Me(r,o,s){return Ae(r).then(m=>WebAssembly.instantiate(m,o)).then(m=>m).then(s,m=>{x(`failed to asynchronously prepare wasm: ${m}`),de(m)})}function Fe(r,o){var s=J;return typeof WebAssembly.instantiateStreaming!="function"||ge(s)||ye(s)||D||typeof fetch!="function"?Me(s,r,o):fetch(s,{credentials:"same-origin"}).then(m=>WebAssembly.instantiateStreaming(m,r).then(o,function(O){return x(`wasm streaming compile failed: ${O}`),x("falling back to ArrayBuffer instantiation"),Me(s,r,o)}))}var Ee,pe={919888:(r,o,s,m)=>{if(typeof a>"u"||!a.za)return 1;if(r=be(r>>>0),r.startsWith("./")&&(r=r.substring(2)),r=a.za.get(r),!r)return 2;if(o>>>=0,s>>>=0,o+s>r.byteLength)return 3;try{return ae.set(r.subarray(o,o+s),m>>>0>>>0),0}catch{return 4}}};function Oe(r){this.xa=r-24,this.Ha=function(o){Y[this.xa+4>>>2>>>0]=o},this.Ga=function(o){Y[this.xa+8>>>2>>>0]=o},this.Aa=function(o,s){this.Fa(),this.Ha(o),this.Ga(s)},this.Fa=function(){Y[this.xa+16>>>2>>>0]=0}}var ve=0,re=0,Z=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Ce=(r,o,s)=>{o>>>=0;var m=o+s;for(s=o;r[s]&&!(s>=m);)++s;if(16<s-o&&r.buffer&&Z)return Z.decode(r.subarray(o,s));for(m="";o<s;){var O=r[o++];if(O&128){var S=r[o++]&63;if((O&224)==192)m+=String.fromCharCode((O&31)<<6|S);else{var R=r[o++]&63;O=(O&240)==224?(O&15)<<12|S<<6|R:(O&7)<<18|S<<12|R<<6|r[o++]&63,65536>O?m+=String.fromCharCode(O):(O-=65536,m+=String.fromCharCode(55296|O>>10,56320|O&1023))}}else m+=String.fromCharCode(O)}return m},be=(r,o)=>(r>>>=0)?Ce(ae,r,o):"",_e=r=>{for(var o=0,s=0;s<r.length;++s){var m=r.charCodeAt(s);127>=m?o++:2047>=m?o+=2:55296<=m&&57343>=m?(o+=4,++s):o+=3}return o},ke=(r,o,s,m)=>{if(s>>>=0,!(0<m))return 0;var O=s;m=s+m-1;for(var S=0;S<r.length;++S){var R=r.charCodeAt(S);if(55296<=R&&57343>=R){var K=r.charCodeAt(++S);R=65536+((R&1023)<<10)|K&1023}if(127>=R){if(s>=m)break;o[s++>>>0]=R}else{if(2047>=R){if(s+1>=m)break;o[s++>>>0]=192|R>>6}else{if(65535>=R){if(s+2>=m)break;o[s++>>>0]=224|R>>12}else{if(s+3>=m)break;o[s++>>>0]=240|R>>18,o[s++>>>0]=128|R>>12&63}o[s++>>>0]=128|R>>6&63}o[s++>>>0]=128|R&63}}return o[s>>>0]=0,s-O},Ue=r=>r%4===0&&(r%100!==0||r%400===0),ze=[0,31,60,91,121,152,182,213,244,274,305,335],at=[0,31,59,90,120,151,181,212,243,273,304,334],De=r=>{var o=_e(r)+1,s=st(o);return s&&ke(r,ae,s,o),s},Ne=[],Pe={},He=()=>{if(!$e){var r={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"},o;for(o in Pe)Pe[o]===void 0?delete r[o]:r[o]=Pe[o];var s=[];for(o in r)s.push(`${o}=${r[o]}`);$e=s}return $e},$e,Le=[null,[],[]],qe=[31,29,31,30,31,30,31,31,30,31,30,31],Ve=[31,28,31,30,31,30,31,31,30,31,30,31];function Ge(r){var o=Array(_e(r)+1);return ke(r,o,0,o.length),o}function ot(r,o,s,m){function O(c,W,G){for(c=typeof c=="number"?c.toString():c||"";c.length<W;)c=G[0]+c;return c}function S(c,W){return O(c,W,"0")}function R(c,W){function G(Ke){return 0>Ke?-1:0<Ke?1:0}var Se;return(Se=G(c.getFullYear()-W.getFullYear()))===0&&(Se=G(c.getMonth()-W.getMonth()))===0&&(Se=G(c.getDate()-W.getDate())),Se}function K(c){switch(c.getDay()){case 0:return new Date(c.getFullYear()-1,11,29);case 1:return c;case 2:return new Date(c.getFullYear(),0,3);case 3:return new Date(c.getFullYear(),0,2);case 4:return new Date(c.getFullYear(),0,1);case 5:return new Date(c.getFullYear()-1,11,31);case 6:return new Date(c.getFullYear()-1,11,30)}}function le(c){var W=c.ta;for(c=new Date(new Date(c.ua+1900,0,1).getTime());0<W;){var G=c.getMonth(),Se=(Ue(c.getFullYear())?qe:Ve)[G];if(W>Se-c.getDate())W-=Se-c.getDate()+1,c.setDate(1),11>G?c.setMonth(G+1):(c.setMonth(0),c.setFullYear(c.getFullYear()+1));else{c.setDate(c.getDate()+W);break}}return G=new Date(c.getFullYear()+1,0,4),W=K(new Date(c.getFullYear(),0,4)),G=K(G),0>=R(W,c)?0>=R(G,c)?c.getFullYear()+1:c.getFullYear():c.getFullYear()-1}r>>>=0,o>>>=0,s>>>=0,m>>>=0;var oe=Y[m+40>>>2>>>0];m={Da:E[m>>>2>>>0],Ca:E[m+4>>>2>>>0],va:E[m+8>>>2>>>0],ya:E[m+12>>>2>>>0],wa:E[m+16>>>2>>>0],ua:E[m+20>>>2>>>0],oa:E[m+24>>>2>>>0],ta:E[m+28>>>2>>>0],Ia:E[m+32>>>2>>>0],Ba:E[m+36>>>2>>>0],Ea:oe?be(oe):""},s=be(s),oe={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var se in oe)s=s.replace(new RegExp(se,"g"),oe[se]);var Qe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ze="January February March April May June July August September October November December".split(" ");oe={"%a":c=>Qe[c.oa].substring(0,3),"%A":c=>Qe[c.oa],"%b":c=>Ze[c.wa].substring(0,3),"%B":c=>Ze[c.wa],"%C":c=>S((c.ua+1900)/100|0,2),"%d":c=>S(c.ya,2),"%e":c=>O(c.ya,2," "),"%g":c=>le(c).toString().substring(2),"%G":c=>le(c),"%H":c=>S(c.va,2),"%I":c=>(c=c.va,c==0?c=12:12<c&&(c-=12),S(c,2)),"%j":c=>{for(var W=0,G=0;G<=c.wa-1;W+=(Ue(c.ua+1900)?qe:Ve)[G++]);return S(c.ya+W,3)},"%m":c=>S(c.wa+1,2),"%M":c=>S(c.Ca,2),"%n":()=>`\n`,"%p":c=>0<=c.va&&12>c.va?"AM":"PM","%S":c=>S(c.Da,2),"%t":()=>"\t","%u":c=>c.oa||7,"%U":c=>S(Math.floor((c.ta+7-c.oa)/7),2),"%V":c=>{var W=Math.floor((c.ta+7-(c.oa+6)%7)/7);if(2>=(c.oa+371-c.ta-2)%7&&W++,W)W==53&&(G=(c.oa+371-c.ta)%7,G==4||G==3&&Ue(c.ua)||(W=1));else{W=52;var G=(c.oa+7-c.ta-1)%7;(G==4||G==5&&Ue(c.ua%400-1))&&W++}return S(W,2)},"%w":c=>c.oa,"%W":c=>S(Math.floor((c.ta+7-(c.oa+6)%7)/7),2),"%y":c=>(c.ua+1900).toString().substring(2),"%Y":c=>c.ua+1900,"%z":c=>{c=c.Ba;var W=0<=c;return c=Math.abs(c)/60,(W?"+":"-")+("0000"+(c/60*100+c%60)).slice(-4)},"%Z":c=>c.Ea,"%%":()=>"%"},s=s.replace(/%%/g,"\\0\\0");for(se in oe)s.includes(se)&&(s=s.replace(new RegExp(se,"g"),oe[se](m)));return s=s.replace(/\\0\\0/g,"%"),se=Ge(s),se.length>o?0:(ie.set(se,r>>>0),se.length-1)}var $={a:function(r,o,s){throw r>>>=0,new Oe(r).Aa(o>>>0,s>>>0),ve=r,re++,ve},e:function(){return 0},H:function(){},x:function(){},z:function(){},J:function(){return 0},F:function(){},A:function(){},E:function(){},g:function(){},y:function(){},v:function(){},G:function(){},w:function(){},k:()=>1,n:function(r,o,s){r=o+2097152>>>0<4194305-!!r?(r>>>0)+4294967296*o:NaN,s>>>=0,r=new Date(1e3*r),E[s>>>2>>>0]=r.getUTCSeconds(),E[s+4>>>2>>>0]=r.getUTCMinutes(),E[s+8>>>2>>>0]=r.getUTCHours(),E[s+12>>>2>>>0]=r.getUTCDate(),E[s+16>>>2>>>0]=r.getUTCMonth(),E[s+20>>>2>>>0]=r.getUTCFullYear()-1900,E[s+24>>>2>>>0]=r.getUTCDay(),E[s+28>>>2>>>0]=(r.getTime()-Date.UTC(r.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},o:function(r,o,s){r=o+2097152>>>0<4194305-!!r?(r>>>0)+4294967296*o:NaN,s>>>=0,r=new Date(1e3*r),E[s>>>2>>>0]=r.getSeconds(),E[s+4>>>2>>>0]=r.getMinutes(),E[s+8>>>2>>>0]=r.getHours(),E[s+12>>>2>>>0]=r.getDate(),E[s+16>>>2>>>0]=r.getMonth(),E[s+20>>>2>>>0]=r.getFullYear()-1900,E[s+24>>>2>>>0]=r.getDay(),E[s+28>>>2>>>0]=(Ue(r.getFullYear())?ze:at)[r.getMonth()]+r.getDate()-1|0,E[s+36>>>2>>>0]=-(60*r.getTimezoneOffset()),o=new Date(r.getFullYear(),6,1).getTimezoneOffset();var m=new Date(r.getFullYear(),0,1).getTimezoneOffset();E[s+32>>>2>>>0]=(o!=m&&r.getTimezoneOffset()==Math.min(m,o))|0},p:function(r){r>>>=0;var o=new Date(E[r+20>>>2>>>0]+1900,E[r+16>>>2>>>0],E[r+12>>>2>>>0],E[r+8>>>2>>>0],E[r+4>>>2>>>0],E[r>>>2>>>0],0),s=E[r+32>>>2>>>0],m=o.getTimezoneOffset(),O=new Date(o.getFullYear(),6,1).getTimezoneOffset(),S=new Date(o.getFullYear(),0,1).getTimezoneOffset(),R=Math.min(S,O);return 0>s?E[r+32>>>2>>>0]=+(O!=S&&R==m):0<s!=(R==m)&&(O=Math.max(S,O),o.setTime(o.getTime()+6e4*((0<s?R:O)-m))),E[r+24>>>2>>>0]=o.getDay(),E[r+28>>>2>>>0]=(Ue(o.getFullYear())?ze:at)[o.getMonth()]+o.getDate()-1|0,E[r>>>2>>>0]=o.getSeconds(),E[r+4>>>2>>>0]=o.getMinutes(),E[r+8>>>2>>>0]=o.getHours(),E[r+12>>>2>>>0]=o.getDate(),E[r+16>>>2>>>0]=o.getMonth(),E[r+20>>>2>>>0]=o.getYear(),r=o.getTime(),isNaN(r)?(E[Ye()>>>2>>>0]=61,r=-1):r/=1e3,Je((Ee=r,1<=+Math.abs(Ee)?0<Ee?+Math.floor(Ee/4294967296)>>>0:~~+Math.ceil((Ee-+(~~Ee>>>0))/4294967296)>>>0:0)),r>>>0},l:function(){return-52},m:function(){},t:function(r,o,s){function m(le){return(le=le.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?le[1]:"GMT"}s>>>=0;var O=new Date().getFullYear(),S=new Date(O,0,1),R=new Date(O,6,1);O=S.getTimezoneOffset();var K=R.getTimezoneOffset();Y[r>>>0>>>2>>>0]=60*Math.max(O,K),E[o>>>0>>>2>>>0]=+(O!=K),r=m(S),o=m(R),r=De(r),o=De(o),K<O?(Y[s>>>2>>>0]=r,Y[s+4>>>2>>>0]=o):(Y[s>>>2>>>0]=o,Y[s+4>>>2>>>0]=r)},d:()=>{de("")},B:function(r,o,s){r>>>=0,o>>>=0,s>>>=0,Ne.length=0;for(var m;m=ae[o++>>>0];){var O=m!=105;O&=m!=112,s+=O&&s%8?4:0,Ne.push(m==112?Y[s>>>2>>>0]:m==105?E[s>>>2>>>0]:ue[s>>>3>>>0]),s+=O?8:4}return pe[r].apply(null,Ne)},h:()=>Date.now(),u:function(){return 4294901760},b:()=>performance.now(),I:function(r,o,s){return o>>>=0,ae.copyWithin(r>>>0>>>0,o>>>0,o+(s>>>0)>>>0)},s:function(r){r>>>=0;var o=ae.length;if(4294901760<r)return!1;for(var s=1;4>=s;s*=2){var m=o*(1+.2/s);m=Math.min(m,r+100663296);var O=Math;m=Math.max(r,m);e:{O=(O.min.call(O,4294901760,m+(65536-m%65536)%65536)-N.buffer.byteLength+65535)/65536;try{N.grow(O),Re();var S=1;break e}catch{}S=void 0}if(S)return!0}return!1},C:function(r,o){r>>>=0,o>>>=0;var s=0;return He().forEach((m,O)=>{var S=o+s;for(O=Y[r+4*O>>>2>>>0]=S,S=0;S<m.length;++S)ie[O++>>>0>>>0]=m.charCodeAt(S);ie[O>>>0>>>0]=0,s+=m.length+1}),0},D:function(r,o){r>>>=0,o>>>=0;var s=He();Y[r>>>2>>>0]=s.length;var m=0;return s.forEach(O=>m+=O.length+1),Y[o>>>2>>>0]=m,0},f:()=>52,j:function(){return 52},q:function(){return 70},i:function(r,o,s,m){o>>>=0,s>>>=0,m>>>=0;for(var O=0,S=0;S<s;S++){var R=Y[o>>>2>>>0],K=Y[o+4>>>2>>>0];o+=8;for(var le=0;le<K;le++){var oe=ae[R+le>>>0],se=Le[r];oe===0||oe===10?((r===1?_:x)(Ce(se,0)),se.length=0):se.push(oe)}O+=K}return Y[m>>>2>>>0]=O,0},r:ot,c:function(r,o,s,m){return ot(r>>>0,o>>>0,s>>>0,m>>>0)}},C=function(){function r(s){return C=s.exports,C=ut(),N=C.K,Re(),ee.unshift(C.L),ce--,ce==0&&(P!==null&&(clearInterval(P),P=null),te&&(s=te,te=null,s())),C}var o={a:$};if(ce++,a.instantiateWasm)try{return a.instantiateWasm(o,r)}catch(s){x(`Module.instantiateWasm callback failed with error: ${s}`),l(s)}return Fe(o,function(s){r(s.instance)}).catch(l),{}}();a._OrtInit=(r,o)=>(a._OrtInit=C.M)(r,o),a._OrtGetLastError=(r,o)=>(a._OrtGetLastError=C.N)(r,o),a._OrtCreateSessionOptions=(r,o,s,m,O,S,R,K,le,oe)=>(a._OrtCreateSessionOptions=C.O)(r,o,s,m,O,S,R,K,le,oe),a._OrtAppendExecutionProvider=(r,o)=>(a._OrtAppendExecutionProvider=C.P)(r,o),a._OrtAddFreeDimensionOverride=(r,o,s)=>(a._OrtAddFreeDimensionOverride=C.Q)(r,o,s),a._OrtAddSessionConfigEntry=(r,o,s)=>(a._OrtAddSessionConfigEntry=C.R)(r,o,s),a._OrtReleaseSessionOptions=r=>(a._OrtReleaseSessionOptions=C.S)(r),a._OrtCreateSession=(r,o,s)=>(a._OrtCreateSession=C.T)(r,o,s),a._OrtReleaseSession=r=>(a._OrtReleaseSession=C.U)(r),a._OrtGetInputOutputCount=(r,o,s)=>(a._OrtGetInputOutputCount=C.V)(r,o,s),a._OrtGetInputName=(r,o)=>(a._OrtGetInputName=C.W)(r,o),a._OrtGetOutputName=(r,o)=>(a._OrtGetOutputName=C.X)(r,o),a._OrtFree=r=>(a._OrtFree=C.Y)(r),a._OrtCreateTensor=(r,o,s,m,O,S)=>(a._OrtCreateTensor=C.Z)(r,o,s,m,O,S),a._OrtGetTensorData=(r,o,s,m,O)=>(a._OrtGetTensorData=C._)(r,o,s,m,O),a._OrtReleaseTensor=r=>(a._OrtReleaseTensor=C.$)(r),a._OrtCreateRunOptions=(r,o,s,m)=>(a._OrtCreateRunOptions=C.aa)(r,o,s,m),a._OrtAddRunConfigEntry=(r,o,s)=>(a._OrtAddRunConfigEntry=C.ba)(r,o,s),a._OrtReleaseRunOptions=r=>(a._OrtReleaseRunOptions=C.ca)(r),a._OrtCreateBinding=r=>(a._OrtCreateBinding=C.da)(r),a._OrtBindInput=(r,o,s)=>(a._OrtBindInput=C.ea)(r,o,s),a._OrtBindOutput=(r,o,s,m)=>(a._OrtBindOutput=C.fa)(r,o,s,m),a._OrtClearBoundOutputs=r=>(a._OrtClearBoundOutputs=C.ga)(r),a._OrtReleaseBinding=r=>(a._OrtReleaseBinding=C.ha)(r),a._OrtRunWithBinding=(r,o,s,m,O)=>(a._OrtRunWithBinding=C.ia)(r,o,s,m,O),a._OrtRun=(r,o,s,m,O,S,R,K)=>(a._OrtRun=C.ja)(r,o,s,m,O,S,R,K),a._OrtEndProfiling=r=>(a._OrtEndProfiling=C.ka)(r);var Ye=()=>(Ye=C.la)(),st=a._malloc=r=>(st=a._malloc=C.ma)(r);a._free=r=>(a._free=C.na)(r);var Je=r=>(Je=C.pa)(r),it=()=>(it=C.qa)(),M=r=>(M=C.ra)(r),Be=r=>(Be=C.sa)(r);function ut(){var r=C;r=Object.assign({},r);var o=m=>()=>m()>>>0,s=m=>O=>m(O)>>>0;return r.la=o(r.la),r.ma=s(r.ma),r.qa=o(r.qa),r.sa=s(r.sa),r}a.stackAlloc=Be,a.stackSave=it,a.stackRestore=M,a.UTF8ToString=be,a.stringToUTF8=(r,o,s)=>ke(r,ae,o,s),a.lengthBytesUTF8=_e;var xe;te=function r(){xe||Xe(),xe||(te=r)};function Xe(){if(!(0<ce)){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;){var r=a.preRun.shift();Ie.unshift(r)}for(;0<Ie.length;)Ie.shift()(a);if(!(0<ce||xe||(xe=!0,a.calledRun=!0,he))){for(;0<ee.length;)ee.shift()(a);for(h(a);0<j.length;)j.shift()(a)}}}return Xe(),d.ready}})();typeof mr=="object"&&typeof xt=="object"?xt.exports=pr:typeof define=="function"&&define.amd&&define([],()=>pr)});var hr=et(()=>{});var yr=et(()=>{});var br={};Tt(br,{cpus:()=>rn});var rn,wr=St(()=>{rn=void 0});var _r=et((vr,Ft)=>{"use strict";var Or=(()=>{var u=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(u=u||__filename),function(d={}){function a(){return j.buffer!=de.buffer&&we(),de}function h(){return j.buffer!=de.buffer&&we(),ge}function l(){return j.buffer!=de.buffer&&we(),ye}function w(){return j.buffer!=de.buffer&&we(),J}function g(){return j.buffer!=de.buffer&&we(),fe}var i=d,A,D;i.ready=new Promise((e,t)=>{A=e,D=t});var I=Object.assign({},i),B="./this.program",F=(e,t)=>{throw t},U=typeof window=="object",k=typeof importScripts=="function",L=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_=i.ENVIRONMENT_IS_PTHREAD||!1,x="";function N(e){return i.locateFile?i.locateFile(e,x):x+e}var he,ie,ae;if(L){var E=(Mt(),tt(At)),Y=(Dt(),tt(Ct));x=k?Y.dirname(x)+"/":__dirname+"/",he=(t,n)=>(t=be(t)?new URL(t):Y.normalize(t),E.readFileSync(t,n?void 0:"utf8")),ae=t=>(t=he(t,!0),t.buffer||(t=new Uint8Array(t)),t),ie=(t,n,f,y=!0)=>{t=be(t)?new URL(t):Y.normalize(t),E.readFile(t,y?void 0:"utf8",(b,v)=>{b?f(b):n(y?v.buffer:v)})},!i.thisProgram&&1<process.argv.length&&(B=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),F=(t,n)=>{throw process.exitCode=t,n},i.inspect=()=>"[Emscripten Module object]";let e;try{e=hr()}catch(t){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),t}global.Worker=e.Worker}else(U||k)&&(k?x=self.location.href:typeof document<"u"&&document.currentScript&&(x=document.currentScript.src),typeof u<"u"&&u&&(x=u),x.indexOf("blob:")!==0?x=x.substr(0,x.replace(/[?#].*/,"").lastIndexOf("/")+1):x="",L||(he=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},k&&(ae=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),ie=(e,t,n)=>{var f=new XMLHttpRequest;f.open("GET",e,!0),f.responseType="arraybuffer",f.onload=()=>{f.status==200||f.status==0&&f.response?t(f.response):n()},f.onerror=n,f.send(null)}));L&&typeof performance>"u"&&(global.performance=yr().performance);var ue=console.log.bind(console),Re=console.error.bind(console);L&&(ue=(...e)=>E.writeSync(1,e.join(" ")+`\n`),Re=(...e)=>E.writeSync(2,e.join(" ")+`\n`));var Ie=ue,ee=Re;Object.assign(i,I),I=null,typeof WebAssembly!="object"&&Z("no native wasm support detected");var j,ce,P=!1,te,de,ge,ye,J,fe;function we(){var e=j.buffer;i.HEAP8=de=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAPU8=ge=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAP32=ye=new Int32Array(e),i.HEAPU32=J=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=fe=new Float64Array(e)}var Ae=16777216;if(_)j=i.wasmMemory;else if(i.wasmMemory)j=i.wasmMemory;else if(j=new WebAssembly.Memory({initial:Ae/65536,maximum:65536,shared:!0}),!(j.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),L&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");we(),Ae=j.buffer.byteLength;var Me=[],Fe=[],Ee=[],pe=0,Oe=null,ve=null;function re(){if(pe--,pe==0&&(Oe!==null&&(clearInterval(Oe),Oe=null),ve)){var e=ve;ve=null,e()}}function Z(e){throw e="Aborted("+e+")",ee(e),P=!0,te=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),D(e),e}var Ce=e=>e.startsWith("data:application/octet-stream;base64,"),be=e=>e.startsWith("file://"),_e;_e="ort-wasm-threaded.wasm",Ce(_e)||(_e=N(_e));function ke(e){if(ae)return ae(e);throw"both async and sync fetching of the wasm failed"}function Ue(e){if(U||k){if(typeof fetch=="function"&&!be(e))return fetch(e,{credentials:"same-origin"}).then(t=>{if(!t.ok)throw"failed to load wasm binary file at \'"+e+"\'";return t.arrayBuffer()}).catch(()=>ke(e));if(ie)return new Promise((t,n)=>{ie(e,f=>t(new Uint8Array(f)),n)})}return Promise.resolve().then(()=>ke(e))}function ze(e,t,n){return Ue(e).then(f=>WebAssembly.instantiate(f,t)).then(f=>f).then(n,f=>{ee(`failed to asynchronously prepare wasm: ${f}`),Z(f)})}function at(e,t){var n=_e;return typeof WebAssembly.instantiateStreaming!="function"||Ce(n)||be(n)||L||typeof fetch!="function"?ze(n,e,t):fetch(n,{credentials:"same-origin"}).then(f=>WebAssembly.instantiateStreaming(f,e).then(t,function(y){return ee(`wasm streaming compile failed: ${y}`),ee("falling back to ArrayBuffer instantiation"),ze(n,e,t)}))}var De,Ne={921276:(e,t,n,f)=>{if(typeof i>"u"||!i.cb)return 1;if(e=Ge(e>>>0),e.startsWith("./")&&(e=e.substring(2)),e=i.cb.get(e),!e)return 2;if(t>>>=0,n>>>=0,f>>>=0,t+n>e.byteLength)return 3;try{return h().set(e.subarray(t,t+n),f>>>0),0}catch{return 4}}};function Pe(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var He=e=>{e.terminate(),e.onmessage=()=>{}},$e=e=>{M.Pa.length==0&&(Je(),M.Ya(M.Pa[0]));var t=M.Pa.pop();if(!t)return 6;M.Qa.push(t),M.Ma[e.Oa]=t,t.Oa=e.Oa;var n={cmd:"run",start_routine:e.kb,arg:e.hb,pthread_ptr:e.Oa};return L&&t.unref(),t.postMessage(n,e.qb),0},Le=0,qe=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Ve=(e,t,n)=>{t>>>=0;var f=t+n;for(n=t;e[n]&&!(n>=f);)++n;if(16<n-t&&e.buffer&&qe)return qe.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(f="";t<n;){var y=e[t++];if(y&128){var b=e[t++]&63;if((y&224)==192)f+=String.fromCharCode((y&31)<<6|b);else{var v=e[t++]&63;y=(y&240)==224?(y&15)<<12|b<<6|v:(y&7)<<18|b<<12|v<<6|e[t++]&63,65536>y?f+=String.fromCharCode(y):(y-=65536,f+=String.fromCharCode(55296|y>>10,56320|y&1023))}}else f+=String.fromCharCode(y)}return f},Ge=(e,t)=>(e>>>=0)?Ve(h(),e,t):"",ot=e=>{var t=vt();return e=e(),ct(t),e};function $(e,t){var n=arguments.length-2,f=arguments;return ot(()=>{for(var y=_t(8*n),b=y>>>3,v=0;v<n;v++){var z=f[2+v];g()[b+v>>>0]=z}return ar(e,n,y,t)})}function C(e){if(_)return $(0,1,e);te=e,0<Le||(M.lb(),i.onExit?.(e),P=!0),F(e,new Pe(e))}var Ye=e=>{if(te=e,_)throw ut(e),"unwind";C(e)};function st(){for(var e=i.numThreads;e--;)Je();Me.unshift(()=>{pe++,it(()=>re())})}function Je(){var e=N("ort-wasm-threaded.worker.js");e=new Worker(e),M.Pa.push(e)}function it(e){_?e():Promise.all(M.Pa.map(M.Ya)).then(e)}var M={Pa:[],Qa:[],bb:[],Ma:{},Wa(){_?(M.receiveObjectTransfer=M.jb,M.threadInitTLS=M.ab,M.setExitStatus=M.$a):st()},$a:e=>te=e,tb:["$terminateWorker"],lb:()=>{for(var e of M.Qa)He(e);for(e of M.Pa)He(e);M.Pa=[],M.Qa=[],M.Ma=[]},Za:e=>{var t=e.Oa;delete M.Ma[t],M.Pa.push(e),M.Qa.splice(M.Qa.indexOf(e),1),e.Oa=0,wt(t)},jb(){},ab(){M.bb.forEach(e=>e())},Ya:e=>new Promise(t=>{e.onmessage=b=>{b=b.data;var v=b.cmd;if(b.targetThread&&b.targetThread!=lt()){var z=M.Ma[b.targetThread];z?z.postMessage(b,b.transferList):ee(`Internal error! Worker sent a message "${v}" to target pthread ${b.targetThread}, but that thread no longer exists!`)}else v==="checkMailbox"?ft():v==="spawnThread"?$e(b):v==="cleanupThread"?M.Za(M.Ma[b.thread]):v==="killThread"?(b=b.thread,v=M.Ma[b],delete M.Ma[b],He(v),wt(b),M.Qa.splice(M.Qa.indexOf(v),1),v.Oa=0):v==="cancelThread"?M.Ma[b.thread].postMessage({cmd:"cancel"}):v==="loaded"?(e.loaded=!0,L&&!e.Oa&&e.unref(),t(e)):v==="alert"?alert(`Thread ${b.threadId}: ${b.text}`):b.target==="setimmediate"?e.postMessage(b):v==="callHandler"?i[b.handler](...b.args):v&&ee(`worker sent an unknown command ${v}`)},e.onerror=b=>{throw ee(`worker sent an error! ${b.filename}:${b.lineno}: ${b.message}`),b},L&&(e.on("message",b=>e.onmessage({data:b})),e.on("error",b=>e.onerror(b)));var n=[],f=["onExit"],y;for(y of f)i.hasOwnProperty(y)&&n.push(y);e.postMessage({cmd:"load",handlers:n,urlOrBlob:i.mainScriptUrlOrBlob||u,wasmMemory:j,wasmModule:ce})})};i.PThread=M;var Be=e=>{for(;0<e.length;)e.shift()(i)};i.establishStackSpace=()=>{var e=lt(),t=w()[e+52>>>2>>>0];e=w()[e+56>>>2>>>0],ir(t,t-e),ct(t)};function ut(e){if(_)return $(1,0,e);Ye(e)}var xe=[],Xe;i.invokeEntryPoint=(e,t)=>{var n=xe[e];n||(e>=xe.length&&(xe.length=e+1),xe[e]=n=Xe.get(e)),e=n(t),0<Le?M.$a(e):Ot(e)};function r(e){this.Va=e-24,this.gb=function(t){w()[this.Va+4>>>2>>>0]=t},this.fb=function(t){w()[this.Va+8>>>2>>>0]=t},this.Wa=function(t,n){this.eb(),this.gb(t),this.fb(n)},this.eb=function(){w()[this.Va+16>>>2>>>0]=0}}var o=0,s=0;function m(e,t,n,f){return _?$(2,1,e,t,n,f):O(e,t,n,f)}function O(e,t,n,f){if(e>>>=0,t>>>=0,n>>>=0,f>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var y=[];return _&&y.length===0?m(e,t,n,f):(e={kb:n,Oa:e,hb:f,qb:y},_?(e.sb="spawnThread",postMessage(e,y),0):$e(e))}function S(e,t,n){return _?$(3,1,e,t,n):0}function R(e,t){if(_)return $(4,1,e,t)}var K=e=>{for(var t=0,n=0;n<e.length;++n){var f=e.charCodeAt(n);127>=f?t++:2047>=f?t+=2:55296<=f&&57343>=f?(t+=4,++n):t+=3}return t},le=(e,t,n,f)=>{if(n>>>=0,!(0<f))return 0;var y=n;f=n+f-1;for(var b=0;b<e.length;++b){var v=e.charCodeAt(b);if(55296<=v&&57343>=v){var z=e.charCodeAt(++b);v=65536+((v&1023)<<10)|z&1023}if(127>=v){if(n>=f)break;t[n++>>>0]=v}else{if(2047>=v){if(n+1>=f)break;t[n++>>>0]=192|v>>6}else{if(65535>=v){if(n+2>=f)break;t[n++>>>0]=224|v>>12}else{if(n+3>=f)break;t[n++>>>0]=240|v>>18,t[n++>>>0]=128|v>>12&63}t[n++>>>0]=128|v>>6&63}t[n++>>>0]=128|v&63}}return t[n>>>0]=0,n-y},oe=(e,t,n)=>le(e,h(),t,n);function se(e,t){if(_)return $(5,1,e,t)}function Qe(e,t,n){if(_)return $(6,1,e,t,n)}function Ze(e,t,n){return _?$(7,1,e,t,n):0}function c(e,t){if(_)return $(8,1,e,t)}function W(e,t,n){if(_)return $(9,1,e,t,n)}function G(e,t,n,f){if(_)return $(10,1,e,t,n,f)}function Se(e,t,n,f){if(_)return $(11,1,e,t,n,f)}function Ke(e,t,n,f){if(_)return $(12,1,e,t,n,f)}function Bt(e){if(_)return $(13,1,e)}function Wt(e,t){if(_)return $(14,1,e,t)}function kt(e,t,n){if(_)return $(15,1,e,t,n)}function mt(e){e>>>=0,typeof Atomics.rb=="function"&&(Atomics.rb(l(),e>>>2,e).value.then(ft),e+=128,Atomics.store(l(),e>>>2,1))}i.__emscripten_thread_mailbox_await=mt;var ft=()=>{var e=lt();if(e&&(mt(e),e=or,!P))try{if(e(),!(0<Le))try{_?Ot(te):Ye(te)}catch(t){t instanceof Pe||t=="unwind"||F(1,t)}}catch(t){t instanceof Pe||t=="unwind"||F(1,t)}};i.checkMailbox=ft;var gt=[],je=e=>e%4===0&&(e%100!==0||e%400===0),Nt=[0,31,60,91,121,152,182,213,244,274,305,335],Ht=[0,31,59,90,120,151,181,212,243,273,304,334];function $t(e,t,n,f,y,b,v,z){return _?$(16,1,e,t,n,f,y,b,v,z):-52}function Gt(e,t,n,f,y,b,v){if(_)return $(17,1,e,t,n,f,y,b,v)}var Yt=e=>{var t=K(e)+1,n=rr(t);return n&&oe(e,n,t),n},ht=[],yt={},jt=()=>{if(!bt){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:B||"./this.program"},t;for(t in yt)yt[t]===void 0?delete e[t]:e[t]=yt[t];var n=[];for(t in e)n.push(`${t}=${e[t]}`);bt=n}return bt},bt;function zt(e,t){if(_)return $(18,1,e,t);e>>>=0,t>>>=0;var n=0;return jt().forEach((f,y)=>{var b=t+n;for(y=w()[e+4*y>>>2>>>0]=b,b=0;b<f.length;++b)a()[y++>>>0>>>0]=f.charCodeAt(b);a()[y>>>0>>>0]=0,n+=f.length+1}),0}function qt(e,t){if(_)return $(19,1,e,t);e>>>=0,t>>>=0;var n=jt();w()[e>>>2>>>0]=n.length;var f=0;return n.forEach(y=>f+=y.length+1),w()[t>>>2>>>0]=f,0}function Vt(e){return _?$(20,1,e):52}function Jt(e,t,n,f){return _?$(21,1,e,t,n,f):52}function Xt(e,t,n,f,y){return _?$(22,1,e,t,n,f,y):70}var Gr=[null,[],[]];function Qt(e,t,n,f){if(_)return $(23,1,e,t,n,f);t>>>=0,n>>>=0,f>>>=0;for(var y=0,b=0;b<n;b++){var v=w()[t>>>2>>>0],z=w()[t+4>>>2>>>0];t+=8;for(var Te=0;Te<z;Te++){var ne=h()[v+Te>>>0],me=Gr[e];ne===0||ne===10?((e===1?Ie:ee)(Ve(me,0)),me.length=0):me.push(ne)}y+=z}return w()[f>>>2>>>0]=y,0}var Zt=[31,29,31,30,31,30,31,31,30,31,30,31],Kt=[31,28,31,30,31,30,31,31,30,31,30,31];function Yr(e){var t=Array(K(e)+1);return le(e,t,0,t.length),t}var jr=(e,t)=>{a().set(e,t>>>0)};function er(e,t,n,f){function y(p,H,q){for(p=typeof p=="number"?p.toString():p||"";p.length<H;)p=q[0]+p;return p}function b(p,H){return y(p,H,"0")}function v(p,H){function q(cr){return 0>cr?-1:0<cr?1:0}var We;return(We=q(p.getFullYear()-H.getFullYear()))===0&&(We=q(p.getMonth()-H.getMonth()))===0&&(We=q(p.getDate()-H.getDate())),We}function z(p){switch(p.getDay()){case 0:return new Date(p.getFullYear()-1,11,29);case 1:return p;case 2:return new Date(p.getFullYear(),0,3);case 3:return new Date(p.getFullYear(),0,2);case 4:return new Date(p.getFullYear(),0,1);case 5:return new Date(p.getFullYear()-1,11,31);case 6:return new Date(p.getFullYear()-1,11,30)}}function Te(p){var H=p.Ra;for(p=new Date(new Date(p.Sa+1900,0,1).getTime());0<H;){var q=p.getMonth(),We=(je(p.getFullYear())?Zt:Kt)[q];if(H>We-p.getDate())H-=We-p.getDate()+1,p.setDate(1),11>q?p.setMonth(q+1):(p.setMonth(0),p.setFullYear(p.getFullYear()+1));else{p.setDate(p.getDate()+H);break}}return q=new Date(p.getFullYear()+1,0,4),H=z(new Date(p.getFullYear(),0,4)),q=z(q),0>=v(H,p)?0>=v(q,p)?p.getFullYear()+1:p.getFullYear():p.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0,f>>>=0;var ne=w()[f+40>>>2>>>0];f={ob:l()[f>>>2>>>0],nb:l()[f+4>>>2>>>0],Ta:l()[f+8>>>2>>>0],Xa:l()[f+12>>>2>>>0],Ua:l()[f+16>>>2>>>0],Sa:l()[f+20>>>2>>>0],Na:l()[f+24>>>2>>>0],Ra:l()[f+28>>>2>>>0],ub:l()[f+32>>>2>>>0],mb:l()[f+36>>>2>>>0],pb:ne?Ge(ne):""},n=Ge(n),ne={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var me in ne)n=n.replace(new RegExp(me,"g"),ne[me]);var fr="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),lr="January February March April May June July August September October November December".split(" ");ne={"%a":p=>fr[p.Na].substring(0,3),"%A":p=>fr[p.Na],"%b":p=>lr[p.Ua].substring(0,3),"%B":p=>lr[p.Ua],"%C":p=>b((p.Sa+1900)/100|0,2),"%d":p=>b(p.Xa,2),"%e":p=>y(p.Xa,2," "),"%g":p=>Te(p).toString().substring(2),"%G":p=>Te(p),"%H":p=>b(p.Ta,2),"%I":p=>(p=p.Ta,p==0?p=12:12<p&&(p-=12),b(p,2)),"%j":p=>{for(var H=0,q=0;q<=p.Ua-1;H+=(je(p.Sa+1900)?Zt:Kt)[q++]);return b(p.Xa+H,3)},"%m":p=>b(p.Ua+1,2),"%M":p=>b(p.nb,2),"%n":()=>`\n`,"%p":p=>0<=p.Ta&&12>p.Ta?"AM":"PM","%S":p=>b(p.ob,2),"%t":()=>"\t","%u":p=>p.Na||7,"%U":p=>b(Math.floor((p.Ra+7-p.Na)/7),2),"%V":p=>{var H=Math.floor((p.Ra+7-(p.Na+6)%7)/7);if(2>=(p.Na+371-p.Ra-2)%7&&H++,H)H==53&&(q=(p.Na+371-p.Ra)%7,q==4||q==3&&je(p.Sa)||(H=1));else{H=52;var q=(p.Na+7-p.Ra-1)%7;(q==4||q==5&&je(p.Sa%400-1))&&H++}return b(H,2)},"%w":p=>p.Na,"%W":p=>b(Math.floor((p.Ra+7-(p.Na+6)%7)/7),2),"%y":p=>(p.Sa+1900).toString().substring(2),"%Y":p=>p.Sa+1900,"%z":p=>{p=p.mb;var H=0<=p;return p=Math.abs(p)/60,(H?"+":"-")+("0000"+(p/60*100+p%60)).slice(-4)},"%Z":p=>p.pb,"%%":()=>"%"},n=n.replace(/%%/g,"\\0\\0");for(me in ne)n.includes(me)&&(n=n.replace(new RegExp(me,"g"),ne[me](f)));return n=n.replace(/\\0\\0/g,"%"),me=Yr(n),me.length>t?0:(jr(me,e),me.length-1)}M.Wa();var zr=[C,ut,m,S,R,se,Qe,Ze,c,W,G,Se,Ke,Bt,Wt,kt,$t,Gt,zt,qt,Vt,Jt,Xt,Qt],qr={b:function(e,t,n){throw e>>>=0,new r(e).Wa(t>>>0,n>>>0),o=e,s++,o},L:function(e){nr(e>>>0,!k,1,!U,131072,!1),M.ab()},j:function(e){e>>>=0,_?postMessage({cmd:"cleanupThread",thread:e}):M.Za(M.Ma[e])},H:O,h:S,S:R,D:se,F:Qe,T:Ze,Q:c,J:W,P:G,n:Se,E:Ke,B:Bt,R:Wt,C:kt,p:()=>1,z:function(e,t){e>>>=0,e==t>>>0?setTimeout(()=>ft()):_?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=M.Ma[e])&&e.postMessage({cmd:"checkMailbox"})},I:function(e,t,n,f){t>>>=0,gt.length=n,f=f>>>0>>>3;for(var y=0;y<n;y++)gt[y]=g()[f+y>>>0];return e=0>e?Ne[-e-1]:zr[e],M.ib=t,t=e.apply(null,gt),M.ib=0,t},K:mt,o:function(e){L&&M.Ma[e>>>0].ref()},s:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),l()[n>>>2>>>0]=e.getUTCSeconds(),l()[n+4>>>2>>>0]=e.getUTCMinutes(),l()[n+8>>>2>>>0]=e.getUTCHours(),l()[n+12>>>2>>>0]=e.getUTCDate(),l()[n+16>>>2>>>0]=e.getUTCMonth(),l()[n+20>>>2>>>0]=e.getUTCFullYear()-1900,l()[n+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,l()[n+28>>>2>>>0]=e},t:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),l()[n>>>2>>>0]=e.getSeconds(),l()[n+4>>>2>>>0]=e.getMinutes(),l()[n+8>>>2>>>0]=e.getHours(),l()[n+12>>>2>>>0]=e.getDate(),l()[n+16>>>2>>>0]=e.getMonth(),l()[n+20>>>2>>>0]=e.getFullYear()-1900,l()[n+24>>>2>>>0]=e.getDay(),t=(je(e.getFullYear())?Nt:Ht)[e.getMonth()]+e.getDate()-1|0,l()[n+28>>>2>>>0]=t,l()[n+36>>>2>>>0]=-(60*e.getTimezoneOffset()),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var f=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=(t!=f&&e.getTimezoneOffset()==Math.min(f,t))|0,l()[n+32>>>2>>>0]=e},u:function(e){e>>>=0;var t=new Date(l()[e+20>>>2>>>0]+1900,l()[e+16>>>2>>>0],l()[e+12>>>2>>>0],l()[e+8>>>2>>>0],l()[e+4>>>2>>>0],l()[e>>>2>>>0],0),n=l()[e+32>>>2>>>0],f=t.getTimezoneOffset(),y=new Date(t.getFullYear(),6,1).getTimezoneOffset(),b=new Date(t.getFullYear(),0,1).getTimezoneOffset(),v=Math.min(b,y);return 0>n?l()[e+32>>>2>>>0]=+(y!=b&&v==f):0<n!=(v==f)&&(y=Math.max(b,y),t.setTime(t.getTime()+6e4*((0<n?v:y)-f))),l()[e+24>>>2>>>0]=t.getDay(),n=(je(t.getFullYear())?Nt:Ht)[t.getMonth()]+t.getDate()-1|0,l()[e+28>>>2>>>0]=n,l()[e>>>2>>>0]=t.getSeconds(),l()[e+4>>>2>>>0]=t.getMinutes(),l()[e+8>>>2>>>0]=t.getHours(),l()[e+12>>>2>>>0]=t.getDate(),l()[e+16>>>2>>>0]=t.getMonth(),l()[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),isNaN(e)?(l()[tr()>>>2>>>0]=61,e=-1):e/=1e3,sr((De=e,1<=+Math.abs(De)?0<De?+Math.floor(De/4294967296)>>>0:~~+Math.ceil((De-+(~~De>>>0))/4294967296)>>>0:0)),e>>>0},q:$t,r:Gt,y:function(e,t,n){function f(ne){return(ne=ne.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ne[1]:"GMT"}e>>>=0,t>>>=0,n>>>=0;var y=new Date().getFullYear(),b=new Date(y,0,1),v=new Date(y,6,1);y=b.getTimezoneOffset();var z=v.getTimezoneOffset(),Te=Math.max(y,z);w()[e>>>2>>>0]=60*Te,l()[t>>>2>>>0]=+(y!=z),e=f(b),t=f(v),e=Yt(e),t=Yt(t),z<y?(w()[n>>>2>>>0]=e,w()[n+4>>>2>>>0]=t):(w()[n>>>2>>>0]=t,w()[n+4>>>2>>>0]=e)},c:()=>{Z("")},O:function(e,t,n){e>>>=0,t>>>=0,n>>>=0,ht.length=0;for(var f;f=h()[t++>>>0];){var y=f!=105;y&=f!=112,n+=y&&n%8?4:0,ht.push(f==112?w()[n>>>2>>>0]:f==105?l()[n>>>2>>>0]:g()[n>>>3>>>0]),n+=y?8:4}return Ne[e].apply(null,ht)},k:()=>{},i:()=>Date.now(),U:()=>{throw Le+=1,"unwind"},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:()=>L?(wr(),tt(br)).cpus().length:navigator.hardwareConcurrency,x:function(e){e>>>=0;var t=h().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var f=t*(1+.2/n);f=Math.min(f,e+100663296);var y=Math;f=Math.max(e,f);e:{y=(y.min.call(y,4294901760,f+(65536-f%65536)%65536)-j.buffer.byteLength+65535)/65536;try{j.grow(y),we();var b=1;break e}catch{}b=void 0}if(b)return!0}return!1},M:zt,N:qt,G:Ye,g:Vt,m:Jt,v:Xt,l:Qt,a:j||i.wasmMemory,w:er,d:function(e,t,n,f){return er(e>>>0,t>>>0,n>>>0,f>>>0)}},T=function(){function e(n,f){return T=n.exports,T=Vr(),M.bb.push(T.za),Xe=T.Aa,Fe.unshift(T.V),ce=f,re(),T}var t={a:qr};if(pe++,i.instantiateWasm)try{return i.instantiateWasm(t,e)}catch(n){ee(`Module.instantiateWasm callback failed with error: ${n}`),D(n)}return at(t,function(n){e(n.instance,n.module)}).catch(D),{}}();i._OrtInit=(e,t)=>(i._OrtInit=T.W)(e,t),i._OrtGetLastError=(e,t)=>(i._OrtGetLastError=T.X)(e,t),i._OrtCreateSessionOptions=(e,t,n,f,y,b,v,z,Te,ne)=>(i._OrtCreateSessionOptions=T.Y)(e,t,n,f,y,b,v,z,Te,ne),i._OrtAppendExecutionProvider=(e,t)=>(i._OrtAppendExecutionProvider=T.Z)(e,t),i._OrtAddFreeDimensionOverride=(e,t,n)=>(i._OrtAddFreeDimensionOverride=T._)(e,t,n),i._OrtAddSessionConfigEntry=(e,t,n)=>(i._OrtAddSessionConfigEntry=T.$)(e,t,n),i._OrtReleaseSessionOptions=e=>(i._OrtReleaseSessionOptions=T.aa)(e),i._OrtCreateSession=(e,t,n)=>(i._OrtCreateSession=T.ba)(e,t,n),i._OrtReleaseSession=e=>(i._OrtReleaseSession=T.ca)(e),i._OrtGetInputOutputCount=(e,t,n)=>(i._OrtGetInputOutputCount=T.da)(e,t,n),i._OrtGetInputName=(e,t)=>(i._OrtGetInputName=T.ea)(e,t),i._OrtGetOutputName=(e,t)=>(i._OrtGetOutputName=T.fa)(e,t),i._OrtFree=e=>(i._OrtFree=T.ga)(e),i._OrtCreateTensor=(e,t,n,f,y,b)=>(i._OrtCreateTensor=T.ha)(e,t,n,f,y,b),i._OrtGetTensorData=(e,t,n,f,y)=>(i._OrtGetTensorData=T.ia)(e,t,n,f,y),i._OrtReleaseTensor=e=>(i._OrtReleaseTensor=T.ja)(e),i._OrtCreateRunOptions=(e,t,n,f)=>(i._OrtCreateRunOptions=T.ka)(e,t,n,f),i._OrtAddRunConfigEntry=(e,t,n)=>(i._OrtAddRunConfigEntry=T.la)(e,t,n),i._OrtReleaseRunOptions=e=>(i._OrtReleaseRunOptions=T.ma)(e),i._OrtCreateBinding=e=>(i._OrtCreateBinding=T.na)(e),i._OrtBindInput=(e,t,n)=>(i._OrtBindInput=T.oa)(e,t,n),i._OrtBindOutput=(e,t,n,f)=>(i._OrtBindOutput=T.pa)(e,t,n,f),i._OrtClearBoundOutputs=e=>(i._OrtClearBoundOutputs=T.qa)(e),i._OrtReleaseBinding=e=>(i._OrtReleaseBinding=T.ra)(e),i._OrtRunWithBinding=(e,t,n,f,y)=>(i._OrtRunWithBinding=T.sa)(e,t,n,f,y),i._OrtRun=(e,t,n,f,y,b,v,z)=>(i._OrtRun=T.ta)(e,t,n,f,y,b,v,z),i._OrtEndProfiling=e=>(i._OrtEndProfiling=T.ua)(e);var tr=()=>(tr=T.va)(),lt=i._pthread_self=()=>(lt=i._pthread_self=T.wa)(),rr=i._malloc=e=>(rr=i._malloc=T.xa)(e);i._free=e=>(i._free=T.ya)(e),i.__emscripten_tls_init=()=>(i.__emscripten_tls_init=T.za)();var nr=i.__emscripten_thread_init=(e,t,n,f,y,b)=>(nr=i.__emscripten_thread_init=T.Ba)(e,t,n,f,y,b);i.__emscripten_thread_crashed=()=>(i.__emscripten_thread_crashed=T.Ca)();var ar=(e,t,n,f)=>(ar=T.Da)(e,t,n,f),wt=e=>(wt=T.Ea)(e),Ot=i.__emscripten_thread_exit=e=>(Ot=i.__emscripten_thread_exit=T.Fa)(e),or=()=>(or=T.Ga)(),sr=e=>(sr=T.Ha)(e),ir=(e,t)=>(ir=T.Ia)(e,t),vt=()=>(vt=T.Ja)(),ct=e=>(ct=T.Ka)(e),_t=e=>(_t=T.La)(e);function Vr(){var e=T;e=Object.assign({},e);var t=f=>()=>f()>>>0,n=f=>y=>f(y)>>>0;return e.va=t(e.va),e.wa=t(e.wa),e.xa=n(e.xa),e.emscripten_main_runtime_thread_id=t(e.emscripten_main_runtime_thread_id),e.Ja=t(e.Ja),e.La=n(e.La),e}i.wasmMemory=j,i.stackAlloc=_t,i.stackSave=vt,i.stackRestore=ct,i.keepRuntimeAlive=()=>0<Le,i.UTF8ToString=Ge,i.stringToUTF8=oe,i.lengthBytesUTF8=K,i.ExitStatus=Pe,i.PThread=M;var dt;ve=function e(){dt||ur(),dt||(ve=e)};function ur(){if(!(0<pe))if(_)A(i),_||Be(Fe),startWorker(i);else{if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;)Me.unshift(i.preRun.shift());Be(Me),0<pe||dt||(dt=!0,i.calledRun=!0,P||(_||Be(Fe),A(i),_||Be(Ee)))}}return ur(),d.ready}})();typeof vr=="object"&&typeof Ft=="object"?Ft.exports=Or:typeof define=="function"&&define.amd&&define([],()=>Or)});var Er=et((On,nn)=>{nn.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var Tr;Tr=gr();var an=_r(),Ut,Pt=!1,pt=!1,Sr=!1,on=u=>{if(u===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+u+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+u+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},sn=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},un=(u,d)=>u?d?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":d?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Ar=async u=>{if(Pt)return Promise.resolve();if(pt)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Sr)throw new Error("previous call to \'initializeWebAssembly()\' failed.");pt=!0;let d=u.initTimeout,a=u.numThreads,h=u.simd,l=on(a),w=h&&sn(),g=u.wasmPaths,i=typeof g=="string"?g:void 0,A=un(w,l),D=typeof g=="object"?g[A]:void 0,I=!1,B=[];if(d>0&&B.push(new Promise(F=>{setTimeout(()=>{I=!0,F()},d)})),B.push(new Promise((F,U)=>{let k=l?an:Tr,L={locateFile:(_,x)=>l&&_.endsWith(".worker.js")&&typeof Blob<"u"?URL.createObjectURL(new Blob([Er()],{type:"text/javascript"})):_.endsWith(".wasm")?D||(i??x)+A:x+_};if(l)if(L.numThreads=a,typeof Blob>"u")L.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let _=`var ortWasmThreaded=${k.toString()};`;L.mainScriptUrlOrBlob=new Blob([_],{type:"text/javascript"})}k(L).then(_=>{pt=!1,Pt=!0,Ut=_,F()},_=>{pt=!1,Sr=!0,U(_)})})),await Promise.race(B),I)throw new Error(`WebAssembly backend initializing failed due to timeout: ${d}ms`)},X=()=>{if(Pt&&Ut)return Ut;throw new Error("WebAssembly is not initialized yet.")};var Q=(u,d)=>{let a=X(),h=a.lengthBytesUTF8(u)+1,l=a._malloc(h);return a.stringToUTF8(u,l,h),d.push(l),l},rt=(u,d,a,h)=>{if(typeof u=="object"&&u!==null){if(a.has(u))throw new Error("Circular reference in options");a.add(u)}Object.entries(u).forEach(([l,w])=>{let g=d?d+l:l;if(typeof w=="object")rt(w,g+".",a,h);else if(typeof w=="string"||typeof w=="number")h(g,w.toString());else if(typeof w=="boolean")h(g,w?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof w}`)})},V=u=>{let d=X(),a=d.stackSave();try{let h=d.stackAlloc(8);d._OrtGetLastError(h,h+4);let l=d.HEAP32[h/4],w=d.HEAPU32[h/4+1],g=w?d.UTF8ToString(w):"";throw new Error(`${u} ERROR_CODE: ${l}, ERROR_MESSAGE: ${g}`)}finally{d.stackRestore(a)}};var Mr=u=>{let d=X(),a=0,h=[],l=u||{};try{if(u?.logSeverityLevel===void 0)l.logSeverityLevel=2;else if(typeof u.logSeverityLevel!="number"||!Number.isInteger(u.logSeverityLevel)||u.logSeverityLevel<0||u.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${u.logSeverityLevel}`);if(u?.logVerbosityLevel===void 0)l.logVerbosityLevel=0;else if(typeof u.logVerbosityLevel!="number"||!Number.isInteger(u.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${u.logVerbosityLevel}`);u?.terminate===void 0&&(l.terminate=!1);let w=0;return u?.tag!==void 0&&(w=Q(u.tag,h)),a=d._OrtCreateRunOptions(l.logSeverityLevel,l.logVerbosityLevel,!!l.terminate,w),a===0&&V("Can\'t create run options."),u?.extra!==void 0&&rt(u.extra,"",new WeakSet,(g,i)=>{let A=Q(g,h),D=Q(i,h);d._OrtAddRunConfigEntry(a,A,D)!==0&&V(`Can\'t set a run config entry: ${g} - ${i}.`)}),[a,h]}catch(w){throw a!==0&&d._OrtReleaseRunOptions(a),h.forEach(g=>d._free(g)),w}};var fn=u=>{switch(u){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${u}`)}},ln=u=>{switch(u){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${u}`)}},cn=u=>{u.extra||(u.extra={}),u.extra.session||(u.extra.session={});let d=u.extra.session;d.use_ort_model_bytes_directly||(d.use_ort_model_bytes_directly="1"),u.executionProviders&&u.executionProviders.some(a=>(typeof a=="string"?a:a.name)==="webgpu")&&(u.enableMemPattern=!1)},dn=(u,d,a)=>{for(let h of d){let l=typeof h=="string"?h:h.name;switch(l){case"webnn":if(l="WEBNN",typeof h!="string"){let g=h;if(g?.deviceType){let i=Q("deviceType",a),A=Q(g.deviceType,a);X()._OrtAddSessionConfigEntry(u,i,A)!==0&&V(`Can\'t set a session config entry: \'deviceType\' - ${g.deviceType}.`)}if(g?.numThreads){let i=g.numThreads;(typeof i!="number"||!Number.isInteger(i)||i<0)&&(i=0);let A=Q("numThreads",a),D=Q(i.toString(),a);X()._OrtAddSessionConfigEntry(u,A,D)!==0&&V(`Can\'t set a session config entry: \'numThreads\' - ${g.numThreads}.`)}if(g?.powerPreference){let i=Q("powerPreference",a),A=Q(g.powerPreference,a);X()._OrtAddSessionConfigEntry(u,i,A)!==0&&V(`Can\'t set a session config entry: \'powerPreference\' - ${g.powerPreference}.`)}}break;case"webgpu":if(l="JS",typeof h!="string"){let g=h;if(g?.preferredLayout){if(g.preferredLayout!=="NCHW"&&g.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${g.preferredLayout}`);let i=Q("preferredLayout",a),A=Q(g.preferredLayout,a);X()._OrtAddSessionConfigEntry(u,i,A)!==0&&V(`Can\'t set a session config entry: \'preferredLayout\' - ${g.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${l}`)}let w=Q(l,a);X()._OrtAppendExecutionProvider(u,w)!==0&&V(`Can\'t append execution provider: ${l}.`)}},Cr=u=>{let d=X(),a=0,h=[],l=u||{};cn(l);try{let w=fn(l.graphOptimizationLevel??"all"),g=ln(l.executionMode??"sequential"),i=typeof l.logId=="string"?Q(l.logId,h):0,A=l.logSeverityLevel??2;if(!Number.isInteger(A)||A<0||A>4)throw new Error(`log serverity level is not valid: ${A}`);let D=l.logVerbosityLevel??0;if(!Number.isInteger(D)||D<0||D>4)throw new Error(`log verbosity level is not valid: ${D}`);let I=typeof l.optimizedModelFilePath=="string"?Q(l.optimizedModelFilePath,h):0;if(a=d._OrtCreateSessionOptions(w,!!l.enableCpuMemArena,!!l.enableMemPattern,g,!!l.enableProfiling,0,i,A,D,I),a===0&&V("Can\'t create session options."),l.executionProviders&&dn(a,l.executionProviders,h),l.freeDimensionOverrides)for(let[B,F]of Object.entries(l.freeDimensionOverrides)){if(typeof B!="string")throw new Error(`free dimension override name must be a string: ${B}`);if(typeof F!="number"||!Number.isInteger(F)||F<0)throw new Error(`free dimension override value must be a non-negative integer: ${F}`);let U=Q(B,h);d._OrtAddFreeDimensionOverride(a,U,F)!==0&&V(`Can\'t set a free dimension override: ${B} - ${F}.`)}return l.extra!==void 0&&rt(l.extra,"",new WeakSet,(B,F)=>{let U=Q(B,h),k=Q(F,h);d._OrtAddSessionConfigEntry(a,U,k)!==0&&V(`Can\'t set a session config entry: ${B} - ${F}.`)}),[a,h]}catch(w){throw a!==0&&d._OrtReleaseSessionOptions(a),h.forEach(g=>d._free(g)),w}};var Rt=u=>{switch(u){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${u}`)}},Dr=u=>{switch(u){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${u}`)}},It=u=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][u],xr=u=>{switch(u){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${u}`)}},Fr=u=>{switch(u){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${u}`)}},Ur=u=>u==="float32"||u==="int32"||u==="int64"||u==="bool"||u==="float16"||u==="uint32",Pr=u=>{switch(u){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${u}`)}};var Rr=async u=>{if(typeof u=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(u))}catch(d){if(d.code==="ERR_FS_FILE_TOO_LARGE"){let a=(void 0)(u),h=[];for await(let l of a)h.push(l);return new Uint8Array(Buffer.concat(h))}throw d}else{let d=await fetch(u);if(!d.ok)throw new Error(`failed to load external data file: ${u}`);let a=d.headers.get("Content-Length"),h=a?parseInt(a,10):0;if(h<1073741824)return new Uint8Array(await d.arrayBuffer());{if(!d.body)throw new Error(`failed to load external data file: ${u}, no response body.`);let l=d.body.getReader(),w;try{w=new ArrayBuffer(h)}catch(i){if(i instanceof RangeError){let A=Math.ceil(h/65536);w=new WebAssembly.Memory({initial:A,maximum:A}).buffer}else throw i}let g=0;for(;;){let{done:i,value:A}=await l.read();if(i)break;let D=A.byteLength;new Uint8Array(w,g,D).set(A),g+=D}return new Uint8Array(w,0,h)}}else return u instanceof Blob?new Uint8Array(await u.arrayBuffer()):u instanceof Uint8Array?u:new Uint8Array(u)};var pn=(u,d)=>{X()._OrtInit(u,d)!==0&&V("Can\'t initialize onnxruntime.")},Lr=async u=>{pn(u.wasm.numThreads,Fr(u.logLevel))},Br=async(u,d)=>{},nt=new Map,mn=u=>{let d=X(),a=d.stackSave();try{let h=d.stackAlloc(8);return d._OrtGetInputOutputCount(u,h,h+4)!==0&&V("Can\'t get session input/output count."),[d.HEAP32[h/4],d.HEAP32[h/4+1]]}finally{d.stackRestore(a)}},Lt=u=>{let d=X(),a=d._malloc(u.byteLength);if(a===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${u.byteLength}.`);return d.HEAPU8.set(u,a),[a,u.byteLength]},Wr=async(u,d)=>{let a,h,l=X();Array.isArray(u)?[a,h]=u:u.buffer===l.HEAPU8.buffer?[a,h]=[u.byteOffset,u.byteLength]:[a,h]=Lt(u);let w=0,g=0,i=0,A=[],D=[],I=[];try{if([g,A]=Cr(d),d?.externalData&&l.mountExternalData){let x=[];for(let N of d.externalData){let he=typeof N=="string"?N:N.path;x.push(Rr(typeof N=="string"?N:N.data).then(ie=>{l.mountExternalData(he,ie)}))}await Promise.all(x)}w=l._OrtCreateSession(a,h,g),w===0&&V("Can\'t create a session.");let[B,F]=mn(w),U=[],k=[],L=[];for(let x=0;x<B;x++){let N=l._OrtGetInputName(w,x);N===0&&V("Can\'t get an input name."),D.push(N),U.push(l.UTF8ToString(N))}for(let x=0;x<F;x++){let N=l._OrtGetOutputName(w,x);N===0&&V("Can\'t get an output name."),I.push(N);let he=l.UTF8ToString(N);k.push(he)}let _=null;return nt.set(w,[w,D,I,_]),[w,U,k]}catch(B){throw D.forEach(F=>l._OrtFree(F)),I.forEach(F=>l._OrtFree(F)),i!==0&&l._OrtReleaseBinding(i),w!==0&&l._OrtReleaseSession(w),B}finally{l._free(a),g!==0&&l._OrtReleaseSessionOptions(g),A.forEach(B=>l._free(B)),l.unmountExternalData?.()}},kr=u=>{let d=X(),a=nt.get(u);if(!a)throw new Error(`cannot release session. invalid session id: ${u}`);let[h,l,w,g]=a;g&&d._OrtReleaseBinding(g.handle),d.jsepUnregisterBuffers?.(u),l.forEach(i=>d._OrtFree(i)),w.forEach(i=>d._OrtFree(i)),d._OrtReleaseSession(h),nt.delete(u)},Ir=(u,d,a,h,l)=>{if(!u){d.push(0);return}let w=X(),g=u[0],i=u[1],A=u[3],D,I;if(g==="string"&&A==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(A==="gpu-buffer"){let U=u[2].gpuBuffer,k=It(Rt(g));I=i.reduce((L,_)=>L*_,1)*k,D=w.jsepRegisterBuffer(h,l,U,I)}else{let U=u[2];if(Array.isArray(U)){I=4*U.length,D=w._malloc(I),a.push(D);let k=D/4;for(let L=0;L<U.length;L++){if(typeof U[L]!="string")throw new TypeError(`tensor data at index ${L} is not a string`);w.HEAPU32[k++]=Q(U[L],a)}}else I=U.byteLength,D=w._malloc(I),a.push(D),w.HEAPU8.set(new Uint8Array(U.buffer,U.byteOffset,I),D)}let B=w.stackSave(),F=w.stackAlloc(4*i.length);try{let U=F/4;i.forEach(L=>w.HEAP32[U++]=L);let k=w._OrtCreateTensor(Rt(g),D,I,F,i.length,Pr(A));k===0&&V(`Can\'t create tensor for input/output. session=${h}, index=${l}.`),d.push(k)}finally{w.stackRestore(B)}},Nr=async(u,d,a,h,l,w)=>{let g=X(),i=nt.get(u);if(!i)throw new Error(`cannot run inference. invalid session id: ${u}`);let[A,D,I,B]=i,F=d.length,U=h.length,k=0,L=[],_=[],x=[],N=[],he=g.stackSave(),ie=g.stackAlloc(F*4),ae=g.stackAlloc(F*4),E=g.stackAlloc(U*4),Y=g.stackAlloc(U*4);try{[k,L]=Mr(w);for(let P=0;P<F;P++)Ir(a[P],_,N,u,d[P]);for(let P=0;P<U;P++)Ir(l[P],x,N,u,F+h[P]);let ue=ie/4,Re=ae/4,Ie=E/4,ee=Y/4;for(let P=0;P<F;P++)g.HEAPU32[ue++]=_[P],g.HEAPU32[Re++]=D[d[P]];for(let P=0;P<U;P++)g.HEAPU32[Ie++]=x[P],g.HEAPU32[ee++]=I[h[P]];let j;j=await g._OrtRun(A,ae,ie,F,Y,U,E,k),j!==0&&V("failed to call OrtRun().");let ce=[];for(let P=0;P<U;P++){let te=g.HEAPU32[E/4+P];if(te===x[P]){ce.push(l[P]);continue}let de=g.stackSave(),ge=g.stackAlloc(4*4),ye=!1,J,fe=0;try{g._OrtGetTensorData(te,ge,ge+4,ge+8,ge+12)!==0&&V(`Can\'t access output tensor data on index ${P}.`);let Ae=ge/4,Me=g.HEAPU32[Ae++];fe=g.HEAPU32[Ae++];let Fe=g.HEAPU32[Ae++],Ee=g.HEAPU32[Ae++],pe=[];for(let re=0;re<Ee;re++)pe.push(g.HEAPU32[Fe/4+re]);g._OrtFree(Fe);let Oe=pe.reduce((re,Z)=>re*Z,1);J=Dr(Me);let ve=B?.outputPreferredLocations[h[P]];if(J==="string"){if(ve==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let re=[],Z=fe/4;for(let Ce=0;Ce<Oe;Ce++){let be=g.HEAPU32[Z++],_e=Ce===Oe-1?void 0:g.HEAPU32[Z]-be;re.push(g.UTF8ToString(be,_e))}ce.push([J,pe,re,"cpu"])}else if(ve==="gpu-buffer"&&Oe>0){let re=g.jsepGetBuffer(fe),Z=It(Me);if(Z===void 0||!Ur(J))throw new Error(`Unsupported data type: ${J}`);ye=!0,ce.push([J,pe,{gpuBuffer:re,download:g.jsepCreateDownloader(re,Oe*Z,J),dispose:()=>{g._OrtReleaseTensor(te)}},"gpu-buffer"])}else{let re=xr(J),Z=new re(Oe);new Uint8Array(Z.buffer,Z.byteOffset,Z.byteLength).set(g.HEAPU8.subarray(fe,fe+Z.byteLength)),ce.push([J,pe,Z,"cpu"])}}finally{g.stackRestore(de),J==="string"&&fe&&g._free(fe),ye||g._OrtReleaseTensor(te)}}return B&&g._OrtClearBoundOutputs(B.handle),ce}finally{g.stackRestore(he),_.forEach(ue=>g._OrtReleaseTensor(ue)),x.forEach(ue=>g._OrtReleaseTensor(ue)),N.forEach(ue=>g._free(ue)),k!==0&&g._OrtReleaseRunOptions(k),L.forEach(ue=>g._free(ue))}},Hr=u=>{let d=X(),a=nt.get(u);if(!a)throw new Error("invalid session id");let h=a[0],l=d._OrtEndProfiling(h);l===0&&V("Can\'t get an profile file name."),d._OrtFree(l)},$r=u=>{let d=[];for(let a of u){let h=a[2];!Array.isArray(h)&&"buffer"in h&&d.push(h.buffer)}return d};self.onmessage=u=>{let{type:d,in:a}=u.data;try{switch(d){case"init-wasm":Ar(a.wasm).then(()=>{Lr(a).then(()=>{postMessage({type:d})},h=>{postMessage({type:d,err:h})})},h=>{postMessage({type:d,err:h})});break;case"init-ep":{let{epName:h,env:l}=a;Br(l,h).then(()=>{postMessage({type:d})},w=>{postMessage({type:d,err:w})});break}case"copy-from":{let{buffer:h}=a,l=Lt(h);postMessage({type:d,out:l});break}case"create":{let{model:h,options:l}=a;Wr(h,l).then(w=>{postMessage({type:d,out:w})},w=>{postMessage({type:d,err:w})});break}case"release":kr(a),postMessage({type:d});break;case"run":{let{sessionId:h,inputIndices:l,inputs:w,outputIndices:g,options:i}=a;Nr(h,l,w,g,new Array(g.length).fill(null),i).then(A=>{A.some(D=>D[3]!=="cpu")?postMessage({type:d,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:d,out:A},$r(A))},A=>{postMessage({type:d,err:A})});break}case"end-profiling":Hr(a),postMessage({type:d});break;default:}}catch(h){postMessage({type:d,err:h})}};})();\n'})),vr,bt,Tn,Fo,$o,ha,ma,Vr,Wr,gg,Lo,id,ad,sd,ud,ld,fd,cd,ba=L((()=>{vt(),nd(),zr(),vr=()=>!!Z.wasm.proxy&&typeof document<"u",Tn=!1,Fo=!1,$o=!1,ma=new Map,Vr=(e,t)=>{let n=ma.get(e);n?n.push(t):ma.set(e,[t])},Wr=()=>{if(Tn||!Fo||$o||!bt)throw new Error("worker not ready")},gg=e=>{switch(e.data.type){case"init-wasm":Tn=!1,e.data.err?($o=!0,ha[1](e.data.err)):(Fo=!0,ha[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=ma.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},Lo=typeof document<"u"?document?.currentScript?.src:void 0,id=async()=>{if(!Fo){if(Tn)throw new Error("multiple calls to 'initWasm()' detected.");if($o)throw new Error("previous call to 'initWasm()' failed.");if(Tn=!0,vr())return void 0===Z.wasm.wasmPaths&&Lo&&0!==Lo.indexOf("blob:")&&(Z.wasm.wasmPaths=Lo.substr(0,+Lo.lastIndexOf("/")+1)),new Promise(((e,t)=>{bt?.terminate();let n=URL.createObjectURL(new Blob([od()],{type:"text/javascript"}));(bt=new Worker(n,{name:"ort-wasm-proxy-worker"})).onerror=e=>t(e),bt.onmessage=gg,URL.revokeObjectURL(n),ha=[e,t];let r={type:"init-wasm",in:Z};bt.postMessage(r)}));try{await Gp(Z.wasm),await Kp(Z),Fo=!0}catch(e){throw $o=!0,e}finally{Tn=!1}}},ad=async e=>{if(vr())return Wr(),new Promise(((t,n)=>{Vr("init-ep",[t,n]);let r={type:"init-ep",in:{epName:e,env:Z}};bt.postMessage(r)}));await Jp(Z,e)},sd=async e=>vr()?(Wr(),new Promise(((t,n)=>{Vr("copy-from",[t,n]);let r={type:"copy-from",in:{buffer:e}};bt.postMessage(r,[e.buffer])}))):da(e),ud=async(e,t)=>{if(vr()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Wr(),new Promise(((n,r)=>{Vr("create",[n,r]);let s={type:"create",in:{model:e,options:t}},a=[];e instanceof Uint8Array&&a.push(e.buffer),bt.postMessage(s,a)}))}return Zp(e,t)},ld=async e=>{if(vr())return Wr(),new Promise(((t,n)=>{Vr("release",[t,n]);let r={type:"release",in:e};bt.postMessage(r)}));Qp(e)},fd=async(e,t,n,r,s,a)=>{if(vr()){if(n.some((e=>"cpu"!==e[3])))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some((e=>e)))throw new Error("pre-allocated output tensor is not supported for proxy.");return Wr(),new Promise(((s,i)=>{Vr("run",[s,i]);let o=n,l={type:"run",in:{sessionId:e,inputIndices:t,inputs:o,outputIndices:r,options:a}};bt.postMessage(l,rd(o))}))}return ed(e,t,n,r,s,a)},cd=async e=>{if(vr())return Wr(),new Promise(((t,n)=>{Vr("end-profiling",[t,n]);let r={type:"end-profiling",in:e};bt.postMessage(r)}));td(e)}})),pd,yg,Co,dd=L((()=>{vt(),ba(),ca(),pa(),pd=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},yg=e=>{switch(e[3]){case"cpu":return new ke(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Do(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:r,dispose:s}=e[2];return ke.fromGpuBuffer(n,{dataType:t,dims:e[1],download:r,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},Co=class{async fetchModelAndCopyToWasmMemory(e){return sd(await gn(e))}async loadModel(e,t){let n;Xt(),n="string"==typeof e?typeof process<"u"&&process.versions&&process.versions.node?await gn(e):await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames]=await ud(n,t),Kt()}async dispose(){return ld(this.sessionId)}async run(e,t,n){Xt();let r=[],s=[];Object.entries(e).forEach((e=>{let t=e[0],n=e[1],a=this.inputNames.indexOf(t);if(-1===a)throw new Error(`invalid input '${t}'`);r.push(n),s.push(a)}));let a=[],i=[];Object.entries(t).forEach((e=>{let t=e[0],n=e[1],r=this.outputNames.indexOf(t);if(-1===r)throw new Error(`invalid output '${t}'`);a.push(n),i.push(r)}));let o=r.map(((e,t)=>pd(e,(()=>`input "${this.inputNames[s[t]]}"`)))),l=a.map(((e,t)=>e?pd(e,(()=>`output "${this.outputNames[i[t]]}"`)):null)),u=await fd(this.sessionId,s,o,i,l,n),c={};for(let e=0;e<u.length;e++)c[this.outputNames[i[e]]]=a[e]??yg(u[e]);return Kt(),c}startProfiling(){}endProfiling(){cd(this.sessionId)}}})),Tg,ko,hd=L((()=>{vt(),ba(),dd(),Tg=()=>{if(("number"!=typeof Z.wasm.initTimeout||Z.wasm.initTimeout<0)&&(Z.wasm.initTimeout=0),"boolean"!=typeof Z.wasm.simd&&(Z.wasm.simd=!0),"boolean"!=typeof Z.wasm.proxy&&(Z.wasm.proxy=!1),"boolean"!=typeof Z.wasm.trace&&(Z.wasm.trace=!1),"number"!=typeof Z.wasm.numThreads||!Number.isInteger(Z.wasm.numThreads)||Z.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Z.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Z.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},ko=class{async init(e){Tg(),await id(),await ad(e)}async createInferenceSessionHandler(e,t){let n=new Co;return await n.loadModel(e,t),Promise.resolve(n)}}})),md={};ar(md,{wasmBackend:()=>xg});var xg,bd=L((()=>{hd(),xg=new ko})),wg={};ar(wg,{InferenceSession:()=>hs,TRACE:()=>jo,TRACE_FUNC_BEGIN:()=>Xt,TRACE_FUNC_END:()=>Kt,Tensor:()=>ke,TrainingSession:()=>ys,default:()=>vg,env:()=>Z,registerBackend:()=>Yt}),module.exports=jt(wg),vt(),vt(),vt();var xs="1.17.1",vg=Xo;{let e=(Ip(),jt(Op)).onnxjsBackend;Yt("webgl",e,-10)}{let e=(bd(),jt(md)).wasmBackend;Yt("cpu",e,10),Yt("wasm",e,10),Yt("webnn",e,9)}Object.defineProperty(Z.versions,"web",{value:xs,enumerable:!0})}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.loaded=!0,n.exports}__webpack_require__.amdD=function(){throw new Error("define cannot be used indirect")},__webpack_require__.amdO={},__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var __webpack_exports__={};return(()=>{"use strict";__webpack_require__.r(__webpack_exports__);const e=["\n"," ","#","+","-","1","2","3","4","5","6","7","8","=","B","K","N","O","Q","R","a","b","c","d","e","f","g","h","x"];function t(t){return e.indexOf(t)}function n(t){return e[t]}function r(e){return e.split("").map(t)}const s=__webpack_require__(833),a=__webpack_require__(951);!async function(){try{document.write("Loading model...");const e=await s.InferenceSession.create("./chessgpt.onnx");document.write("Model loaded");const t=e.inputNames,i=e.outputNames;console.log("Model api:"),console.log(`inputNames:${t}`),console.log(`outputNames:${i}`);const o="e4 e5 ";console.log(r(o)),console.log(r(o).map(n).join(""));const l=new BigInt64Array(32);console.log(l);const u=new s.Tensor("int64",l,[1,32]);console.log("Input:"),console.log("TensorA:"),console.log(u);const c={context:u};console.log(c);const h=await e.run(c);console.log("Model Output:");const p=h.logits,d=a.tensor(p.data);console.log(`outputTensorJs ${d}`);const f=d.reshape([1,32,29]);console.log("shape:",f.shape),f.print();const m=f.slice([0,0,0],[1,1,29]);console.log("lastRow.shape:",m.shape);const g=m.reshape([29]);g.print(),g.print();const y=a.softmax(g,-1);y.print(),a.multinomial(y,1).print()}catch(e){console.log(`failed inference ONNX model: ${e}.`),document.write(`failed inference ONNX model: ${e}.`)}}()})(),__webpack_exports__})()));